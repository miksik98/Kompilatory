Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    LPARENSQUARE
    RPARENSQUARE

Grammar

Rule 0     S' -> main_statements
Rule 1     main_statements -> LPARENCURLY statements RPARENCURLY main_statements
Rule 2     main_statements -> main_statements LPARENCURLY statements RPARENCURLY
Rule 3     main_statements -> main_statements main_statements
Rule 4     main_statements -> statements
Rule 5     main_statements -> loop_statement
Rule 6     loop_statement -> WHILE LPAREN condition RPAREN loop_instruction_statement
Rule 7     loop_statement -> FOR ID ASSIGN num_expression RANGE num_expression loop_instruction_statement
Rule 8     main_statements -> if_statement
Rule 9     else_statement -> ELSE instruction_statement
Rule 10    else_statement -> ELSE if_statement
Rule 11    if_statement -> IF LPAREN condition RPAREN instruction_statement
Rule 12    if_statement -> IF LPAREN condition RPAREN instruction_statement else_statement
Rule 13    loop_instruction_statement -> LPARENCURLY main_statements_break_continue RPARENCURLY
Rule 14    loop_instruction_statement -> statement SEMICOLON
Rule 15    loop_instruction_statement -> BREAK SEMICOLON
Rule 16    loop_instruction_statement -> CONTINUE SEMICOLON
Rule 17    loop_instruction_statement -> loop_statement
Rule 18    main_statements_break_continue -> main_statements
Rule 19    main_statements_break_continue -> if_break_continue
Rule 20    main_statements_break_continue -> main_statements_break_continue main_statements_break_continue
Rule 21    main_statements_break_continue -> main_statements_break_continue CONTINUE SEMICOLON main_statements_break_continue
Rule 22    main_statements_break_continue -> main_statements_break_continue BREAK SEMICOLON main_statements_break_continue
Rule 23    main_statements_break_continue -> empty
Rule 24    else_break_continue -> ELSE instruction_statement_break_continue
Rule 25    else_break_continue -> ELSE if_break_continue
Rule 26    if_break_continue -> IF LPAREN condition RPAREN instruction_statement_break_continue
Rule 27    if_break_continue -> IF LPAREN condition RPAREN instruction_statement_break_continue else_break_continue
Rule 28    instruction_statement_break_continue -> LPARENCURLY main_statements_break_continue RPARENCURLY
Rule 29    instruction_statement_break_continue -> LPARENCURLY empty RPARENCURLY
Rule 30    instruction_statement_break_continue -> statement SEMICOLON
Rule 31    instruction_statement_break_continue -> BREAK SEMICOLON
Rule 32    instruction_statement_break_continue -> CONTINUE SEMICOLON
Rule 33    instruction_statement -> LPARENCURLY main_statements RPARENCURLY
Rule 34    instruction_statement -> LPARENCURLY empty RPARENCURLY
Rule 35    instruction_statement -> statement SEMICOLON
Rule 36    condition -> num_expression EQUALITY num_expression
Rule 37    condition -> num_expression INEQUALITY num_expression
Rule 38    condition -> num_expression GREATER num_expression
Rule 39    condition -> num_expression GREATER_EQUAL num_expression
Rule 40    condition -> num_expression LESS num_expression
Rule 41    condition -> num_expression LESS_EQUAL num_expression
Rule 42    statements -> statement SEMICOLON statements
Rule 43    statements -> statement SEMICOLON
Rule 44    statement -> PRINT print_expression
Rule 45    print_expression -> expression
Rule 46    print_expression -> print_expression COMMA print_expression
Rule 47    expression -> num_expression
Rule 48    expression -> matrix_expression
Rule 49    expression -> STRING
Rule 50    statement -> ID ASSIGN STRING
Rule 51    statement -> ID MATRIX ASSIGN num_expression
Rule 52    statement -> ID MATRIX ADDASSIGN num_expression
Rule 53    statement -> ID MATRIX SUBASSIGN num_expression
Rule 54    statement -> ID MATRIX MULASSIGN num_expression
Rule 55    statement -> ID MATRIX DIVASSIGN num_expression
Rule 56    statement -> ID ASSIGN num_expression
Rule 57    statement -> ID ADDASSIGN num_expression
Rule 58    statement -> ID SUBASSIGN num_expression
Rule 59    statement -> ID MULASSIGN num_expression
Rule 60    statement -> ID DIVASSIGN num_expression
Rule 61    num_expression -> ID
Rule 62    matrix_expression -> ID
Rule 63    num_expression -> LPAREN num_expression RPAREN
Rule 64    matrix_expression -> LPAREN matrix_expression RPAREN
Rule 65    num_expression -> num_expression ADD num_expression
Rule 66    num_expression -> num_expression SUB num_expression
Rule 67    num_expression -> num_expression MUL num_expression
Rule 68    num_expression -> num_expression DIV num_expression
Rule 69    matrix_expression -> matrix_expression ADD matrix_expression
Rule 70    matrix_expression -> matrix_expression SUB matrix_expression
Rule 71    matrix_expression -> matrix_expression MUL matrix_expression
Rule 72    matrix_expression -> matrix_expression DIV matrix_expression
Rule 73    matrix_expression -> matrix_expression DOTADD matrix_expression
Rule 74    matrix_expression -> matrix_expression DOTSUB matrix_expression
Rule 75    matrix_expression -> matrix_expression DOTMUL matrix_expression
Rule 76    matrix_expression -> matrix_expression DOTDIV matrix_expression
Rule 77    statement -> ID ASSIGN matrix_expression
Rule 78    statement -> ID ADDASSIGN matrix_expression
Rule 79    statement -> ID SUBASSIGN matrix_expression
Rule 80    statement -> ID MULASSIGN matrix_expression
Rule 81    statement -> ID DIVASSIGN matrix_expression
Rule 82    num_expression -> SUB num_expression
Rule 83    matrix_expression -> SUB matrix_expression
Rule 84    matrix_expression -> matrix_expression TRANSPOSE
Rule 85    num_expression -> INTNUM
Rule 86    num_expression -> FLOATNUM
Rule 87    matrix_expression -> ZEROS LPAREN INTNUM RPAREN
Rule 88    matrix_expression -> ONES LPAREN INTNUM RPAREN
Rule 89    matrix_expression -> EYE LPAREN INTNUM RPAREN
Rule 90    matrix_expression -> MATRIX
Rule 91    statement -> return_statement
Rule 92    return_statement -> RETURN expression
Rule 93    empty -> <empty>

Terminals, with rules where they appear

ADD                  : 65 69
ADDASSIGN            : 52 57 78
ASSIGN               : 7 50 51 56 77
BREAK                : 15 22 31
COMMA                : 46
COMMENT              : 
CONTINUE             : 16 21 32
DIV                  : 68 72
DIVASSIGN            : 55 60 81
DOTADD               : 73
DOTDIV               : 76
DOTMUL               : 75
DOTSUB               : 74
ELSE                 : 9 10 24 25
EQUALITY             : 36
EYE                  : 89
FLOATNUM             : 86
FOR                  : 7
GREATER              : 38
GREATER_EQUAL        : 39
ID                   : 7 50 51 52 53 54 55 56 57 58 59 60 61 62 77 78 79 80 81
IF                   : 11 12 26 27
INEQUALITY           : 37
INTNUM               : 85 87 88 89
LESS                 : 40
LESS_EQUAL           : 41
LPAREN               : 6 11 12 26 27 63 64 87 88 89
LPARENCURLY          : 1 2 13 28 29 33 34
LPARENSQUARE         : 
MATRIX               : 51 52 53 54 55 90
MUL                  : 67 71
MULASSIGN            : 54 59 80
ONES                 : 88
PRINT                : 44
RANGE                : 7
RETURN               : 92
RPAREN               : 6 11 12 26 27 63 64 87 88 89
RPARENCURLY          : 1 2 13 28 29 33 34
RPARENSQUARE         : 
SEMICOLON            : 14 15 16 21 22 30 31 32 35 42 43
STRING               : 49 50
SUB                  : 66 70 82 83
SUBASSIGN            : 53 58 79
TRANSPOSE            : 84
WHILE                : 6
ZEROS                : 87
error                : 

Nonterminals, with rules where they appear

condition            : 6 11 12 26 27
else_break_continue  : 27
else_statement       : 12
empty                : 23 29 34
expression           : 45 92
if_break_continue    : 19 25
if_statement         : 8 10
instruction_statement : 9 11 12
instruction_statement_break_continue : 24 26 27
loop_instruction_statement : 6 7
loop_statement       : 5 17
main_statements      : 1 2 3 3 18 33 0
main_statements_break_continue : 13 20 20 21 21 22 22 28
matrix_expression    : 48 64 69 69 70 70 71 71 72 72 73 73 74 74 75 75 76 76 77 78 79 80 81 83 84
num_expression       : 7 7 36 36 37 37 38 38 39 39 40 40 41 41 47 51 52 53 54 55 56 57 58 59 60 63 65 65 66 66 67 67 68 68 82
print_expression     : 44 46 46
return_statement     : 91
statement            : 14 30 35 42 43
statements           : 1 2 4 42

Parsing method: LALR

state 0

    (0) S' -> . main_statements
    (1) main_statements -> . LPARENCURLY statements RPARENCURLY main_statements
    (2) main_statements -> . main_statements LPARENCURLY statements RPARENCURLY
    (3) main_statements -> . main_statements main_statements
    (4) main_statements -> . statements
    (5) main_statements -> . loop_statement
    (8) main_statements -> . if_statement
    (42) statements -> . statement SEMICOLON statements
    (43) statements -> . statement SEMICOLON
    (6) loop_statement -> . WHILE LPAREN condition RPAREN loop_instruction_statement
    (7) loop_statement -> . FOR ID ASSIGN num_expression RANGE num_expression loop_instruction_statement
    (11) if_statement -> . IF LPAREN condition RPAREN instruction_statement
    (12) if_statement -> . IF LPAREN condition RPAREN instruction_statement else_statement
    (44) statement -> . PRINT print_expression
    (50) statement -> . ID ASSIGN STRING
    (51) statement -> . ID MATRIX ASSIGN num_expression
    (52) statement -> . ID MATRIX ADDASSIGN num_expression
    (53) statement -> . ID MATRIX SUBASSIGN num_expression
    (54) statement -> . ID MATRIX MULASSIGN num_expression
    (55) statement -> . ID MATRIX DIVASSIGN num_expression
    (56) statement -> . ID ASSIGN num_expression
    (57) statement -> . ID ADDASSIGN num_expression
    (58) statement -> . ID SUBASSIGN num_expression
    (59) statement -> . ID MULASSIGN num_expression
    (60) statement -> . ID DIVASSIGN num_expression
    (77) statement -> . ID ASSIGN matrix_expression
    (78) statement -> . ID ADDASSIGN matrix_expression
    (79) statement -> . ID SUBASSIGN matrix_expression
    (80) statement -> . ID MULASSIGN matrix_expression
    (81) statement -> . ID DIVASSIGN matrix_expression
    (91) statement -> . return_statement
    (92) return_statement -> . RETURN expression

    LPARENCURLY     shift and go to state 2
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    IF              shift and go to state 10
    PRINT           shift and go to state 11
    ID              shift and go to state 9
    RETURN          shift and go to state 13

    main_statements                shift and go to state 1
    statements                     shift and go to state 3
    loop_statement                 shift and go to state 4
    if_statement                   shift and go to state 5
    statement                      shift and go to state 6
    return_statement               shift and go to state 12

state 1

    (0) S' -> main_statements .
    (2) main_statements -> main_statements . LPARENCURLY statements RPARENCURLY
    (3) main_statements -> main_statements . main_statements
    (1) main_statements -> . LPARENCURLY statements RPARENCURLY main_statements
    (2) main_statements -> . main_statements LPARENCURLY statements RPARENCURLY
    (3) main_statements -> . main_statements main_statements
    (4) main_statements -> . statements
    (5) main_statements -> . loop_statement
    (8) main_statements -> . if_statement
    (42) statements -> . statement SEMICOLON statements
    (43) statements -> . statement SEMICOLON
    (6) loop_statement -> . WHILE LPAREN condition RPAREN loop_instruction_statement
    (7) loop_statement -> . FOR ID ASSIGN num_expression RANGE num_expression loop_instruction_statement
    (11) if_statement -> . IF LPAREN condition RPAREN instruction_statement
    (12) if_statement -> . IF LPAREN condition RPAREN instruction_statement else_statement
    (44) statement -> . PRINT print_expression
    (50) statement -> . ID ASSIGN STRING
    (51) statement -> . ID MATRIX ASSIGN num_expression
    (52) statement -> . ID MATRIX ADDASSIGN num_expression
    (53) statement -> . ID MATRIX SUBASSIGN num_expression
    (54) statement -> . ID MATRIX MULASSIGN num_expression
    (55) statement -> . ID MATRIX DIVASSIGN num_expression
    (56) statement -> . ID ASSIGN num_expression
    (57) statement -> . ID ADDASSIGN num_expression
    (58) statement -> . ID SUBASSIGN num_expression
    (59) statement -> . ID MULASSIGN num_expression
    (60) statement -> . ID DIVASSIGN num_expression
    (77) statement -> . ID ASSIGN matrix_expression
    (78) statement -> . ID ADDASSIGN matrix_expression
    (79) statement -> . ID SUBASSIGN matrix_expression
    (80) statement -> . ID MULASSIGN matrix_expression
    (81) statement -> . ID DIVASSIGN matrix_expression
    (91) statement -> . return_statement
    (92) return_statement -> . RETURN expression

    LPARENCURLY     shift and go to state 15
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    IF              shift and go to state 10
    PRINT           shift and go to state 11
    ID              shift and go to state 9
    RETURN          shift and go to state 13

    main_statements                shift and go to state 14
    statements                     shift and go to state 3
    loop_statement                 shift and go to state 4
    if_statement                   shift and go to state 5
    statement                      shift and go to state 6
    return_statement               shift and go to state 12

state 2

    (1) main_statements -> LPARENCURLY . statements RPARENCURLY main_statements
    (42) statements -> . statement SEMICOLON statements
    (43) statements -> . statement SEMICOLON
    (44) statement -> . PRINT print_expression
    (50) statement -> . ID ASSIGN STRING
    (51) statement -> . ID MATRIX ASSIGN num_expression
    (52) statement -> . ID MATRIX ADDASSIGN num_expression
    (53) statement -> . ID MATRIX SUBASSIGN num_expression
    (54) statement -> . ID MATRIX MULASSIGN num_expression
    (55) statement -> . ID MATRIX DIVASSIGN num_expression
    (56) statement -> . ID ASSIGN num_expression
    (57) statement -> . ID ADDASSIGN num_expression
    (58) statement -> . ID SUBASSIGN num_expression
    (59) statement -> . ID MULASSIGN num_expression
    (60) statement -> . ID DIVASSIGN num_expression
    (77) statement -> . ID ASSIGN matrix_expression
    (78) statement -> . ID ADDASSIGN matrix_expression
    (79) statement -> . ID SUBASSIGN matrix_expression
    (80) statement -> . ID MULASSIGN matrix_expression
    (81) statement -> . ID DIVASSIGN matrix_expression
    (91) statement -> . return_statement
    (92) return_statement -> . RETURN expression

    PRINT           shift and go to state 11
    ID              shift and go to state 9
    RETURN          shift and go to state 13

    statements                     shift and go to state 16
    statement                      shift and go to state 6
    return_statement               shift and go to state 12

state 3

    (4) main_statements -> statements .

    LPARENCURLY     reduce using rule 4 (main_statements -> statements .)
    WHILE           reduce using rule 4 (main_statements -> statements .)
    FOR             reduce using rule 4 (main_statements -> statements .)
    IF              reduce using rule 4 (main_statements -> statements .)
    PRINT           reduce using rule 4 (main_statements -> statements .)
    ID              reduce using rule 4 (main_statements -> statements .)
    RETURN          reduce using rule 4 (main_statements -> statements .)
    $end            reduce using rule 4 (main_statements -> statements .)
    RPARENCURLY     reduce using rule 4 (main_statements -> statements .)
    CONTINUE        reduce using rule 4 (main_statements -> statements .)
    BREAK           reduce using rule 4 (main_statements -> statements .)


state 4

    (5) main_statements -> loop_statement .

    LPARENCURLY     reduce using rule 5 (main_statements -> loop_statement .)
    WHILE           reduce using rule 5 (main_statements -> loop_statement .)
    FOR             reduce using rule 5 (main_statements -> loop_statement .)
    IF              reduce using rule 5 (main_statements -> loop_statement .)
    PRINT           reduce using rule 5 (main_statements -> loop_statement .)
    ID              reduce using rule 5 (main_statements -> loop_statement .)
    RETURN          reduce using rule 5 (main_statements -> loop_statement .)
    $end            reduce using rule 5 (main_statements -> loop_statement .)
    RPARENCURLY     reduce using rule 5 (main_statements -> loop_statement .)
    CONTINUE        reduce using rule 5 (main_statements -> loop_statement .)
    BREAK           reduce using rule 5 (main_statements -> loop_statement .)


state 5

    (8) main_statements -> if_statement .

    LPARENCURLY     reduce using rule 8 (main_statements -> if_statement .)
    WHILE           reduce using rule 8 (main_statements -> if_statement .)
    FOR             reduce using rule 8 (main_statements -> if_statement .)
    IF              reduce using rule 8 (main_statements -> if_statement .)
    PRINT           reduce using rule 8 (main_statements -> if_statement .)
    ID              reduce using rule 8 (main_statements -> if_statement .)
    RETURN          reduce using rule 8 (main_statements -> if_statement .)
    $end            reduce using rule 8 (main_statements -> if_statement .)
    RPARENCURLY     reduce using rule 8 (main_statements -> if_statement .)
    CONTINUE        reduce using rule 8 (main_statements -> if_statement .)
    BREAK           reduce using rule 8 (main_statements -> if_statement .)


state 6

    (42) statements -> statement . SEMICOLON statements
    (43) statements -> statement . SEMICOLON

    SEMICOLON       shift and go to state 17


state 7

    (6) loop_statement -> WHILE . LPAREN condition RPAREN loop_instruction_statement

    LPAREN          shift and go to state 18


state 8

    (7) loop_statement -> FOR . ID ASSIGN num_expression RANGE num_expression loop_instruction_statement

    ID              shift and go to state 19


state 9

    (50) statement -> ID . ASSIGN STRING
    (51) statement -> ID . MATRIX ASSIGN num_expression
    (52) statement -> ID . MATRIX ADDASSIGN num_expression
    (53) statement -> ID . MATRIX SUBASSIGN num_expression
    (54) statement -> ID . MATRIX MULASSIGN num_expression
    (55) statement -> ID . MATRIX DIVASSIGN num_expression
    (56) statement -> ID . ASSIGN num_expression
    (57) statement -> ID . ADDASSIGN num_expression
    (58) statement -> ID . SUBASSIGN num_expression
    (59) statement -> ID . MULASSIGN num_expression
    (60) statement -> ID . DIVASSIGN num_expression
    (77) statement -> ID . ASSIGN matrix_expression
    (78) statement -> ID . ADDASSIGN matrix_expression
    (79) statement -> ID . SUBASSIGN matrix_expression
    (80) statement -> ID . MULASSIGN matrix_expression
    (81) statement -> ID . DIVASSIGN matrix_expression

    ASSIGN          shift and go to state 20
    MATRIX          shift and go to state 21
    ADDASSIGN       shift and go to state 22
    SUBASSIGN       shift and go to state 23
    MULASSIGN       shift and go to state 24
    DIVASSIGN       shift and go to state 25


state 10

    (11) if_statement -> IF . LPAREN condition RPAREN instruction_statement
    (12) if_statement -> IF . LPAREN condition RPAREN instruction_statement else_statement

    LPAREN          shift and go to state 26


state 11

    (44) statement -> PRINT . print_expression
    (45) print_expression -> . expression
    (46) print_expression -> . print_expression COMMA print_expression
    (47) expression -> . num_expression
    (48) expression -> . matrix_expression
    (49) expression -> . STRING
    (61) num_expression -> . ID
    (63) num_expression -> . LPAREN num_expression RPAREN
    (65) num_expression -> . num_expression ADD num_expression
    (66) num_expression -> . num_expression SUB num_expression
    (67) num_expression -> . num_expression MUL num_expression
    (68) num_expression -> . num_expression DIV num_expression
    (82) num_expression -> . SUB num_expression
    (85) num_expression -> . INTNUM
    (86) num_expression -> . FLOATNUM
    (62) matrix_expression -> . ID
    (64) matrix_expression -> . LPAREN matrix_expression RPAREN
    (69) matrix_expression -> . matrix_expression ADD matrix_expression
    (70) matrix_expression -> . matrix_expression SUB matrix_expression
    (71) matrix_expression -> . matrix_expression MUL matrix_expression
    (72) matrix_expression -> . matrix_expression DIV matrix_expression
    (73) matrix_expression -> . matrix_expression DOTADD matrix_expression
    (74) matrix_expression -> . matrix_expression DOTSUB matrix_expression
    (75) matrix_expression -> . matrix_expression DOTMUL matrix_expression
    (76) matrix_expression -> . matrix_expression DOTDIV matrix_expression
    (83) matrix_expression -> . SUB matrix_expression
    (84) matrix_expression -> . matrix_expression TRANSPOSE
    (87) matrix_expression -> . ZEROS LPAREN INTNUM RPAREN
    (88) matrix_expression -> . ONES LPAREN INTNUM RPAREN
    (89) matrix_expression -> . EYE LPAREN INTNUM RPAREN
    (90) matrix_expression -> . MATRIX

    STRING          shift and go to state 31
    ID              shift and go to state 32
    LPAREN          shift and go to state 33
    SUB             shift and go to state 34
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 36
    ZEROS           shift and go to state 37
    ONES            shift and go to state 38
    EYE             shift and go to state 39
    MATRIX          shift and go to state 40

    print_expression               shift and go to state 27
    expression                     shift and go to state 28
    num_expression                 shift and go to state 29
    matrix_expression              shift and go to state 30

state 12

    (91) statement -> return_statement .

    SEMICOLON       reduce using rule 91 (statement -> return_statement .)


state 13

    (92) return_statement -> RETURN . expression
    (47) expression -> . num_expression
    (48) expression -> . matrix_expression
    (49) expression -> . STRING
    (61) num_expression -> . ID
    (63) num_expression -> . LPAREN num_expression RPAREN
    (65) num_expression -> . num_expression ADD num_expression
    (66) num_expression -> . num_expression SUB num_expression
    (67) num_expression -> . num_expression MUL num_expression
    (68) num_expression -> . num_expression DIV num_expression
    (82) num_expression -> . SUB num_expression
    (85) num_expression -> . INTNUM
    (86) num_expression -> . FLOATNUM
    (62) matrix_expression -> . ID
    (64) matrix_expression -> . LPAREN matrix_expression RPAREN
    (69) matrix_expression -> . matrix_expression ADD matrix_expression
    (70) matrix_expression -> . matrix_expression SUB matrix_expression
    (71) matrix_expression -> . matrix_expression MUL matrix_expression
    (72) matrix_expression -> . matrix_expression DIV matrix_expression
    (73) matrix_expression -> . matrix_expression DOTADD matrix_expression
    (74) matrix_expression -> . matrix_expression DOTSUB matrix_expression
    (75) matrix_expression -> . matrix_expression DOTMUL matrix_expression
    (76) matrix_expression -> . matrix_expression DOTDIV matrix_expression
    (83) matrix_expression -> . SUB matrix_expression
    (84) matrix_expression -> . matrix_expression TRANSPOSE
    (87) matrix_expression -> . ZEROS LPAREN INTNUM RPAREN
    (88) matrix_expression -> . ONES LPAREN INTNUM RPAREN
    (89) matrix_expression -> . EYE LPAREN INTNUM RPAREN
    (90) matrix_expression -> . MATRIX

    STRING          shift and go to state 31
    ID              shift and go to state 32
    LPAREN          shift and go to state 33
    SUB             shift and go to state 34
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 36
    ZEROS           shift and go to state 37
    ONES            shift and go to state 38
    EYE             shift and go to state 39
    MATRIX          shift and go to state 40

    expression                     shift and go to state 41
    num_expression                 shift and go to state 29
    matrix_expression              shift and go to state 30

state 14

    (3) main_statements -> main_statements main_statements .
    (2) main_statements -> main_statements . LPARENCURLY statements RPARENCURLY
    (3) main_statements -> main_statements . main_statements
    (1) main_statements -> . LPARENCURLY statements RPARENCURLY main_statements
    (2) main_statements -> . main_statements LPARENCURLY statements RPARENCURLY
    (3) main_statements -> . main_statements main_statements
    (4) main_statements -> . statements
    (5) main_statements -> . loop_statement
    (8) main_statements -> . if_statement
    (42) statements -> . statement SEMICOLON statements
    (43) statements -> . statement SEMICOLON
    (6) loop_statement -> . WHILE LPAREN condition RPAREN loop_instruction_statement
    (7) loop_statement -> . FOR ID ASSIGN num_expression RANGE num_expression loop_instruction_statement
    (11) if_statement -> . IF LPAREN condition RPAREN instruction_statement
    (12) if_statement -> . IF LPAREN condition RPAREN instruction_statement else_statement
    (44) statement -> . PRINT print_expression
    (50) statement -> . ID ASSIGN STRING
    (51) statement -> . ID MATRIX ASSIGN num_expression
    (52) statement -> . ID MATRIX ADDASSIGN num_expression
    (53) statement -> . ID MATRIX SUBASSIGN num_expression
    (54) statement -> . ID MATRIX MULASSIGN num_expression
    (55) statement -> . ID MATRIX DIVASSIGN num_expression
    (56) statement -> . ID ASSIGN num_expression
    (57) statement -> . ID ADDASSIGN num_expression
    (58) statement -> . ID SUBASSIGN num_expression
    (59) statement -> . ID MULASSIGN num_expression
    (60) statement -> . ID DIVASSIGN num_expression
    (77) statement -> . ID ASSIGN matrix_expression
    (78) statement -> . ID ADDASSIGN matrix_expression
    (79) statement -> . ID SUBASSIGN matrix_expression
    (80) statement -> . ID MULASSIGN matrix_expression
    (81) statement -> . ID DIVASSIGN matrix_expression
    (91) statement -> . return_statement
    (92) return_statement -> . RETURN expression

  ! shift/reduce conflict for LPARENCURLY resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
    $end            reduce using rule 3 (main_statements -> main_statements main_statements .)
    RPARENCURLY     reduce using rule 3 (main_statements -> main_statements main_statements .)
    CONTINUE        reduce using rule 3 (main_statements -> main_statements main_statements .)
    BREAK           reduce using rule 3 (main_statements -> main_statements main_statements .)
    LPARENCURLY     shift and go to state 15
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    IF              shift and go to state 10
    PRINT           shift and go to state 11
    ID              shift and go to state 9
    RETURN          shift and go to state 13

  ! LPARENCURLY     [ reduce using rule 3 (main_statements -> main_statements main_statements .) ]
  ! WHILE           [ reduce using rule 3 (main_statements -> main_statements main_statements .) ]
  ! FOR             [ reduce using rule 3 (main_statements -> main_statements main_statements .) ]
  ! IF              [ reduce using rule 3 (main_statements -> main_statements main_statements .) ]
  ! PRINT           [ reduce using rule 3 (main_statements -> main_statements main_statements .) ]
  ! ID              [ reduce using rule 3 (main_statements -> main_statements main_statements .) ]
  ! RETURN          [ reduce using rule 3 (main_statements -> main_statements main_statements .) ]

    main_statements                shift and go to state 14
    statements                     shift and go to state 3
    loop_statement                 shift and go to state 4
    if_statement                   shift and go to state 5
    statement                      shift and go to state 6
    return_statement               shift and go to state 12

state 15

    (2) main_statements -> main_statements LPARENCURLY . statements RPARENCURLY
    (1) main_statements -> LPARENCURLY . statements RPARENCURLY main_statements
    (42) statements -> . statement SEMICOLON statements
    (43) statements -> . statement SEMICOLON
    (44) statement -> . PRINT print_expression
    (50) statement -> . ID ASSIGN STRING
    (51) statement -> . ID MATRIX ASSIGN num_expression
    (52) statement -> . ID MATRIX ADDASSIGN num_expression
    (53) statement -> . ID MATRIX SUBASSIGN num_expression
    (54) statement -> . ID MATRIX MULASSIGN num_expression
    (55) statement -> . ID MATRIX DIVASSIGN num_expression
    (56) statement -> . ID ASSIGN num_expression
    (57) statement -> . ID ADDASSIGN num_expression
    (58) statement -> . ID SUBASSIGN num_expression
    (59) statement -> . ID MULASSIGN num_expression
    (60) statement -> . ID DIVASSIGN num_expression
    (77) statement -> . ID ASSIGN matrix_expression
    (78) statement -> . ID ADDASSIGN matrix_expression
    (79) statement -> . ID SUBASSIGN matrix_expression
    (80) statement -> . ID MULASSIGN matrix_expression
    (81) statement -> . ID DIVASSIGN matrix_expression
    (91) statement -> . return_statement
    (92) return_statement -> . RETURN expression

    PRINT           shift and go to state 11
    ID              shift and go to state 9
    RETURN          shift and go to state 13

    statements                     shift and go to state 42
    statement                      shift and go to state 6
    return_statement               shift and go to state 12

state 16

    (1) main_statements -> LPARENCURLY statements . RPARENCURLY main_statements

    RPARENCURLY     shift and go to state 43


state 17

    (42) statements -> statement SEMICOLON . statements
    (43) statements -> statement SEMICOLON .
    (42) statements -> . statement SEMICOLON statements
    (43) statements -> . statement SEMICOLON
    (44) statement -> . PRINT print_expression
    (50) statement -> . ID ASSIGN STRING
    (51) statement -> . ID MATRIX ASSIGN num_expression
    (52) statement -> . ID MATRIX ADDASSIGN num_expression
    (53) statement -> . ID MATRIX SUBASSIGN num_expression
    (54) statement -> . ID MATRIX MULASSIGN num_expression
    (55) statement -> . ID MATRIX DIVASSIGN num_expression
    (56) statement -> . ID ASSIGN num_expression
    (57) statement -> . ID ADDASSIGN num_expression
    (58) statement -> . ID SUBASSIGN num_expression
    (59) statement -> . ID MULASSIGN num_expression
    (60) statement -> . ID DIVASSIGN num_expression
    (77) statement -> . ID ASSIGN matrix_expression
    (78) statement -> . ID ADDASSIGN matrix_expression
    (79) statement -> . ID SUBASSIGN matrix_expression
    (80) statement -> . ID MULASSIGN matrix_expression
    (81) statement -> . ID DIVASSIGN matrix_expression
    (91) statement -> . return_statement
    (92) return_statement -> . RETURN expression

  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
    LPARENCURLY     reduce using rule 43 (statements -> statement SEMICOLON .)
    WHILE           reduce using rule 43 (statements -> statement SEMICOLON .)
    FOR             reduce using rule 43 (statements -> statement SEMICOLON .)
    IF              reduce using rule 43 (statements -> statement SEMICOLON .)
    $end            reduce using rule 43 (statements -> statement SEMICOLON .)
    RPARENCURLY     reduce using rule 43 (statements -> statement SEMICOLON .)
    CONTINUE        reduce using rule 43 (statements -> statement SEMICOLON .)
    BREAK           reduce using rule 43 (statements -> statement SEMICOLON .)
    PRINT           shift and go to state 11
    ID              shift and go to state 9
    RETURN          shift and go to state 13

  ! PRINT           [ reduce using rule 43 (statements -> statement SEMICOLON .) ]
  ! ID              [ reduce using rule 43 (statements -> statement SEMICOLON .) ]
  ! RETURN          [ reduce using rule 43 (statements -> statement SEMICOLON .) ]

    statement                      shift and go to state 6
    statements                     shift and go to state 44
    return_statement               shift and go to state 12

state 18

    (6) loop_statement -> WHILE LPAREN . condition RPAREN loop_instruction_statement
    (36) condition -> . num_expression EQUALITY num_expression
    (37) condition -> . num_expression INEQUALITY num_expression
    (38) condition -> . num_expression GREATER num_expression
    (39) condition -> . num_expression GREATER_EQUAL num_expression
    (40) condition -> . num_expression LESS num_expression
    (41) condition -> . num_expression LESS_EQUAL num_expression
    (61) num_expression -> . ID
    (63) num_expression -> . LPAREN num_expression RPAREN
    (65) num_expression -> . num_expression ADD num_expression
    (66) num_expression -> . num_expression SUB num_expression
    (67) num_expression -> . num_expression MUL num_expression
    (68) num_expression -> . num_expression DIV num_expression
    (82) num_expression -> . SUB num_expression
    (85) num_expression -> . INTNUM
    (86) num_expression -> . FLOATNUM

    ID              shift and go to state 48
    LPAREN          shift and go to state 45
    SUB             shift and go to state 49
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 36

    condition                      shift and go to state 46
    num_expression                 shift and go to state 47

state 19

    (7) loop_statement -> FOR ID . ASSIGN num_expression RANGE num_expression loop_instruction_statement

    ASSIGN          shift and go to state 50


state 20

    (50) statement -> ID ASSIGN . STRING
    (56) statement -> ID ASSIGN . num_expression
    (77) statement -> ID ASSIGN . matrix_expression
    (61) num_expression -> . ID
    (63) num_expression -> . LPAREN num_expression RPAREN
    (65) num_expression -> . num_expression ADD num_expression
    (66) num_expression -> . num_expression SUB num_expression
    (67) num_expression -> . num_expression MUL num_expression
    (68) num_expression -> . num_expression DIV num_expression
    (82) num_expression -> . SUB num_expression
    (85) num_expression -> . INTNUM
    (86) num_expression -> . FLOATNUM
    (62) matrix_expression -> . ID
    (64) matrix_expression -> . LPAREN matrix_expression RPAREN
    (69) matrix_expression -> . matrix_expression ADD matrix_expression
    (70) matrix_expression -> . matrix_expression SUB matrix_expression
    (71) matrix_expression -> . matrix_expression MUL matrix_expression
    (72) matrix_expression -> . matrix_expression DIV matrix_expression
    (73) matrix_expression -> . matrix_expression DOTADD matrix_expression
    (74) matrix_expression -> . matrix_expression DOTSUB matrix_expression
    (75) matrix_expression -> . matrix_expression DOTMUL matrix_expression
    (76) matrix_expression -> . matrix_expression DOTDIV matrix_expression
    (83) matrix_expression -> . SUB matrix_expression
    (84) matrix_expression -> . matrix_expression TRANSPOSE
    (87) matrix_expression -> . ZEROS LPAREN INTNUM RPAREN
    (88) matrix_expression -> . ONES LPAREN INTNUM RPAREN
    (89) matrix_expression -> . EYE LPAREN INTNUM RPAREN
    (90) matrix_expression -> . MATRIX

    STRING          shift and go to state 51
    ID              shift and go to state 32
    LPAREN          shift and go to state 33
    SUB             shift and go to state 34
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 36
    ZEROS           shift and go to state 37
    ONES            shift and go to state 38
    EYE             shift and go to state 39
    MATRIX          shift and go to state 40

    num_expression                 shift and go to state 52
    matrix_expression              shift and go to state 53

state 21

    (51) statement -> ID MATRIX . ASSIGN num_expression
    (52) statement -> ID MATRIX . ADDASSIGN num_expression
    (53) statement -> ID MATRIX . SUBASSIGN num_expression
    (54) statement -> ID MATRIX . MULASSIGN num_expression
    (55) statement -> ID MATRIX . DIVASSIGN num_expression

    ASSIGN          shift and go to state 54
    ADDASSIGN       shift and go to state 55
    SUBASSIGN       shift and go to state 56
    MULASSIGN       shift and go to state 57
    DIVASSIGN       shift and go to state 58


state 22

    (57) statement -> ID ADDASSIGN . num_expression
    (78) statement -> ID ADDASSIGN . matrix_expression
    (61) num_expression -> . ID
    (63) num_expression -> . LPAREN num_expression RPAREN
    (65) num_expression -> . num_expression ADD num_expression
    (66) num_expression -> . num_expression SUB num_expression
    (67) num_expression -> . num_expression MUL num_expression
    (68) num_expression -> . num_expression DIV num_expression
    (82) num_expression -> . SUB num_expression
    (85) num_expression -> . INTNUM
    (86) num_expression -> . FLOATNUM
    (62) matrix_expression -> . ID
    (64) matrix_expression -> . LPAREN matrix_expression RPAREN
    (69) matrix_expression -> . matrix_expression ADD matrix_expression
    (70) matrix_expression -> . matrix_expression SUB matrix_expression
    (71) matrix_expression -> . matrix_expression MUL matrix_expression
    (72) matrix_expression -> . matrix_expression DIV matrix_expression
    (73) matrix_expression -> . matrix_expression DOTADD matrix_expression
    (74) matrix_expression -> . matrix_expression DOTSUB matrix_expression
    (75) matrix_expression -> . matrix_expression DOTMUL matrix_expression
    (76) matrix_expression -> . matrix_expression DOTDIV matrix_expression
    (83) matrix_expression -> . SUB matrix_expression
    (84) matrix_expression -> . matrix_expression TRANSPOSE
    (87) matrix_expression -> . ZEROS LPAREN INTNUM RPAREN
    (88) matrix_expression -> . ONES LPAREN INTNUM RPAREN
    (89) matrix_expression -> . EYE LPAREN INTNUM RPAREN
    (90) matrix_expression -> . MATRIX

    ID              shift and go to state 32
    LPAREN          shift and go to state 33
    SUB             shift and go to state 34
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 36
    ZEROS           shift and go to state 37
    ONES            shift and go to state 38
    EYE             shift and go to state 39
    MATRIX          shift and go to state 40

    num_expression                 shift and go to state 59
    matrix_expression              shift and go to state 60

state 23

    (58) statement -> ID SUBASSIGN . num_expression
    (79) statement -> ID SUBASSIGN . matrix_expression
    (61) num_expression -> . ID
    (63) num_expression -> . LPAREN num_expression RPAREN
    (65) num_expression -> . num_expression ADD num_expression
    (66) num_expression -> . num_expression SUB num_expression
    (67) num_expression -> . num_expression MUL num_expression
    (68) num_expression -> . num_expression DIV num_expression
    (82) num_expression -> . SUB num_expression
    (85) num_expression -> . INTNUM
    (86) num_expression -> . FLOATNUM
    (62) matrix_expression -> . ID
    (64) matrix_expression -> . LPAREN matrix_expression RPAREN
    (69) matrix_expression -> . matrix_expression ADD matrix_expression
    (70) matrix_expression -> . matrix_expression SUB matrix_expression
    (71) matrix_expression -> . matrix_expression MUL matrix_expression
    (72) matrix_expression -> . matrix_expression DIV matrix_expression
    (73) matrix_expression -> . matrix_expression DOTADD matrix_expression
    (74) matrix_expression -> . matrix_expression DOTSUB matrix_expression
    (75) matrix_expression -> . matrix_expression DOTMUL matrix_expression
    (76) matrix_expression -> . matrix_expression DOTDIV matrix_expression
    (83) matrix_expression -> . SUB matrix_expression
    (84) matrix_expression -> . matrix_expression TRANSPOSE
    (87) matrix_expression -> . ZEROS LPAREN INTNUM RPAREN
    (88) matrix_expression -> . ONES LPAREN INTNUM RPAREN
    (89) matrix_expression -> . EYE LPAREN INTNUM RPAREN
    (90) matrix_expression -> . MATRIX

    ID              shift and go to state 32
    LPAREN          shift and go to state 33
    SUB             shift and go to state 34
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 36
    ZEROS           shift and go to state 37
    ONES            shift and go to state 38
    EYE             shift and go to state 39
    MATRIX          shift and go to state 40

    num_expression                 shift and go to state 61
    matrix_expression              shift and go to state 62

state 24

    (59) statement -> ID MULASSIGN . num_expression
    (80) statement -> ID MULASSIGN . matrix_expression
    (61) num_expression -> . ID
    (63) num_expression -> . LPAREN num_expression RPAREN
    (65) num_expression -> . num_expression ADD num_expression
    (66) num_expression -> . num_expression SUB num_expression
    (67) num_expression -> . num_expression MUL num_expression
    (68) num_expression -> . num_expression DIV num_expression
    (82) num_expression -> . SUB num_expression
    (85) num_expression -> . INTNUM
    (86) num_expression -> . FLOATNUM
    (62) matrix_expression -> . ID
    (64) matrix_expression -> . LPAREN matrix_expression RPAREN
    (69) matrix_expression -> . matrix_expression ADD matrix_expression
    (70) matrix_expression -> . matrix_expression SUB matrix_expression
    (71) matrix_expression -> . matrix_expression MUL matrix_expression
    (72) matrix_expression -> . matrix_expression DIV matrix_expression
    (73) matrix_expression -> . matrix_expression DOTADD matrix_expression
    (74) matrix_expression -> . matrix_expression DOTSUB matrix_expression
    (75) matrix_expression -> . matrix_expression DOTMUL matrix_expression
    (76) matrix_expression -> . matrix_expression DOTDIV matrix_expression
    (83) matrix_expression -> . SUB matrix_expression
    (84) matrix_expression -> . matrix_expression TRANSPOSE
    (87) matrix_expression -> . ZEROS LPAREN INTNUM RPAREN
    (88) matrix_expression -> . ONES LPAREN INTNUM RPAREN
    (89) matrix_expression -> . EYE LPAREN INTNUM RPAREN
    (90) matrix_expression -> . MATRIX

    ID              shift and go to state 32
    LPAREN          shift and go to state 33
    SUB             shift and go to state 34
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 36
    ZEROS           shift and go to state 37
    ONES            shift and go to state 38
    EYE             shift and go to state 39
    MATRIX          shift and go to state 40

    num_expression                 shift and go to state 63
    matrix_expression              shift and go to state 64

state 25

    (60) statement -> ID DIVASSIGN . num_expression
    (81) statement -> ID DIVASSIGN . matrix_expression
    (61) num_expression -> . ID
    (63) num_expression -> . LPAREN num_expression RPAREN
    (65) num_expression -> . num_expression ADD num_expression
    (66) num_expression -> . num_expression SUB num_expression
    (67) num_expression -> . num_expression MUL num_expression
    (68) num_expression -> . num_expression DIV num_expression
    (82) num_expression -> . SUB num_expression
    (85) num_expression -> . INTNUM
    (86) num_expression -> . FLOATNUM
    (62) matrix_expression -> . ID
    (64) matrix_expression -> . LPAREN matrix_expression RPAREN
    (69) matrix_expression -> . matrix_expression ADD matrix_expression
    (70) matrix_expression -> . matrix_expression SUB matrix_expression
    (71) matrix_expression -> . matrix_expression MUL matrix_expression
    (72) matrix_expression -> . matrix_expression DIV matrix_expression
    (73) matrix_expression -> . matrix_expression DOTADD matrix_expression
    (74) matrix_expression -> . matrix_expression DOTSUB matrix_expression
    (75) matrix_expression -> . matrix_expression DOTMUL matrix_expression
    (76) matrix_expression -> . matrix_expression DOTDIV matrix_expression
    (83) matrix_expression -> . SUB matrix_expression
    (84) matrix_expression -> . matrix_expression TRANSPOSE
    (87) matrix_expression -> . ZEROS LPAREN INTNUM RPAREN
    (88) matrix_expression -> . ONES LPAREN INTNUM RPAREN
    (89) matrix_expression -> . EYE LPAREN INTNUM RPAREN
    (90) matrix_expression -> . MATRIX

    ID              shift and go to state 32
    LPAREN          shift and go to state 33
    SUB             shift and go to state 34
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 36
    ZEROS           shift and go to state 37
    ONES            shift and go to state 38
    EYE             shift and go to state 39
    MATRIX          shift and go to state 40

    num_expression                 shift and go to state 65
    matrix_expression              shift and go to state 66

state 26

    (11) if_statement -> IF LPAREN . condition RPAREN instruction_statement
    (12) if_statement -> IF LPAREN . condition RPAREN instruction_statement else_statement
    (36) condition -> . num_expression EQUALITY num_expression
    (37) condition -> . num_expression INEQUALITY num_expression
    (38) condition -> . num_expression GREATER num_expression
    (39) condition -> . num_expression GREATER_EQUAL num_expression
    (40) condition -> . num_expression LESS num_expression
    (41) condition -> . num_expression LESS_EQUAL num_expression
    (61) num_expression -> . ID
    (63) num_expression -> . LPAREN num_expression RPAREN
    (65) num_expression -> . num_expression ADD num_expression
    (66) num_expression -> . num_expression SUB num_expression
    (67) num_expression -> . num_expression MUL num_expression
    (68) num_expression -> . num_expression DIV num_expression
    (82) num_expression -> . SUB num_expression
    (85) num_expression -> . INTNUM
    (86) num_expression -> . FLOATNUM

    ID              shift and go to state 48
    LPAREN          shift and go to state 45
    SUB             shift and go to state 49
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 36

    condition                      shift and go to state 67
    num_expression                 shift and go to state 47

state 27

    (44) statement -> PRINT print_expression .
    (46) print_expression -> print_expression . COMMA print_expression

    SEMICOLON       reduce using rule 44 (statement -> PRINT print_expression .)
    COMMA           shift and go to state 68


state 28

    (45) print_expression -> expression .

    COMMA           reduce using rule 45 (print_expression -> expression .)
    SEMICOLON       reduce using rule 45 (print_expression -> expression .)


state 29

    (47) expression -> num_expression .
    (65) num_expression -> num_expression . ADD num_expression
    (66) num_expression -> num_expression . SUB num_expression
    (67) num_expression -> num_expression . MUL num_expression
    (68) num_expression -> num_expression . DIV num_expression

    COMMA           reduce using rule 47 (expression -> num_expression .)
    SEMICOLON       reduce using rule 47 (expression -> num_expression .)
    ADD             shift and go to state 69
    SUB             shift and go to state 70
    MUL             shift and go to state 71
    DIV             shift and go to state 72


state 30

    (48) expression -> matrix_expression .
    (69) matrix_expression -> matrix_expression . ADD matrix_expression
    (70) matrix_expression -> matrix_expression . SUB matrix_expression
    (71) matrix_expression -> matrix_expression . MUL matrix_expression
    (72) matrix_expression -> matrix_expression . DIV matrix_expression
    (73) matrix_expression -> matrix_expression . DOTADD matrix_expression
    (74) matrix_expression -> matrix_expression . DOTSUB matrix_expression
    (75) matrix_expression -> matrix_expression . DOTMUL matrix_expression
    (76) matrix_expression -> matrix_expression . DOTDIV matrix_expression
    (84) matrix_expression -> matrix_expression . TRANSPOSE

    COMMA           reduce using rule 48 (expression -> matrix_expression .)
    SEMICOLON       reduce using rule 48 (expression -> matrix_expression .)
    ADD             shift and go to state 73
    SUB             shift and go to state 74
    MUL             shift and go to state 75
    DIV             shift and go to state 76
    DOTADD          shift and go to state 77
    DOTSUB          shift and go to state 78
    DOTMUL          shift and go to state 79
    DOTDIV          shift and go to state 80
    TRANSPOSE       shift and go to state 81


state 31

    (49) expression -> STRING .

    COMMA           reduce using rule 49 (expression -> STRING .)
    SEMICOLON       reduce using rule 49 (expression -> STRING .)


state 32

    (61) num_expression -> ID .
    (62) matrix_expression -> ID .

  ! reduce/reduce conflict for ADD resolved using rule 61 (num_expression -> ID .)
  ! reduce/reduce conflict for SUB resolved using rule 61 (num_expression -> ID .)
  ! reduce/reduce conflict for MUL resolved using rule 61 (num_expression -> ID .)
  ! reduce/reduce conflict for DIV resolved using rule 61 (num_expression -> ID .)
  ! reduce/reduce conflict for COMMA resolved using rule 61 (num_expression -> ID .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 61 (num_expression -> ID .)
  ! reduce/reduce conflict for RPAREN resolved using rule 61 (num_expression -> ID .)
    ADD             reduce using rule 61 (num_expression -> ID .)
    SUB             reduce using rule 61 (num_expression -> ID .)
    MUL             reduce using rule 61 (num_expression -> ID .)
    DIV             reduce using rule 61 (num_expression -> ID .)
    COMMA           reduce using rule 61 (num_expression -> ID .)
    SEMICOLON       reduce using rule 61 (num_expression -> ID .)
    RPAREN          reduce using rule 61 (num_expression -> ID .)
    DOTADD          reduce using rule 62 (matrix_expression -> ID .)
    DOTSUB          reduce using rule 62 (matrix_expression -> ID .)
    DOTMUL          reduce using rule 62 (matrix_expression -> ID .)
    DOTDIV          reduce using rule 62 (matrix_expression -> ID .)
    TRANSPOSE       reduce using rule 62 (matrix_expression -> ID .)

  ! ADD             [ reduce using rule 62 (matrix_expression -> ID .) ]
  ! SUB             [ reduce using rule 62 (matrix_expression -> ID .) ]
  ! MUL             [ reduce using rule 62 (matrix_expression -> ID .) ]
  ! DIV             [ reduce using rule 62 (matrix_expression -> ID .) ]
  ! COMMA           [ reduce using rule 62 (matrix_expression -> ID .) ]
  ! SEMICOLON       [ reduce using rule 62 (matrix_expression -> ID .) ]
  ! RPAREN          [ reduce using rule 62 (matrix_expression -> ID .) ]


state 33

    (63) num_expression -> LPAREN . num_expression RPAREN
    (64) matrix_expression -> LPAREN . matrix_expression RPAREN
    (61) num_expression -> . ID
    (63) num_expression -> . LPAREN num_expression RPAREN
    (65) num_expression -> . num_expression ADD num_expression
    (66) num_expression -> . num_expression SUB num_expression
    (67) num_expression -> . num_expression MUL num_expression
    (68) num_expression -> . num_expression DIV num_expression
    (82) num_expression -> . SUB num_expression
    (85) num_expression -> . INTNUM
    (86) num_expression -> . FLOATNUM
    (62) matrix_expression -> . ID
    (64) matrix_expression -> . LPAREN matrix_expression RPAREN
    (69) matrix_expression -> . matrix_expression ADD matrix_expression
    (70) matrix_expression -> . matrix_expression SUB matrix_expression
    (71) matrix_expression -> . matrix_expression MUL matrix_expression
    (72) matrix_expression -> . matrix_expression DIV matrix_expression
    (73) matrix_expression -> . matrix_expression DOTADD matrix_expression
    (74) matrix_expression -> . matrix_expression DOTSUB matrix_expression
    (75) matrix_expression -> . matrix_expression DOTMUL matrix_expression
    (76) matrix_expression -> . matrix_expression DOTDIV matrix_expression
    (83) matrix_expression -> . SUB matrix_expression
    (84) matrix_expression -> . matrix_expression TRANSPOSE
    (87) matrix_expression -> . ZEROS LPAREN INTNUM RPAREN
    (88) matrix_expression -> . ONES LPAREN INTNUM RPAREN
    (89) matrix_expression -> . EYE LPAREN INTNUM RPAREN
    (90) matrix_expression -> . MATRIX

    ID              shift and go to state 32
    LPAREN          shift and go to state 33
    SUB             shift and go to state 34
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 36
    ZEROS           shift and go to state 37
    ONES            shift and go to state 38
    EYE             shift and go to state 39
    MATRIX          shift and go to state 40

    num_expression                 shift and go to state 82
    matrix_expression              shift and go to state 83

state 34

    (82) num_expression -> SUB . num_expression
    (83) matrix_expression -> SUB . matrix_expression
    (61) num_expression -> . ID
    (63) num_expression -> . LPAREN num_expression RPAREN
    (65) num_expression -> . num_expression ADD num_expression
    (66) num_expression -> . num_expression SUB num_expression
    (67) num_expression -> . num_expression MUL num_expression
    (68) num_expression -> . num_expression DIV num_expression
    (82) num_expression -> . SUB num_expression
    (85) num_expression -> . INTNUM
    (86) num_expression -> . FLOATNUM
    (62) matrix_expression -> . ID
    (64) matrix_expression -> . LPAREN matrix_expression RPAREN
    (69) matrix_expression -> . matrix_expression ADD matrix_expression
    (70) matrix_expression -> . matrix_expression SUB matrix_expression
    (71) matrix_expression -> . matrix_expression MUL matrix_expression
    (72) matrix_expression -> . matrix_expression DIV matrix_expression
    (73) matrix_expression -> . matrix_expression DOTADD matrix_expression
    (74) matrix_expression -> . matrix_expression DOTSUB matrix_expression
    (75) matrix_expression -> . matrix_expression DOTMUL matrix_expression
    (76) matrix_expression -> . matrix_expression DOTDIV matrix_expression
    (83) matrix_expression -> . SUB matrix_expression
    (84) matrix_expression -> . matrix_expression TRANSPOSE
    (87) matrix_expression -> . ZEROS LPAREN INTNUM RPAREN
    (88) matrix_expression -> . ONES LPAREN INTNUM RPAREN
    (89) matrix_expression -> . EYE LPAREN INTNUM RPAREN
    (90) matrix_expression -> . MATRIX

    ID              shift and go to state 32
    LPAREN          shift and go to state 33
    SUB             shift and go to state 34
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 36
    ZEROS           shift and go to state 37
    ONES            shift and go to state 38
    EYE             shift and go to state 39
    MATRIX          shift and go to state 40

    num_expression                 shift and go to state 84
    matrix_expression              shift and go to state 85

state 35

    (85) num_expression -> INTNUM .

    ADD             reduce using rule 85 (num_expression -> INTNUM .)
    SUB             reduce using rule 85 (num_expression -> INTNUM .)
    MUL             reduce using rule 85 (num_expression -> INTNUM .)
    DIV             reduce using rule 85 (num_expression -> INTNUM .)
    COMMA           reduce using rule 85 (num_expression -> INTNUM .)
    SEMICOLON       reduce using rule 85 (num_expression -> INTNUM .)
    EQUALITY        reduce using rule 85 (num_expression -> INTNUM .)
    INEQUALITY      reduce using rule 85 (num_expression -> INTNUM .)
    GREATER         reduce using rule 85 (num_expression -> INTNUM .)
    GREATER_EQUAL   reduce using rule 85 (num_expression -> INTNUM .)
    LESS            reduce using rule 85 (num_expression -> INTNUM .)
    LESS_EQUAL      reduce using rule 85 (num_expression -> INTNUM .)
    RPAREN          reduce using rule 85 (num_expression -> INTNUM .)
    RANGE           reduce using rule 85 (num_expression -> INTNUM .)
    LPARENCURLY     reduce using rule 85 (num_expression -> INTNUM .)
    BREAK           reduce using rule 85 (num_expression -> INTNUM .)
    CONTINUE        reduce using rule 85 (num_expression -> INTNUM .)
    PRINT           reduce using rule 85 (num_expression -> INTNUM .)
    ID              reduce using rule 85 (num_expression -> INTNUM .)
    WHILE           reduce using rule 85 (num_expression -> INTNUM .)
    FOR             reduce using rule 85 (num_expression -> INTNUM .)
    RETURN          reduce using rule 85 (num_expression -> INTNUM .)


state 36

    (86) num_expression -> FLOATNUM .

    ADD             reduce using rule 86 (num_expression -> FLOATNUM .)
    SUB             reduce using rule 86 (num_expression -> FLOATNUM .)
    MUL             reduce using rule 86 (num_expression -> FLOATNUM .)
    DIV             reduce using rule 86 (num_expression -> FLOATNUM .)
    COMMA           reduce using rule 86 (num_expression -> FLOATNUM .)
    SEMICOLON       reduce using rule 86 (num_expression -> FLOATNUM .)
    EQUALITY        reduce using rule 86 (num_expression -> FLOATNUM .)
    INEQUALITY      reduce using rule 86 (num_expression -> FLOATNUM .)
    GREATER         reduce using rule 86 (num_expression -> FLOATNUM .)
    GREATER_EQUAL   reduce using rule 86 (num_expression -> FLOATNUM .)
    LESS            reduce using rule 86 (num_expression -> FLOATNUM .)
    LESS_EQUAL      reduce using rule 86 (num_expression -> FLOATNUM .)
    RPAREN          reduce using rule 86 (num_expression -> FLOATNUM .)
    RANGE           reduce using rule 86 (num_expression -> FLOATNUM .)
    LPARENCURLY     reduce using rule 86 (num_expression -> FLOATNUM .)
    BREAK           reduce using rule 86 (num_expression -> FLOATNUM .)
    CONTINUE        reduce using rule 86 (num_expression -> FLOATNUM .)
    PRINT           reduce using rule 86 (num_expression -> FLOATNUM .)
    ID              reduce using rule 86 (num_expression -> FLOATNUM .)
    WHILE           reduce using rule 86 (num_expression -> FLOATNUM .)
    FOR             reduce using rule 86 (num_expression -> FLOATNUM .)
    RETURN          reduce using rule 86 (num_expression -> FLOATNUM .)


state 37

    (87) matrix_expression -> ZEROS . LPAREN INTNUM RPAREN

    LPAREN          shift and go to state 86


state 38

    (88) matrix_expression -> ONES . LPAREN INTNUM RPAREN

    LPAREN          shift and go to state 87


state 39

    (89) matrix_expression -> EYE . LPAREN INTNUM RPAREN

    LPAREN          shift and go to state 88


state 40

    (90) matrix_expression -> MATRIX .

    ADD             reduce using rule 90 (matrix_expression -> MATRIX .)
    SUB             reduce using rule 90 (matrix_expression -> MATRIX .)
    MUL             reduce using rule 90 (matrix_expression -> MATRIX .)
    DIV             reduce using rule 90 (matrix_expression -> MATRIX .)
    DOTADD          reduce using rule 90 (matrix_expression -> MATRIX .)
    DOTSUB          reduce using rule 90 (matrix_expression -> MATRIX .)
    DOTMUL          reduce using rule 90 (matrix_expression -> MATRIX .)
    DOTDIV          reduce using rule 90 (matrix_expression -> MATRIX .)
    TRANSPOSE       reduce using rule 90 (matrix_expression -> MATRIX .)
    COMMA           reduce using rule 90 (matrix_expression -> MATRIX .)
    SEMICOLON       reduce using rule 90 (matrix_expression -> MATRIX .)
    RPAREN          reduce using rule 90 (matrix_expression -> MATRIX .)


state 41

    (92) return_statement -> RETURN expression .

    SEMICOLON       reduce using rule 92 (return_statement -> RETURN expression .)


state 42

    (2) main_statements -> main_statements LPARENCURLY statements . RPARENCURLY
    (1) main_statements -> LPARENCURLY statements . RPARENCURLY main_statements

    RPARENCURLY     shift and go to state 89


state 43

    (1) main_statements -> LPARENCURLY statements RPARENCURLY . main_statements
    (1) main_statements -> . LPARENCURLY statements RPARENCURLY main_statements
    (2) main_statements -> . main_statements LPARENCURLY statements RPARENCURLY
    (3) main_statements -> . main_statements main_statements
    (4) main_statements -> . statements
    (5) main_statements -> . loop_statement
    (8) main_statements -> . if_statement
    (42) statements -> . statement SEMICOLON statements
    (43) statements -> . statement SEMICOLON
    (6) loop_statement -> . WHILE LPAREN condition RPAREN loop_instruction_statement
    (7) loop_statement -> . FOR ID ASSIGN num_expression RANGE num_expression loop_instruction_statement
    (11) if_statement -> . IF LPAREN condition RPAREN instruction_statement
    (12) if_statement -> . IF LPAREN condition RPAREN instruction_statement else_statement
    (44) statement -> . PRINT print_expression
    (50) statement -> . ID ASSIGN STRING
    (51) statement -> . ID MATRIX ASSIGN num_expression
    (52) statement -> . ID MATRIX ADDASSIGN num_expression
    (53) statement -> . ID MATRIX SUBASSIGN num_expression
    (54) statement -> . ID MATRIX MULASSIGN num_expression
    (55) statement -> . ID MATRIX DIVASSIGN num_expression
    (56) statement -> . ID ASSIGN num_expression
    (57) statement -> . ID ADDASSIGN num_expression
    (58) statement -> . ID SUBASSIGN num_expression
    (59) statement -> . ID MULASSIGN num_expression
    (60) statement -> . ID DIVASSIGN num_expression
    (77) statement -> . ID ASSIGN matrix_expression
    (78) statement -> . ID ADDASSIGN matrix_expression
    (79) statement -> . ID SUBASSIGN matrix_expression
    (80) statement -> . ID MULASSIGN matrix_expression
    (81) statement -> . ID DIVASSIGN matrix_expression
    (91) statement -> . return_statement
    (92) return_statement -> . RETURN expression

    LPARENCURLY     shift and go to state 2
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    IF              shift and go to state 10
    PRINT           shift and go to state 11
    ID              shift and go to state 9
    RETURN          shift and go to state 13

    statements                     shift and go to state 3
    main_statements                shift and go to state 90
    loop_statement                 shift and go to state 4
    if_statement                   shift and go to state 5
    statement                      shift and go to state 6
    return_statement               shift and go to state 12

state 44

    (42) statements -> statement SEMICOLON statements .

    LPARENCURLY     reduce using rule 42 (statements -> statement SEMICOLON statements .)
    WHILE           reduce using rule 42 (statements -> statement SEMICOLON statements .)
    FOR             reduce using rule 42 (statements -> statement SEMICOLON statements .)
    IF              reduce using rule 42 (statements -> statement SEMICOLON statements .)
    PRINT           reduce using rule 42 (statements -> statement SEMICOLON statements .)
    ID              reduce using rule 42 (statements -> statement SEMICOLON statements .)
    RETURN          reduce using rule 42 (statements -> statement SEMICOLON statements .)
    $end            reduce using rule 42 (statements -> statement SEMICOLON statements .)
    RPARENCURLY     reduce using rule 42 (statements -> statement SEMICOLON statements .)
    CONTINUE        reduce using rule 42 (statements -> statement SEMICOLON statements .)
    BREAK           reduce using rule 42 (statements -> statement SEMICOLON statements .)


state 45

    (63) num_expression -> LPAREN . num_expression RPAREN
    (61) num_expression -> . ID
    (63) num_expression -> . LPAREN num_expression RPAREN
    (65) num_expression -> . num_expression ADD num_expression
    (66) num_expression -> . num_expression SUB num_expression
    (67) num_expression -> . num_expression MUL num_expression
    (68) num_expression -> . num_expression DIV num_expression
    (82) num_expression -> . SUB num_expression
    (85) num_expression -> . INTNUM
    (86) num_expression -> . FLOATNUM

    ID              shift and go to state 48
    LPAREN          shift and go to state 45
    SUB             shift and go to state 49
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 36

    num_expression                 shift and go to state 82

state 46

    (6) loop_statement -> WHILE LPAREN condition . RPAREN loop_instruction_statement

    RPAREN          shift and go to state 91


state 47

    (36) condition -> num_expression . EQUALITY num_expression
    (37) condition -> num_expression . INEQUALITY num_expression
    (38) condition -> num_expression . GREATER num_expression
    (39) condition -> num_expression . GREATER_EQUAL num_expression
    (40) condition -> num_expression . LESS num_expression
    (41) condition -> num_expression . LESS_EQUAL num_expression
    (65) num_expression -> num_expression . ADD num_expression
    (66) num_expression -> num_expression . SUB num_expression
    (67) num_expression -> num_expression . MUL num_expression
    (68) num_expression -> num_expression . DIV num_expression

    EQUALITY        shift and go to state 92
    INEQUALITY      shift and go to state 93
    GREATER         shift and go to state 94
    GREATER_EQUAL   shift and go to state 95
    LESS            shift and go to state 96
    LESS_EQUAL      shift and go to state 97
    ADD             shift and go to state 69
    SUB             shift and go to state 70
    MUL             shift and go to state 71
    DIV             shift and go to state 72


state 48

    (61) num_expression -> ID .

    EQUALITY        reduce using rule 61 (num_expression -> ID .)
    INEQUALITY      reduce using rule 61 (num_expression -> ID .)
    GREATER         reduce using rule 61 (num_expression -> ID .)
    GREATER_EQUAL   reduce using rule 61 (num_expression -> ID .)
    LESS            reduce using rule 61 (num_expression -> ID .)
    LESS_EQUAL      reduce using rule 61 (num_expression -> ID .)
    ADD             reduce using rule 61 (num_expression -> ID .)
    SUB             reduce using rule 61 (num_expression -> ID .)
    MUL             reduce using rule 61 (num_expression -> ID .)
    DIV             reduce using rule 61 (num_expression -> ID .)
    RPAREN          reduce using rule 61 (num_expression -> ID .)
    RANGE           reduce using rule 61 (num_expression -> ID .)
    SEMICOLON       reduce using rule 61 (num_expression -> ID .)
    COMMA           reduce using rule 61 (num_expression -> ID .)
    LPARENCURLY     reduce using rule 61 (num_expression -> ID .)
    BREAK           reduce using rule 61 (num_expression -> ID .)
    CONTINUE        reduce using rule 61 (num_expression -> ID .)
    PRINT           reduce using rule 61 (num_expression -> ID .)
    ID              reduce using rule 61 (num_expression -> ID .)
    WHILE           reduce using rule 61 (num_expression -> ID .)
    FOR             reduce using rule 61 (num_expression -> ID .)
    RETURN          reduce using rule 61 (num_expression -> ID .)


state 49

    (82) num_expression -> SUB . num_expression
    (61) num_expression -> . ID
    (63) num_expression -> . LPAREN num_expression RPAREN
    (65) num_expression -> . num_expression ADD num_expression
    (66) num_expression -> . num_expression SUB num_expression
    (67) num_expression -> . num_expression MUL num_expression
    (68) num_expression -> . num_expression DIV num_expression
    (82) num_expression -> . SUB num_expression
    (85) num_expression -> . INTNUM
    (86) num_expression -> . FLOATNUM

    ID              shift and go to state 48
    LPAREN          shift and go to state 45
    SUB             shift and go to state 49
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 36

    num_expression                 shift and go to state 84

state 50

    (7) loop_statement -> FOR ID ASSIGN . num_expression RANGE num_expression loop_instruction_statement
    (61) num_expression -> . ID
    (63) num_expression -> . LPAREN num_expression RPAREN
    (65) num_expression -> . num_expression ADD num_expression
    (66) num_expression -> . num_expression SUB num_expression
    (67) num_expression -> . num_expression MUL num_expression
    (68) num_expression -> . num_expression DIV num_expression
    (82) num_expression -> . SUB num_expression
    (85) num_expression -> . INTNUM
    (86) num_expression -> . FLOATNUM

    ID              shift and go to state 48
    LPAREN          shift and go to state 45
    SUB             shift and go to state 49
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 36

    num_expression                 shift and go to state 98

state 51

    (50) statement -> ID ASSIGN STRING .

    SEMICOLON       reduce using rule 50 (statement -> ID ASSIGN STRING .)


state 52

    (56) statement -> ID ASSIGN num_expression .
    (65) num_expression -> num_expression . ADD num_expression
    (66) num_expression -> num_expression . SUB num_expression
    (67) num_expression -> num_expression . MUL num_expression
    (68) num_expression -> num_expression . DIV num_expression

    SEMICOLON       reduce using rule 56 (statement -> ID ASSIGN num_expression .)
    ADD             shift and go to state 69
    SUB             shift and go to state 70
    MUL             shift and go to state 71
    DIV             shift and go to state 72


state 53

    (77) statement -> ID ASSIGN matrix_expression .
    (69) matrix_expression -> matrix_expression . ADD matrix_expression
    (70) matrix_expression -> matrix_expression . SUB matrix_expression
    (71) matrix_expression -> matrix_expression . MUL matrix_expression
    (72) matrix_expression -> matrix_expression . DIV matrix_expression
    (73) matrix_expression -> matrix_expression . DOTADD matrix_expression
    (74) matrix_expression -> matrix_expression . DOTSUB matrix_expression
    (75) matrix_expression -> matrix_expression . DOTMUL matrix_expression
    (76) matrix_expression -> matrix_expression . DOTDIV matrix_expression
    (84) matrix_expression -> matrix_expression . TRANSPOSE

    SEMICOLON       reduce using rule 77 (statement -> ID ASSIGN matrix_expression .)
    ADD             shift and go to state 73
    SUB             shift and go to state 74
    MUL             shift and go to state 75
    DIV             shift and go to state 76
    DOTADD          shift and go to state 77
    DOTSUB          shift and go to state 78
    DOTMUL          shift and go to state 79
    DOTDIV          shift and go to state 80
    TRANSPOSE       shift and go to state 81


state 54

    (51) statement -> ID MATRIX ASSIGN . num_expression
    (61) num_expression -> . ID
    (63) num_expression -> . LPAREN num_expression RPAREN
    (65) num_expression -> . num_expression ADD num_expression
    (66) num_expression -> . num_expression SUB num_expression
    (67) num_expression -> . num_expression MUL num_expression
    (68) num_expression -> . num_expression DIV num_expression
    (82) num_expression -> . SUB num_expression
    (85) num_expression -> . INTNUM
    (86) num_expression -> . FLOATNUM

    ID              shift and go to state 48
    LPAREN          shift and go to state 45
    SUB             shift and go to state 49
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 36

    num_expression                 shift and go to state 99

state 55

    (52) statement -> ID MATRIX ADDASSIGN . num_expression
    (61) num_expression -> . ID
    (63) num_expression -> . LPAREN num_expression RPAREN
    (65) num_expression -> . num_expression ADD num_expression
    (66) num_expression -> . num_expression SUB num_expression
    (67) num_expression -> . num_expression MUL num_expression
    (68) num_expression -> . num_expression DIV num_expression
    (82) num_expression -> . SUB num_expression
    (85) num_expression -> . INTNUM
    (86) num_expression -> . FLOATNUM

    ID              shift and go to state 48
    LPAREN          shift and go to state 45
    SUB             shift and go to state 49
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 36

    num_expression                 shift and go to state 100

state 56

    (53) statement -> ID MATRIX SUBASSIGN . num_expression
    (61) num_expression -> . ID
    (63) num_expression -> . LPAREN num_expression RPAREN
    (65) num_expression -> . num_expression ADD num_expression
    (66) num_expression -> . num_expression SUB num_expression
    (67) num_expression -> . num_expression MUL num_expression
    (68) num_expression -> . num_expression DIV num_expression
    (82) num_expression -> . SUB num_expression
    (85) num_expression -> . INTNUM
    (86) num_expression -> . FLOATNUM

    ID              shift and go to state 48
    LPAREN          shift and go to state 45
    SUB             shift and go to state 49
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 36

    num_expression                 shift and go to state 101

state 57

    (54) statement -> ID MATRIX MULASSIGN . num_expression
    (61) num_expression -> . ID
    (63) num_expression -> . LPAREN num_expression RPAREN
    (65) num_expression -> . num_expression ADD num_expression
    (66) num_expression -> . num_expression SUB num_expression
    (67) num_expression -> . num_expression MUL num_expression
    (68) num_expression -> . num_expression DIV num_expression
    (82) num_expression -> . SUB num_expression
    (85) num_expression -> . INTNUM
    (86) num_expression -> . FLOATNUM

    ID              shift and go to state 48
    LPAREN          shift and go to state 45
    SUB             shift and go to state 49
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 36

    num_expression                 shift and go to state 102

state 58

    (55) statement -> ID MATRIX DIVASSIGN . num_expression
    (61) num_expression -> . ID
    (63) num_expression -> . LPAREN num_expression RPAREN
    (65) num_expression -> . num_expression ADD num_expression
    (66) num_expression -> . num_expression SUB num_expression
    (67) num_expression -> . num_expression MUL num_expression
    (68) num_expression -> . num_expression DIV num_expression
    (82) num_expression -> . SUB num_expression
    (85) num_expression -> . INTNUM
    (86) num_expression -> . FLOATNUM

    ID              shift and go to state 48
    LPAREN          shift and go to state 45
    SUB             shift and go to state 49
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 36

    num_expression                 shift and go to state 103

state 59

    (57) statement -> ID ADDASSIGN num_expression .
    (65) num_expression -> num_expression . ADD num_expression
    (66) num_expression -> num_expression . SUB num_expression
    (67) num_expression -> num_expression . MUL num_expression
    (68) num_expression -> num_expression . DIV num_expression

    SEMICOLON       reduce using rule 57 (statement -> ID ADDASSIGN num_expression .)
    ADD             shift and go to state 69
    SUB             shift and go to state 70
    MUL             shift and go to state 71
    DIV             shift and go to state 72


state 60

    (78) statement -> ID ADDASSIGN matrix_expression .
    (69) matrix_expression -> matrix_expression . ADD matrix_expression
    (70) matrix_expression -> matrix_expression . SUB matrix_expression
    (71) matrix_expression -> matrix_expression . MUL matrix_expression
    (72) matrix_expression -> matrix_expression . DIV matrix_expression
    (73) matrix_expression -> matrix_expression . DOTADD matrix_expression
    (74) matrix_expression -> matrix_expression . DOTSUB matrix_expression
    (75) matrix_expression -> matrix_expression . DOTMUL matrix_expression
    (76) matrix_expression -> matrix_expression . DOTDIV matrix_expression
    (84) matrix_expression -> matrix_expression . TRANSPOSE

    SEMICOLON       reduce using rule 78 (statement -> ID ADDASSIGN matrix_expression .)
    ADD             shift and go to state 73
    SUB             shift and go to state 74
    MUL             shift and go to state 75
    DIV             shift and go to state 76
    DOTADD          shift and go to state 77
    DOTSUB          shift and go to state 78
    DOTMUL          shift and go to state 79
    DOTDIV          shift and go to state 80
    TRANSPOSE       shift and go to state 81


state 61

    (58) statement -> ID SUBASSIGN num_expression .
    (65) num_expression -> num_expression . ADD num_expression
    (66) num_expression -> num_expression . SUB num_expression
    (67) num_expression -> num_expression . MUL num_expression
    (68) num_expression -> num_expression . DIV num_expression

    SEMICOLON       reduce using rule 58 (statement -> ID SUBASSIGN num_expression .)
    ADD             shift and go to state 69
    SUB             shift and go to state 70
    MUL             shift and go to state 71
    DIV             shift and go to state 72


state 62

    (79) statement -> ID SUBASSIGN matrix_expression .
    (69) matrix_expression -> matrix_expression . ADD matrix_expression
    (70) matrix_expression -> matrix_expression . SUB matrix_expression
    (71) matrix_expression -> matrix_expression . MUL matrix_expression
    (72) matrix_expression -> matrix_expression . DIV matrix_expression
    (73) matrix_expression -> matrix_expression . DOTADD matrix_expression
    (74) matrix_expression -> matrix_expression . DOTSUB matrix_expression
    (75) matrix_expression -> matrix_expression . DOTMUL matrix_expression
    (76) matrix_expression -> matrix_expression . DOTDIV matrix_expression
    (84) matrix_expression -> matrix_expression . TRANSPOSE

    SEMICOLON       reduce using rule 79 (statement -> ID SUBASSIGN matrix_expression .)
    ADD             shift and go to state 73
    SUB             shift and go to state 74
    MUL             shift and go to state 75
    DIV             shift and go to state 76
    DOTADD          shift and go to state 77
    DOTSUB          shift and go to state 78
    DOTMUL          shift and go to state 79
    DOTDIV          shift and go to state 80
    TRANSPOSE       shift and go to state 81


state 63

    (59) statement -> ID MULASSIGN num_expression .
    (65) num_expression -> num_expression . ADD num_expression
    (66) num_expression -> num_expression . SUB num_expression
    (67) num_expression -> num_expression . MUL num_expression
    (68) num_expression -> num_expression . DIV num_expression

    SEMICOLON       reduce using rule 59 (statement -> ID MULASSIGN num_expression .)
    ADD             shift and go to state 69
    SUB             shift and go to state 70
    MUL             shift and go to state 71
    DIV             shift and go to state 72


state 64

    (80) statement -> ID MULASSIGN matrix_expression .
    (69) matrix_expression -> matrix_expression . ADD matrix_expression
    (70) matrix_expression -> matrix_expression . SUB matrix_expression
    (71) matrix_expression -> matrix_expression . MUL matrix_expression
    (72) matrix_expression -> matrix_expression . DIV matrix_expression
    (73) matrix_expression -> matrix_expression . DOTADD matrix_expression
    (74) matrix_expression -> matrix_expression . DOTSUB matrix_expression
    (75) matrix_expression -> matrix_expression . DOTMUL matrix_expression
    (76) matrix_expression -> matrix_expression . DOTDIV matrix_expression
    (84) matrix_expression -> matrix_expression . TRANSPOSE

    SEMICOLON       reduce using rule 80 (statement -> ID MULASSIGN matrix_expression .)
    ADD             shift and go to state 73
    SUB             shift and go to state 74
    MUL             shift and go to state 75
    DIV             shift and go to state 76
    DOTADD          shift and go to state 77
    DOTSUB          shift and go to state 78
    DOTMUL          shift and go to state 79
    DOTDIV          shift and go to state 80
    TRANSPOSE       shift and go to state 81


state 65

    (60) statement -> ID DIVASSIGN num_expression .
    (65) num_expression -> num_expression . ADD num_expression
    (66) num_expression -> num_expression . SUB num_expression
    (67) num_expression -> num_expression . MUL num_expression
    (68) num_expression -> num_expression . DIV num_expression

    SEMICOLON       reduce using rule 60 (statement -> ID DIVASSIGN num_expression .)
    ADD             shift and go to state 69
    SUB             shift and go to state 70
    MUL             shift and go to state 71
    DIV             shift and go to state 72


state 66

    (81) statement -> ID DIVASSIGN matrix_expression .
    (69) matrix_expression -> matrix_expression . ADD matrix_expression
    (70) matrix_expression -> matrix_expression . SUB matrix_expression
    (71) matrix_expression -> matrix_expression . MUL matrix_expression
    (72) matrix_expression -> matrix_expression . DIV matrix_expression
    (73) matrix_expression -> matrix_expression . DOTADD matrix_expression
    (74) matrix_expression -> matrix_expression . DOTSUB matrix_expression
    (75) matrix_expression -> matrix_expression . DOTMUL matrix_expression
    (76) matrix_expression -> matrix_expression . DOTDIV matrix_expression
    (84) matrix_expression -> matrix_expression . TRANSPOSE

    SEMICOLON       reduce using rule 81 (statement -> ID DIVASSIGN matrix_expression .)
    ADD             shift and go to state 73
    SUB             shift and go to state 74
    MUL             shift and go to state 75
    DIV             shift and go to state 76
    DOTADD          shift and go to state 77
    DOTSUB          shift and go to state 78
    DOTMUL          shift and go to state 79
    DOTDIV          shift and go to state 80
    TRANSPOSE       shift and go to state 81


state 67

    (11) if_statement -> IF LPAREN condition . RPAREN instruction_statement
    (12) if_statement -> IF LPAREN condition . RPAREN instruction_statement else_statement

    RPAREN          shift and go to state 104


state 68

    (46) print_expression -> print_expression COMMA . print_expression
    (45) print_expression -> . expression
    (46) print_expression -> . print_expression COMMA print_expression
    (47) expression -> . num_expression
    (48) expression -> . matrix_expression
    (49) expression -> . STRING
    (61) num_expression -> . ID
    (63) num_expression -> . LPAREN num_expression RPAREN
    (65) num_expression -> . num_expression ADD num_expression
    (66) num_expression -> . num_expression SUB num_expression
    (67) num_expression -> . num_expression MUL num_expression
    (68) num_expression -> . num_expression DIV num_expression
    (82) num_expression -> . SUB num_expression
    (85) num_expression -> . INTNUM
    (86) num_expression -> . FLOATNUM
    (62) matrix_expression -> . ID
    (64) matrix_expression -> . LPAREN matrix_expression RPAREN
    (69) matrix_expression -> . matrix_expression ADD matrix_expression
    (70) matrix_expression -> . matrix_expression SUB matrix_expression
    (71) matrix_expression -> . matrix_expression MUL matrix_expression
    (72) matrix_expression -> . matrix_expression DIV matrix_expression
    (73) matrix_expression -> . matrix_expression DOTADD matrix_expression
    (74) matrix_expression -> . matrix_expression DOTSUB matrix_expression
    (75) matrix_expression -> . matrix_expression DOTMUL matrix_expression
    (76) matrix_expression -> . matrix_expression DOTDIV matrix_expression
    (83) matrix_expression -> . SUB matrix_expression
    (84) matrix_expression -> . matrix_expression TRANSPOSE
    (87) matrix_expression -> . ZEROS LPAREN INTNUM RPAREN
    (88) matrix_expression -> . ONES LPAREN INTNUM RPAREN
    (89) matrix_expression -> . EYE LPAREN INTNUM RPAREN
    (90) matrix_expression -> . MATRIX

    STRING          shift and go to state 31
    ID              shift and go to state 32
    LPAREN          shift and go to state 33
    SUB             shift and go to state 34
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 36
    ZEROS           shift and go to state 37
    ONES            shift and go to state 38
    EYE             shift and go to state 39
    MATRIX          shift and go to state 40

    print_expression               shift and go to state 105
    expression                     shift and go to state 28
    num_expression                 shift and go to state 29
    matrix_expression              shift and go to state 30

state 69

    (65) num_expression -> num_expression ADD . num_expression
    (61) num_expression -> . ID
    (63) num_expression -> . LPAREN num_expression RPAREN
    (65) num_expression -> . num_expression ADD num_expression
    (66) num_expression -> . num_expression SUB num_expression
    (67) num_expression -> . num_expression MUL num_expression
    (68) num_expression -> . num_expression DIV num_expression
    (82) num_expression -> . SUB num_expression
    (85) num_expression -> . INTNUM
    (86) num_expression -> . FLOATNUM

    ID              shift and go to state 48
    LPAREN          shift and go to state 45
    SUB             shift and go to state 49
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 36

    num_expression                 shift and go to state 106

state 70

    (66) num_expression -> num_expression SUB . num_expression
    (61) num_expression -> . ID
    (63) num_expression -> . LPAREN num_expression RPAREN
    (65) num_expression -> . num_expression ADD num_expression
    (66) num_expression -> . num_expression SUB num_expression
    (67) num_expression -> . num_expression MUL num_expression
    (68) num_expression -> . num_expression DIV num_expression
    (82) num_expression -> . SUB num_expression
    (85) num_expression -> . INTNUM
    (86) num_expression -> . FLOATNUM

    ID              shift and go to state 48
    LPAREN          shift and go to state 45
    SUB             shift and go to state 49
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 36

    num_expression                 shift and go to state 107

state 71

    (67) num_expression -> num_expression MUL . num_expression
    (61) num_expression -> . ID
    (63) num_expression -> . LPAREN num_expression RPAREN
    (65) num_expression -> . num_expression ADD num_expression
    (66) num_expression -> . num_expression SUB num_expression
    (67) num_expression -> . num_expression MUL num_expression
    (68) num_expression -> . num_expression DIV num_expression
    (82) num_expression -> . SUB num_expression
    (85) num_expression -> . INTNUM
    (86) num_expression -> . FLOATNUM

    ID              shift and go to state 48
    LPAREN          shift and go to state 45
    SUB             shift and go to state 49
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 36

    num_expression                 shift and go to state 108

state 72

    (68) num_expression -> num_expression DIV . num_expression
    (61) num_expression -> . ID
    (63) num_expression -> . LPAREN num_expression RPAREN
    (65) num_expression -> . num_expression ADD num_expression
    (66) num_expression -> . num_expression SUB num_expression
    (67) num_expression -> . num_expression MUL num_expression
    (68) num_expression -> . num_expression DIV num_expression
    (82) num_expression -> . SUB num_expression
    (85) num_expression -> . INTNUM
    (86) num_expression -> . FLOATNUM

    ID              shift and go to state 48
    LPAREN          shift and go to state 45
    SUB             shift and go to state 49
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 36

    num_expression                 shift and go to state 109

state 73

    (69) matrix_expression -> matrix_expression ADD . matrix_expression
    (62) matrix_expression -> . ID
    (64) matrix_expression -> . LPAREN matrix_expression RPAREN
    (69) matrix_expression -> . matrix_expression ADD matrix_expression
    (70) matrix_expression -> . matrix_expression SUB matrix_expression
    (71) matrix_expression -> . matrix_expression MUL matrix_expression
    (72) matrix_expression -> . matrix_expression DIV matrix_expression
    (73) matrix_expression -> . matrix_expression DOTADD matrix_expression
    (74) matrix_expression -> . matrix_expression DOTSUB matrix_expression
    (75) matrix_expression -> . matrix_expression DOTMUL matrix_expression
    (76) matrix_expression -> . matrix_expression DOTDIV matrix_expression
    (83) matrix_expression -> . SUB matrix_expression
    (84) matrix_expression -> . matrix_expression TRANSPOSE
    (87) matrix_expression -> . ZEROS LPAREN INTNUM RPAREN
    (88) matrix_expression -> . ONES LPAREN INTNUM RPAREN
    (89) matrix_expression -> . EYE LPAREN INTNUM RPAREN
    (90) matrix_expression -> . MATRIX

    ID              shift and go to state 111
    LPAREN          shift and go to state 112
    SUB             shift and go to state 113
    ZEROS           shift and go to state 37
    ONES            shift and go to state 38
    EYE             shift and go to state 39
    MATRIX          shift and go to state 40

    matrix_expression              shift and go to state 110

state 74

    (70) matrix_expression -> matrix_expression SUB . matrix_expression
    (62) matrix_expression -> . ID
    (64) matrix_expression -> . LPAREN matrix_expression RPAREN
    (69) matrix_expression -> . matrix_expression ADD matrix_expression
    (70) matrix_expression -> . matrix_expression SUB matrix_expression
    (71) matrix_expression -> . matrix_expression MUL matrix_expression
    (72) matrix_expression -> . matrix_expression DIV matrix_expression
    (73) matrix_expression -> . matrix_expression DOTADD matrix_expression
    (74) matrix_expression -> . matrix_expression DOTSUB matrix_expression
    (75) matrix_expression -> . matrix_expression DOTMUL matrix_expression
    (76) matrix_expression -> . matrix_expression DOTDIV matrix_expression
    (83) matrix_expression -> . SUB matrix_expression
    (84) matrix_expression -> . matrix_expression TRANSPOSE
    (87) matrix_expression -> . ZEROS LPAREN INTNUM RPAREN
    (88) matrix_expression -> . ONES LPAREN INTNUM RPAREN
    (89) matrix_expression -> . EYE LPAREN INTNUM RPAREN
    (90) matrix_expression -> . MATRIX

    ID              shift and go to state 111
    LPAREN          shift and go to state 112
    SUB             shift and go to state 113
    ZEROS           shift and go to state 37
    ONES            shift and go to state 38
    EYE             shift and go to state 39
    MATRIX          shift and go to state 40

    matrix_expression              shift and go to state 114

state 75

    (71) matrix_expression -> matrix_expression MUL . matrix_expression
    (62) matrix_expression -> . ID
    (64) matrix_expression -> . LPAREN matrix_expression RPAREN
    (69) matrix_expression -> . matrix_expression ADD matrix_expression
    (70) matrix_expression -> . matrix_expression SUB matrix_expression
    (71) matrix_expression -> . matrix_expression MUL matrix_expression
    (72) matrix_expression -> . matrix_expression DIV matrix_expression
    (73) matrix_expression -> . matrix_expression DOTADD matrix_expression
    (74) matrix_expression -> . matrix_expression DOTSUB matrix_expression
    (75) matrix_expression -> . matrix_expression DOTMUL matrix_expression
    (76) matrix_expression -> . matrix_expression DOTDIV matrix_expression
    (83) matrix_expression -> . SUB matrix_expression
    (84) matrix_expression -> . matrix_expression TRANSPOSE
    (87) matrix_expression -> . ZEROS LPAREN INTNUM RPAREN
    (88) matrix_expression -> . ONES LPAREN INTNUM RPAREN
    (89) matrix_expression -> . EYE LPAREN INTNUM RPAREN
    (90) matrix_expression -> . MATRIX

    ID              shift and go to state 111
    LPAREN          shift and go to state 112
    SUB             shift and go to state 113
    ZEROS           shift and go to state 37
    ONES            shift and go to state 38
    EYE             shift and go to state 39
    MATRIX          shift and go to state 40

    matrix_expression              shift and go to state 115

state 76

    (72) matrix_expression -> matrix_expression DIV . matrix_expression
    (62) matrix_expression -> . ID
    (64) matrix_expression -> . LPAREN matrix_expression RPAREN
    (69) matrix_expression -> . matrix_expression ADD matrix_expression
    (70) matrix_expression -> . matrix_expression SUB matrix_expression
    (71) matrix_expression -> . matrix_expression MUL matrix_expression
    (72) matrix_expression -> . matrix_expression DIV matrix_expression
    (73) matrix_expression -> . matrix_expression DOTADD matrix_expression
    (74) matrix_expression -> . matrix_expression DOTSUB matrix_expression
    (75) matrix_expression -> . matrix_expression DOTMUL matrix_expression
    (76) matrix_expression -> . matrix_expression DOTDIV matrix_expression
    (83) matrix_expression -> . SUB matrix_expression
    (84) matrix_expression -> . matrix_expression TRANSPOSE
    (87) matrix_expression -> . ZEROS LPAREN INTNUM RPAREN
    (88) matrix_expression -> . ONES LPAREN INTNUM RPAREN
    (89) matrix_expression -> . EYE LPAREN INTNUM RPAREN
    (90) matrix_expression -> . MATRIX

    ID              shift and go to state 111
    LPAREN          shift and go to state 112
    SUB             shift and go to state 113
    ZEROS           shift and go to state 37
    ONES            shift and go to state 38
    EYE             shift and go to state 39
    MATRIX          shift and go to state 40

    matrix_expression              shift and go to state 116

state 77

    (73) matrix_expression -> matrix_expression DOTADD . matrix_expression
    (62) matrix_expression -> . ID
    (64) matrix_expression -> . LPAREN matrix_expression RPAREN
    (69) matrix_expression -> . matrix_expression ADD matrix_expression
    (70) matrix_expression -> . matrix_expression SUB matrix_expression
    (71) matrix_expression -> . matrix_expression MUL matrix_expression
    (72) matrix_expression -> . matrix_expression DIV matrix_expression
    (73) matrix_expression -> . matrix_expression DOTADD matrix_expression
    (74) matrix_expression -> . matrix_expression DOTSUB matrix_expression
    (75) matrix_expression -> . matrix_expression DOTMUL matrix_expression
    (76) matrix_expression -> . matrix_expression DOTDIV matrix_expression
    (83) matrix_expression -> . SUB matrix_expression
    (84) matrix_expression -> . matrix_expression TRANSPOSE
    (87) matrix_expression -> . ZEROS LPAREN INTNUM RPAREN
    (88) matrix_expression -> . ONES LPAREN INTNUM RPAREN
    (89) matrix_expression -> . EYE LPAREN INTNUM RPAREN
    (90) matrix_expression -> . MATRIX

    ID              shift and go to state 111
    LPAREN          shift and go to state 112
    SUB             shift and go to state 113
    ZEROS           shift and go to state 37
    ONES            shift and go to state 38
    EYE             shift and go to state 39
    MATRIX          shift and go to state 40

    matrix_expression              shift and go to state 117

state 78

    (74) matrix_expression -> matrix_expression DOTSUB . matrix_expression
    (62) matrix_expression -> . ID
    (64) matrix_expression -> . LPAREN matrix_expression RPAREN
    (69) matrix_expression -> . matrix_expression ADD matrix_expression
    (70) matrix_expression -> . matrix_expression SUB matrix_expression
    (71) matrix_expression -> . matrix_expression MUL matrix_expression
    (72) matrix_expression -> . matrix_expression DIV matrix_expression
    (73) matrix_expression -> . matrix_expression DOTADD matrix_expression
    (74) matrix_expression -> . matrix_expression DOTSUB matrix_expression
    (75) matrix_expression -> . matrix_expression DOTMUL matrix_expression
    (76) matrix_expression -> . matrix_expression DOTDIV matrix_expression
    (83) matrix_expression -> . SUB matrix_expression
    (84) matrix_expression -> . matrix_expression TRANSPOSE
    (87) matrix_expression -> . ZEROS LPAREN INTNUM RPAREN
    (88) matrix_expression -> . ONES LPAREN INTNUM RPAREN
    (89) matrix_expression -> . EYE LPAREN INTNUM RPAREN
    (90) matrix_expression -> . MATRIX

    ID              shift and go to state 111
    LPAREN          shift and go to state 112
    SUB             shift and go to state 113
    ZEROS           shift and go to state 37
    ONES            shift and go to state 38
    EYE             shift and go to state 39
    MATRIX          shift and go to state 40

    matrix_expression              shift and go to state 118

state 79

    (75) matrix_expression -> matrix_expression DOTMUL . matrix_expression
    (62) matrix_expression -> . ID
    (64) matrix_expression -> . LPAREN matrix_expression RPAREN
    (69) matrix_expression -> . matrix_expression ADD matrix_expression
    (70) matrix_expression -> . matrix_expression SUB matrix_expression
    (71) matrix_expression -> . matrix_expression MUL matrix_expression
    (72) matrix_expression -> . matrix_expression DIV matrix_expression
    (73) matrix_expression -> . matrix_expression DOTADD matrix_expression
    (74) matrix_expression -> . matrix_expression DOTSUB matrix_expression
    (75) matrix_expression -> . matrix_expression DOTMUL matrix_expression
    (76) matrix_expression -> . matrix_expression DOTDIV matrix_expression
    (83) matrix_expression -> . SUB matrix_expression
    (84) matrix_expression -> . matrix_expression TRANSPOSE
    (87) matrix_expression -> . ZEROS LPAREN INTNUM RPAREN
    (88) matrix_expression -> . ONES LPAREN INTNUM RPAREN
    (89) matrix_expression -> . EYE LPAREN INTNUM RPAREN
    (90) matrix_expression -> . MATRIX

    ID              shift and go to state 111
    LPAREN          shift and go to state 112
    SUB             shift and go to state 113
    ZEROS           shift and go to state 37
    ONES            shift and go to state 38
    EYE             shift and go to state 39
    MATRIX          shift and go to state 40

    matrix_expression              shift and go to state 119

state 80

    (76) matrix_expression -> matrix_expression DOTDIV . matrix_expression
    (62) matrix_expression -> . ID
    (64) matrix_expression -> . LPAREN matrix_expression RPAREN
    (69) matrix_expression -> . matrix_expression ADD matrix_expression
    (70) matrix_expression -> . matrix_expression SUB matrix_expression
    (71) matrix_expression -> . matrix_expression MUL matrix_expression
    (72) matrix_expression -> . matrix_expression DIV matrix_expression
    (73) matrix_expression -> . matrix_expression DOTADD matrix_expression
    (74) matrix_expression -> . matrix_expression DOTSUB matrix_expression
    (75) matrix_expression -> . matrix_expression DOTMUL matrix_expression
    (76) matrix_expression -> . matrix_expression DOTDIV matrix_expression
    (83) matrix_expression -> . SUB matrix_expression
    (84) matrix_expression -> . matrix_expression TRANSPOSE
    (87) matrix_expression -> . ZEROS LPAREN INTNUM RPAREN
    (88) matrix_expression -> . ONES LPAREN INTNUM RPAREN
    (89) matrix_expression -> . EYE LPAREN INTNUM RPAREN
    (90) matrix_expression -> . MATRIX

    ID              shift and go to state 111
    LPAREN          shift and go to state 112
    SUB             shift and go to state 113
    ZEROS           shift and go to state 37
    ONES            shift and go to state 38
    EYE             shift and go to state 39
    MATRIX          shift and go to state 40

    matrix_expression              shift and go to state 120

state 81

    (84) matrix_expression -> matrix_expression TRANSPOSE .

    ADD             reduce using rule 84 (matrix_expression -> matrix_expression TRANSPOSE .)
    SUB             reduce using rule 84 (matrix_expression -> matrix_expression TRANSPOSE .)
    MUL             reduce using rule 84 (matrix_expression -> matrix_expression TRANSPOSE .)
    DIV             reduce using rule 84 (matrix_expression -> matrix_expression TRANSPOSE .)
    DOTADD          reduce using rule 84 (matrix_expression -> matrix_expression TRANSPOSE .)
    DOTSUB          reduce using rule 84 (matrix_expression -> matrix_expression TRANSPOSE .)
    DOTMUL          reduce using rule 84 (matrix_expression -> matrix_expression TRANSPOSE .)
    DOTDIV          reduce using rule 84 (matrix_expression -> matrix_expression TRANSPOSE .)
    TRANSPOSE       reduce using rule 84 (matrix_expression -> matrix_expression TRANSPOSE .)
    COMMA           reduce using rule 84 (matrix_expression -> matrix_expression TRANSPOSE .)
    SEMICOLON       reduce using rule 84 (matrix_expression -> matrix_expression TRANSPOSE .)
    RPAREN          reduce using rule 84 (matrix_expression -> matrix_expression TRANSPOSE .)


state 82

    (63) num_expression -> LPAREN num_expression . RPAREN
    (65) num_expression -> num_expression . ADD num_expression
    (66) num_expression -> num_expression . SUB num_expression
    (67) num_expression -> num_expression . MUL num_expression
    (68) num_expression -> num_expression . DIV num_expression

    RPAREN          shift and go to state 121
    ADD             shift and go to state 69
    SUB             shift and go to state 70
    MUL             shift and go to state 71
    DIV             shift and go to state 72


state 83

    (64) matrix_expression -> LPAREN matrix_expression . RPAREN
    (69) matrix_expression -> matrix_expression . ADD matrix_expression
    (70) matrix_expression -> matrix_expression . SUB matrix_expression
    (71) matrix_expression -> matrix_expression . MUL matrix_expression
    (72) matrix_expression -> matrix_expression . DIV matrix_expression
    (73) matrix_expression -> matrix_expression . DOTADD matrix_expression
    (74) matrix_expression -> matrix_expression . DOTSUB matrix_expression
    (75) matrix_expression -> matrix_expression . DOTMUL matrix_expression
    (76) matrix_expression -> matrix_expression . DOTDIV matrix_expression
    (84) matrix_expression -> matrix_expression . TRANSPOSE

    RPAREN          shift and go to state 122
    ADD             shift and go to state 73
    SUB             shift and go to state 74
    MUL             shift and go to state 75
    DIV             shift and go to state 76
    DOTADD          shift and go to state 77
    DOTSUB          shift and go to state 78
    DOTMUL          shift and go to state 79
    DOTDIV          shift and go to state 80
    TRANSPOSE       shift and go to state 81


state 84

    (82) num_expression -> SUB num_expression .
    (65) num_expression -> num_expression . ADD num_expression
    (66) num_expression -> num_expression . SUB num_expression
    (67) num_expression -> num_expression . MUL num_expression
    (68) num_expression -> num_expression . DIV num_expression

    ADD             reduce using rule 82 (num_expression -> SUB num_expression .)
    SUB             reduce using rule 82 (num_expression -> SUB num_expression .)
    MUL             reduce using rule 82 (num_expression -> SUB num_expression .)
    DIV             reduce using rule 82 (num_expression -> SUB num_expression .)
    COMMA           reduce using rule 82 (num_expression -> SUB num_expression .)
    SEMICOLON       reduce using rule 82 (num_expression -> SUB num_expression .)
    EQUALITY        reduce using rule 82 (num_expression -> SUB num_expression .)
    INEQUALITY      reduce using rule 82 (num_expression -> SUB num_expression .)
    GREATER         reduce using rule 82 (num_expression -> SUB num_expression .)
    GREATER_EQUAL   reduce using rule 82 (num_expression -> SUB num_expression .)
    LESS            reduce using rule 82 (num_expression -> SUB num_expression .)
    LESS_EQUAL      reduce using rule 82 (num_expression -> SUB num_expression .)
    RPAREN          reduce using rule 82 (num_expression -> SUB num_expression .)
    RANGE           reduce using rule 82 (num_expression -> SUB num_expression .)
    LPARENCURLY     reduce using rule 82 (num_expression -> SUB num_expression .)
    BREAK           reduce using rule 82 (num_expression -> SUB num_expression .)
    CONTINUE        reduce using rule 82 (num_expression -> SUB num_expression .)
    PRINT           reduce using rule 82 (num_expression -> SUB num_expression .)
    ID              reduce using rule 82 (num_expression -> SUB num_expression .)
    WHILE           reduce using rule 82 (num_expression -> SUB num_expression .)
    FOR             reduce using rule 82 (num_expression -> SUB num_expression .)
    RETURN          reduce using rule 82 (num_expression -> SUB num_expression .)

  ! ADD             [ shift and go to state 69 ]
  ! SUB             [ shift and go to state 70 ]
  ! MUL             [ shift and go to state 71 ]
  ! DIV             [ shift and go to state 72 ]


state 85

    (83) matrix_expression -> SUB matrix_expression .
    (69) matrix_expression -> matrix_expression . ADD matrix_expression
    (70) matrix_expression -> matrix_expression . SUB matrix_expression
    (71) matrix_expression -> matrix_expression . MUL matrix_expression
    (72) matrix_expression -> matrix_expression . DIV matrix_expression
    (73) matrix_expression -> matrix_expression . DOTADD matrix_expression
    (74) matrix_expression -> matrix_expression . DOTSUB matrix_expression
    (75) matrix_expression -> matrix_expression . DOTMUL matrix_expression
    (76) matrix_expression -> matrix_expression . DOTDIV matrix_expression
    (84) matrix_expression -> matrix_expression . TRANSPOSE

    ADD             reduce using rule 83 (matrix_expression -> SUB matrix_expression .)
    SUB             reduce using rule 83 (matrix_expression -> SUB matrix_expression .)
    MUL             reduce using rule 83 (matrix_expression -> SUB matrix_expression .)
    DIV             reduce using rule 83 (matrix_expression -> SUB matrix_expression .)
    DOTADD          reduce using rule 83 (matrix_expression -> SUB matrix_expression .)
    DOTSUB          reduce using rule 83 (matrix_expression -> SUB matrix_expression .)
    DOTMUL          reduce using rule 83 (matrix_expression -> SUB matrix_expression .)
    DOTDIV          reduce using rule 83 (matrix_expression -> SUB matrix_expression .)
    TRANSPOSE       reduce using rule 83 (matrix_expression -> SUB matrix_expression .)
    COMMA           reduce using rule 83 (matrix_expression -> SUB matrix_expression .)
    SEMICOLON       reduce using rule 83 (matrix_expression -> SUB matrix_expression .)
    RPAREN          reduce using rule 83 (matrix_expression -> SUB matrix_expression .)

  ! ADD             [ shift and go to state 73 ]
  ! SUB             [ shift and go to state 74 ]
  ! MUL             [ shift and go to state 75 ]
  ! DIV             [ shift and go to state 76 ]
  ! DOTADD          [ shift and go to state 77 ]
  ! DOTSUB          [ shift and go to state 78 ]
  ! DOTMUL          [ shift and go to state 79 ]
  ! DOTDIV          [ shift and go to state 80 ]
  ! TRANSPOSE       [ shift and go to state 81 ]


state 86

    (87) matrix_expression -> ZEROS LPAREN . INTNUM RPAREN

    INTNUM          shift and go to state 123


state 87

    (88) matrix_expression -> ONES LPAREN . INTNUM RPAREN

    INTNUM          shift and go to state 124


state 88

    (89) matrix_expression -> EYE LPAREN . INTNUM RPAREN

    INTNUM          shift and go to state 125


state 89

    (2) main_statements -> main_statements LPARENCURLY statements RPARENCURLY .
    (1) main_statements -> LPARENCURLY statements RPARENCURLY . main_statements
    (1) main_statements -> . LPARENCURLY statements RPARENCURLY main_statements
    (2) main_statements -> . main_statements LPARENCURLY statements RPARENCURLY
    (3) main_statements -> . main_statements main_statements
    (4) main_statements -> . statements
    (5) main_statements -> . loop_statement
    (8) main_statements -> . if_statement
    (42) statements -> . statement SEMICOLON statements
    (43) statements -> . statement SEMICOLON
    (6) loop_statement -> . WHILE LPAREN condition RPAREN loop_instruction_statement
    (7) loop_statement -> . FOR ID ASSIGN num_expression RANGE num_expression loop_instruction_statement
    (11) if_statement -> . IF LPAREN condition RPAREN instruction_statement
    (12) if_statement -> . IF LPAREN condition RPAREN instruction_statement else_statement
    (44) statement -> . PRINT print_expression
    (50) statement -> . ID ASSIGN STRING
    (51) statement -> . ID MATRIX ASSIGN num_expression
    (52) statement -> . ID MATRIX ADDASSIGN num_expression
    (53) statement -> . ID MATRIX SUBASSIGN num_expression
    (54) statement -> . ID MATRIX MULASSIGN num_expression
    (55) statement -> . ID MATRIX DIVASSIGN num_expression
    (56) statement -> . ID ASSIGN num_expression
    (57) statement -> . ID ADDASSIGN num_expression
    (58) statement -> . ID SUBASSIGN num_expression
    (59) statement -> . ID MULASSIGN num_expression
    (60) statement -> . ID DIVASSIGN num_expression
    (77) statement -> . ID ASSIGN matrix_expression
    (78) statement -> . ID ADDASSIGN matrix_expression
    (79) statement -> . ID SUBASSIGN matrix_expression
    (80) statement -> . ID MULASSIGN matrix_expression
    (81) statement -> . ID DIVASSIGN matrix_expression
    (91) statement -> . return_statement
    (92) return_statement -> . RETURN expression

  ! shift/reduce conflict for LPARENCURLY resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
    $end            reduce using rule 2 (main_statements -> main_statements LPARENCURLY statements RPARENCURLY .)
    RPARENCURLY     reduce using rule 2 (main_statements -> main_statements LPARENCURLY statements RPARENCURLY .)
    CONTINUE        reduce using rule 2 (main_statements -> main_statements LPARENCURLY statements RPARENCURLY .)
    BREAK           reduce using rule 2 (main_statements -> main_statements LPARENCURLY statements RPARENCURLY .)
    LPARENCURLY     shift and go to state 2
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    IF              shift and go to state 10
    PRINT           shift and go to state 11
    ID              shift and go to state 9
    RETURN          shift and go to state 13

  ! LPARENCURLY     [ reduce using rule 2 (main_statements -> main_statements LPARENCURLY statements RPARENCURLY .) ]
  ! WHILE           [ reduce using rule 2 (main_statements -> main_statements LPARENCURLY statements RPARENCURLY .) ]
  ! FOR             [ reduce using rule 2 (main_statements -> main_statements LPARENCURLY statements RPARENCURLY .) ]
  ! IF              [ reduce using rule 2 (main_statements -> main_statements LPARENCURLY statements RPARENCURLY .) ]
  ! PRINT           [ reduce using rule 2 (main_statements -> main_statements LPARENCURLY statements RPARENCURLY .) ]
  ! ID              [ reduce using rule 2 (main_statements -> main_statements LPARENCURLY statements RPARENCURLY .) ]
  ! RETURN          [ reduce using rule 2 (main_statements -> main_statements LPARENCURLY statements RPARENCURLY .) ]

    main_statements                shift and go to state 90
    statements                     shift and go to state 3
    loop_statement                 shift and go to state 4
    if_statement                   shift and go to state 5
    statement                      shift and go to state 6
    return_statement               shift and go to state 12

state 90

    (1) main_statements -> LPARENCURLY statements RPARENCURLY main_statements .
    (2) main_statements -> main_statements . LPARENCURLY statements RPARENCURLY
    (3) main_statements -> main_statements . main_statements
    (1) main_statements -> . LPARENCURLY statements RPARENCURLY main_statements
    (2) main_statements -> . main_statements LPARENCURLY statements RPARENCURLY
    (3) main_statements -> . main_statements main_statements
    (4) main_statements -> . statements
    (5) main_statements -> . loop_statement
    (8) main_statements -> . if_statement
    (42) statements -> . statement SEMICOLON statements
    (43) statements -> . statement SEMICOLON
    (6) loop_statement -> . WHILE LPAREN condition RPAREN loop_instruction_statement
    (7) loop_statement -> . FOR ID ASSIGN num_expression RANGE num_expression loop_instruction_statement
    (11) if_statement -> . IF LPAREN condition RPAREN instruction_statement
    (12) if_statement -> . IF LPAREN condition RPAREN instruction_statement else_statement
    (44) statement -> . PRINT print_expression
    (50) statement -> . ID ASSIGN STRING
    (51) statement -> . ID MATRIX ASSIGN num_expression
    (52) statement -> . ID MATRIX ADDASSIGN num_expression
    (53) statement -> . ID MATRIX SUBASSIGN num_expression
    (54) statement -> . ID MATRIX MULASSIGN num_expression
    (55) statement -> . ID MATRIX DIVASSIGN num_expression
    (56) statement -> . ID ASSIGN num_expression
    (57) statement -> . ID ADDASSIGN num_expression
    (58) statement -> . ID SUBASSIGN num_expression
    (59) statement -> . ID MULASSIGN num_expression
    (60) statement -> . ID DIVASSIGN num_expression
    (77) statement -> . ID ASSIGN matrix_expression
    (78) statement -> . ID ADDASSIGN matrix_expression
    (79) statement -> . ID SUBASSIGN matrix_expression
    (80) statement -> . ID MULASSIGN matrix_expression
    (81) statement -> . ID DIVASSIGN matrix_expression
    (91) statement -> . return_statement
    (92) return_statement -> . RETURN expression

  ! shift/reduce conflict for LPARENCURLY resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
    $end            reduce using rule 1 (main_statements -> LPARENCURLY statements RPARENCURLY main_statements .)
    RPARENCURLY     reduce using rule 1 (main_statements -> LPARENCURLY statements RPARENCURLY main_statements .)
    CONTINUE        reduce using rule 1 (main_statements -> LPARENCURLY statements RPARENCURLY main_statements .)
    BREAK           reduce using rule 1 (main_statements -> LPARENCURLY statements RPARENCURLY main_statements .)
    LPARENCURLY     shift and go to state 15
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    IF              shift and go to state 10
    PRINT           shift and go to state 11
    ID              shift and go to state 9
    RETURN          shift and go to state 13

  ! LPARENCURLY     [ reduce using rule 1 (main_statements -> LPARENCURLY statements RPARENCURLY main_statements .) ]
  ! WHILE           [ reduce using rule 1 (main_statements -> LPARENCURLY statements RPARENCURLY main_statements .) ]
  ! FOR             [ reduce using rule 1 (main_statements -> LPARENCURLY statements RPARENCURLY main_statements .) ]
  ! IF              [ reduce using rule 1 (main_statements -> LPARENCURLY statements RPARENCURLY main_statements .) ]
  ! PRINT           [ reduce using rule 1 (main_statements -> LPARENCURLY statements RPARENCURLY main_statements .) ]
  ! ID              [ reduce using rule 1 (main_statements -> LPARENCURLY statements RPARENCURLY main_statements .) ]
  ! RETURN          [ reduce using rule 1 (main_statements -> LPARENCURLY statements RPARENCURLY main_statements .) ]

    statements                     shift and go to state 3
    main_statements                shift and go to state 14
    loop_statement                 shift and go to state 4
    if_statement                   shift and go to state 5
    statement                      shift and go to state 6
    return_statement               shift and go to state 12

state 91

    (6) loop_statement -> WHILE LPAREN condition RPAREN . loop_instruction_statement
    (13) loop_instruction_statement -> . LPARENCURLY main_statements_break_continue RPARENCURLY
    (14) loop_instruction_statement -> . statement SEMICOLON
    (15) loop_instruction_statement -> . BREAK SEMICOLON
    (16) loop_instruction_statement -> . CONTINUE SEMICOLON
    (17) loop_instruction_statement -> . loop_statement
    (44) statement -> . PRINT print_expression
    (50) statement -> . ID ASSIGN STRING
    (51) statement -> . ID MATRIX ASSIGN num_expression
    (52) statement -> . ID MATRIX ADDASSIGN num_expression
    (53) statement -> . ID MATRIX SUBASSIGN num_expression
    (54) statement -> . ID MATRIX MULASSIGN num_expression
    (55) statement -> . ID MATRIX DIVASSIGN num_expression
    (56) statement -> . ID ASSIGN num_expression
    (57) statement -> . ID ADDASSIGN num_expression
    (58) statement -> . ID SUBASSIGN num_expression
    (59) statement -> . ID MULASSIGN num_expression
    (60) statement -> . ID DIVASSIGN num_expression
    (77) statement -> . ID ASSIGN matrix_expression
    (78) statement -> . ID ADDASSIGN matrix_expression
    (79) statement -> . ID SUBASSIGN matrix_expression
    (80) statement -> . ID MULASSIGN matrix_expression
    (81) statement -> . ID DIVASSIGN matrix_expression
    (91) statement -> . return_statement
    (6) loop_statement -> . WHILE LPAREN condition RPAREN loop_instruction_statement
    (7) loop_statement -> . FOR ID ASSIGN num_expression RANGE num_expression loop_instruction_statement
    (92) return_statement -> . RETURN expression

    LPARENCURLY     shift and go to state 127
    BREAK           shift and go to state 129
    CONTINUE        shift and go to state 130
    PRINT           shift and go to state 11
    ID              shift and go to state 9
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    RETURN          shift and go to state 13

    loop_instruction_statement     shift and go to state 126
    statement                      shift and go to state 128
    loop_statement                 shift and go to state 131
    return_statement               shift and go to state 12

state 92

    (36) condition -> num_expression EQUALITY . num_expression
    (61) num_expression -> . ID
    (63) num_expression -> . LPAREN num_expression RPAREN
    (65) num_expression -> . num_expression ADD num_expression
    (66) num_expression -> . num_expression SUB num_expression
    (67) num_expression -> . num_expression MUL num_expression
    (68) num_expression -> . num_expression DIV num_expression
    (82) num_expression -> . SUB num_expression
    (85) num_expression -> . INTNUM
    (86) num_expression -> . FLOATNUM

    ID              shift and go to state 48
    LPAREN          shift and go to state 45
    SUB             shift and go to state 49
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 36

    num_expression                 shift and go to state 132

state 93

    (37) condition -> num_expression INEQUALITY . num_expression
    (61) num_expression -> . ID
    (63) num_expression -> . LPAREN num_expression RPAREN
    (65) num_expression -> . num_expression ADD num_expression
    (66) num_expression -> . num_expression SUB num_expression
    (67) num_expression -> . num_expression MUL num_expression
    (68) num_expression -> . num_expression DIV num_expression
    (82) num_expression -> . SUB num_expression
    (85) num_expression -> . INTNUM
    (86) num_expression -> . FLOATNUM

    ID              shift and go to state 48
    LPAREN          shift and go to state 45
    SUB             shift and go to state 49
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 36

    num_expression                 shift and go to state 133

state 94

    (38) condition -> num_expression GREATER . num_expression
    (61) num_expression -> . ID
    (63) num_expression -> . LPAREN num_expression RPAREN
    (65) num_expression -> . num_expression ADD num_expression
    (66) num_expression -> . num_expression SUB num_expression
    (67) num_expression -> . num_expression MUL num_expression
    (68) num_expression -> . num_expression DIV num_expression
    (82) num_expression -> . SUB num_expression
    (85) num_expression -> . INTNUM
    (86) num_expression -> . FLOATNUM

    ID              shift and go to state 48
    LPAREN          shift and go to state 45
    SUB             shift and go to state 49
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 36

    num_expression                 shift and go to state 134

state 95

    (39) condition -> num_expression GREATER_EQUAL . num_expression
    (61) num_expression -> . ID
    (63) num_expression -> . LPAREN num_expression RPAREN
    (65) num_expression -> . num_expression ADD num_expression
    (66) num_expression -> . num_expression SUB num_expression
    (67) num_expression -> . num_expression MUL num_expression
    (68) num_expression -> . num_expression DIV num_expression
    (82) num_expression -> . SUB num_expression
    (85) num_expression -> . INTNUM
    (86) num_expression -> . FLOATNUM

    ID              shift and go to state 48
    LPAREN          shift and go to state 45
    SUB             shift and go to state 49
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 36

    num_expression                 shift and go to state 135

state 96

    (40) condition -> num_expression LESS . num_expression
    (61) num_expression -> . ID
    (63) num_expression -> . LPAREN num_expression RPAREN
    (65) num_expression -> . num_expression ADD num_expression
    (66) num_expression -> . num_expression SUB num_expression
    (67) num_expression -> . num_expression MUL num_expression
    (68) num_expression -> . num_expression DIV num_expression
    (82) num_expression -> . SUB num_expression
    (85) num_expression -> . INTNUM
    (86) num_expression -> . FLOATNUM

    ID              shift and go to state 48
    LPAREN          shift and go to state 45
    SUB             shift and go to state 49
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 36

    num_expression                 shift and go to state 136

state 97

    (41) condition -> num_expression LESS_EQUAL . num_expression
    (61) num_expression -> . ID
    (63) num_expression -> . LPAREN num_expression RPAREN
    (65) num_expression -> . num_expression ADD num_expression
    (66) num_expression -> . num_expression SUB num_expression
    (67) num_expression -> . num_expression MUL num_expression
    (68) num_expression -> . num_expression DIV num_expression
    (82) num_expression -> . SUB num_expression
    (85) num_expression -> . INTNUM
    (86) num_expression -> . FLOATNUM

    ID              shift and go to state 48
    LPAREN          shift and go to state 45
    SUB             shift and go to state 49
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 36

    num_expression                 shift and go to state 137

state 98

    (7) loop_statement -> FOR ID ASSIGN num_expression . RANGE num_expression loop_instruction_statement
    (65) num_expression -> num_expression . ADD num_expression
    (66) num_expression -> num_expression . SUB num_expression
    (67) num_expression -> num_expression . MUL num_expression
    (68) num_expression -> num_expression . DIV num_expression

    RANGE           shift and go to state 138
    ADD             shift and go to state 69
    SUB             shift and go to state 70
    MUL             shift and go to state 71
    DIV             shift and go to state 72


state 99

    (51) statement -> ID MATRIX ASSIGN num_expression .
    (65) num_expression -> num_expression . ADD num_expression
    (66) num_expression -> num_expression . SUB num_expression
    (67) num_expression -> num_expression . MUL num_expression
    (68) num_expression -> num_expression . DIV num_expression

    SEMICOLON       reduce using rule 51 (statement -> ID MATRIX ASSIGN num_expression .)
    ADD             shift and go to state 69
    SUB             shift and go to state 70
    MUL             shift and go to state 71
    DIV             shift and go to state 72


state 100

    (52) statement -> ID MATRIX ADDASSIGN num_expression .
    (65) num_expression -> num_expression . ADD num_expression
    (66) num_expression -> num_expression . SUB num_expression
    (67) num_expression -> num_expression . MUL num_expression
    (68) num_expression -> num_expression . DIV num_expression

    SEMICOLON       reduce using rule 52 (statement -> ID MATRIX ADDASSIGN num_expression .)
    ADD             shift and go to state 69
    SUB             shift and go to state 70
    MUL             shift and go to state 71
    DIV             shift and go to state 72


state 101

    (53) statement -> ID MATRIX SUBASSIGN num_expression .
    (65) num_expression -> num_expression . ADD num_expression
    (66) num_expression -> num_expression . SUB num_expression
    (67) num_expression -> num_expression . MUL num_expression
    (68) num_expression -> num_expression . DIV num_expression

    SEMICOLON       reduce using rule 53 (statement -> ID MATRIX SUBASSIGN num_expression .)
    ADD             shift and go to state 69
    SUB             shift and go to state 70
    MUL             shift and go to state 71
    DIV             shift and go to state 72


state 102

    (54) statement -> ID MATRIX MULASSIGN num_expression .
    (65) num_expression -> num_expression . ADD num_expression
    (66) num_expression -> num_expression . SUB num_expression
    (67) num_expression -> num_expression . MUL num_expression
    (68) num_expression -> num_expression . DIV num_expression

    SEMICOLON       reduce using rule 54 (statement -> ID MATRIX MULASSIGN num_expression .)
    ADD             shift and go to state 69
    SUB             shift and go to state 70
    MUL             shift and go to state 71
    DIV             shift and go to state 72


state 103

    (55) statement -> ID MATRIX DIVASSIGN num_expression .
    (65) num_expression -> num_expression . ADD num_expression
    (66) num_expression -> num_expression . SUB num_expression
    (67) num_expression -> num_expression . MUL num_expression
    (68) num_expression -> num_expression . DIV num_expression

    SEMICOLON       reduce using rule 55 (statement -> ID MATRIX DIVASSIGN num_expression .)
    ADD             shift and go to state 69
    SUB             shift and go to state 70
    MUL             shift and go to state 71
    DIV             shift and go to state 72


state 104

    (11) if_statement -> IF LPAREN condition RPAREN . instruction_statement
    (12) if_statement -> IF LPAREN condition RPAREN . instruction_statement else_statement
    (33) instruction_statement -> . LPARENCURLY main_statements RPARENCURLY
    (34) instruction_statement -> . LPARENCURLY empty RPARENCURLY
    (35) instruction_statement -> . statement SEMICOLON
    (44) statement -> . PRINT print_expression
    (50) statement -> . ID ASSIGN STRING
    (51) statement -> . ID MATRIX ASSIGN num_expression
    (52) statement -> . ID MATRIX ADDASSIGN num_expression
    (53) statement -> . ID MATRIX SUBASSIGN num_expression
    (54) statement -> . ID MATRIX MULASSIGN num_expression
    (55) statement -> . ID MATRIX DIVASSIGN num_expression
    (56) statement -> . ID ASSIGN num_expression
    (57) statement -> . ID ADDASSIGN num_expression
    (58) statement -> . ID SUBASSIGN num_expression
    (59) statement -> . ID MULASSIGN num_expression
    (60) statement -> . ID DIVASSIGN num_expression
    (77) statement -> . ID ASSIGN matrix_expression
    (78) statement -> . ID ADDASSIGN matrix_expression
    (79) statement -> . ID SUBASSIGN matrix_expression
    (80) statement -> . ID MULASSIGN matrix_expression
    (81) statement -> . ID DIVASSIGN matrix_expression
    (91) statement -> . return_statement
    (92) return_statement -> . RETURN expression

    LPARENCURLY     shift and go to state 140
    PRINT           shift and go to state 11
    ID              shift and go to state 9
    RETURN          shift and go to state 13

    instruction_statement          shift and go to state 139
    statement                      shift and go to state 141
    return_statement               shift and go to state 12

state 105

    (46) print_expression -> print_expression COMMA print_expression .
    (46) print_expression -> print_expression . COMMA print_expression

  ! shift/reduce conflict for COMMA resolved as shift
    SEMICOLON       reduce using rule 46 (print_expression -> print_expression COMMA print_expression .)
    COMMA           shift and go to state 68

  ! COMMA           [ reduce using rule 46 (print_expression -> print_expression COMMA print_expression .) ]


state 106

    (65) num_expression -> num_expression ADD num_expression .
    (65) num_expression -> num_expression . ADD num_expression
    (66) num_expression -> num_expression . SUB num_expression
    (67) num_expression -> num_expression . MUL num_expression
    (68) num_expression -> num_expression . DIV num_expression

    ADD             reduce using rule 65 (num_expression -> num_expression ADD num_expression .)
    SUB             reduce using rule 65 (num_expression -> num_expression ADD num_expression .)
    COMMA           reduce using rule 65 (num_expression -> num_expression ADD num_expression .)
    SEMICOLON       reduce using rule 65 (num_expression -> num_expression ADD num_expression .)
    EQUALITY        reduce using rule 65 (num_expression -> num_expression ADD num_expression .)
    INEQUALITY      reduce using rule 65 (num_expression -> num_expression ADD num_expression .)
    GREATER         reduce using rule 65 (num_expression -> num_expression ADD num_expression .)
    GREATER_EQUAL   reduce using rule 65 (num_expression -> num_expression ADD num_expression .)
    LESS            reduce using rule 65 (num_expression -> num_expression ADD num_expression .)
    LESS_EQUAL      reduce using rule 65 (num_expression -> num_expression ADD num_expression .)
    RPAREN          reduce using rule 65 (num_expression -> num_expression ADD num_expression .)
    RANGE           reduce using rule 65 (num_expression -> num_expression ADD num_expression .)
    LPARENCURLY     reduce using rule 65 (num_expression -> num_expression ADD num_expression .)
    BREAK           reduce using rule 65 (num_expression -> num_expression ADD num_expression .)
    CONTINUE        reduce using rule 65 (num_expression -> num_expression ADD num_expression .)
    PRINT           reduce using rule 65 (num_expression -> num_expression ADD num_expression .)
    ID              reduce using rule 65 (num_expression -> num_expression ADD num_expression .)
    WHILE           reduce using rule 65 (num_expression -> num_expression ADD num_expression .)
    FOR             reduce using rule 65 (num_expression -> num_expression ADD num_expression .)
    RETURN          reduce using rule 65 (num_expression -> num_expression ADD num_expression .)
    MUL             shift and go to state 71
    DIV             shift and go to state 72

  ! MUL             [ reduce using rule 65 (num_expression -> num_expression ADD num_expression .) ]
  ! DIV             [ reduce using rule 65 (num_expression -> num_expression ADD num_expression .) ]
  ! ADD             [ shift and go to state 69 ]
  ! SUB             [ shift and go to state 70 ]


state 107

    (66) num_expression -> num_expression SUB num_expression .
    (65) num_expression -> num_expression . ADD num_expression
    (66) num_expression -> num_expression . SUB num_expression
    (67) num_expression -> num_expression . MUL num_expression
    (68) num_expression -> num_expression . DIV num_expression

    ADD             reduce using rule 66 (num_expression -> num_expression SUB num_expression .)
    SUB             reduce using rule 66 (num_expression -> num_expression SUB num_expression .)
    COMMA           reduce using rule 66 (num_expression -> num_expression SUB num_expression .)
    SEMICOLON       reduce using rule 66 (num_expression -> num_expression SUB num_expression .)
    EQUALITY        reduce using rule 66 (num_expression -> num_expression SUB num_expression .)
    INEQUALITY      reduce using rule 66 (num_expression -> num_expression SUB num_expression .)
    GREATER         reduce using rule 66 (num_expression -> num_expression SUB num_expression .)
    GREATER_EQUAL   reduce using rule 66 (num_expression -> num_expression SUB num_expression .)
    LESS            reduce using rule 66 (num_expression -> num_expression SUB num_expression .)
    LESS_EQUAL      reduce using rule 66 (num_expression -> num_expression SUB num_expression .)
    RPAREN          reduce using rule 66 (num_expression -> num_expression SUB num_expression .)
    RANGE           reduce using rule 66 (num_expression -> num_expression SUB num_expression .)
    LPARENCURLY     reduce using rule 66 (num_expression -> num_expression SUB num_expression .)
    BREAK           reduce using rule 66 (num_expression -> num_expression SUB num_expression .)
    CONTINUE        reduce using rule 66 (num_expression -> num_expression SUB num_expression .)
    PRINT           reduce using rule 66 (num_expression -> num_expression SUB num_expression .)
    ID              reduce using rule 66 (num_expression -> num_expression SUB num_expression .)
    WHILE           reduce using rule 66 (num_expression -> num_expression SUB num_expression .)
    FOR             reduce using rule 66 (num_expression -> num_expression SUB num_expression .)
    RETURN          reduce using rule 66 (num_expression -> num_expression SUB num_expression .)
    MUL             shift and go to state 71
    DIV             shift and go to state 72

  ! MUL             [ reduce using rule 66 (num_expression -> num_expression SUB num_expression .) ]
  ! DIV             [ reduce using rule 66 (num_expression -> num_expression SUB num_expression .) ]
  ! ADD             [ shift and go to state 69 ]
  ! SUB             [ shift and go to state 70 ]


state 108

    (67) num_expression -> num_expression MUL num_expression .
    (65) num_expression -> num_expression . ADD num_expression
    (66) num_expression -> num_expression . SUB num_expression
    (67) num_expression -> num_expression . MUL num_expression
    (68) num_expression -> num_expression . DIV num_expression

    ADD             reduce using rule 67 (num_expression -> num_expression MUL num_expression .)
    SUB             reduce using rule 67 (num_expression -> num_expression MUL num_expression .)
    MUL             reduce using rule 67 (num_expression -> num_expression MUL num_expression .)
    DIV             reduce using rule 67 (num_expression -> num_expression MUL num_expression .)
    COMMA           reduce using rule 67 (num_expression -> num_expression MUL num_expression .)
    SEMICOLON       reduce using rule 67 (num_expression -> num_expression MUL num_expression .)
    EQUALITY        reduce using rule 67 (num_expression -> num_expression MUL num_expression .)
    INEQUALITY      reduce using rule 67 (num_expression -> num_expression MUL num_expression .)
    GREATER         reduce using rule 67 (num_expression -> num_expression MUL num_expression .)
    GREATER_EQUAL   reduce using rule 67 (num_expression -> num_expression MUL num_expression .)
    LESS            reduce using rule 67 (num_expression -> num_expression MUL num_expression .)
    LESS_EQUAL      reduce using rule 67 (num_expression -> num_expression MUL num_expression .)
    RPAREN          reduce using rule 67 (num_expression -> num_expression MUL num_expression .)
    RANGE           reduce using rule 67 (num_expression -> num_expression MUL num_expression .)
    LPARENCURLY     reduce using rule 67 (num_expression -> num_expression MUL num_expression .)
    BREAK           reduce using rule 67 (num_expression -> num_expression MUL num_expression .)
    CONTINUE        reduce using rule 67 (num_expression -> num_expression MUL num_expression .)
    PRINT           reduce using rule 67 (num_expression -> num_expression MUL num_expression .)
    ID              reduce using rule 67 (num_expression -> num_expression MUL num_expression .)
    WHILE           reduce using rule 67 (num_expression -> num_expression MUL num_expression .)
    FOR             reduce using rule 67 (num_expression -> num_expression MUL num_expression .)
    RETURN          reduce using rule 67 (num_expression -> num_expression MUL num_expression .)

  ! ADD             [ shift and go to state 69 ]
  ! SUB             [ shift and go to state 70 ]
  ! MUL             [ shift and go to state 71 ]
  ! DIV             [ shift and go to state 72 ]


state 109

    (68) num_expression -> num_expression DIV num_expression .
    (65) num_expression -> num_expression . ADD num_expression
    (66) num_expression -> num_expression . SUB num_expression
    (67) num_expression -> num_expression . MUL num_expression
    (68) num_expression -> num_expression . DIV num_expression

    ADD             reduce using rule 68 (num_expression -> num_expression DIV num_expression .)
    SUB             reduce using rule 68 (num_expression -> num_expression DIV num_expression .)
    MUL             reduce using rule 68 (num_expression -> num_expression DIV num_expression .)
    DIV             reduce using rule 68 (num_expression -> num_expression DIV num_expression .)
    COMMA           reduce using rule 68 (num_expression -> num_expression DIV num_expression .)
    SEMICOLON       reduce using rule 68 (num_expression -> num_expression DIV num_expression .)
    EQUALITY        reduce using rule 68 (num_expression -> num_expression DIV num_expression .)
    INEQUALITY      reduce using rule 68 (num_expression -> num_expression DIV num_expression .)
    GREATER         reduce using rule 68 (num_expression -> num_expression DIV num_expression .)
    GREATER_EQUAL   reduce using rule 68 (num_expression -> num_expression DIV num_expression .)
    LESS            reduce using rule 68 (num_expression -> num_expression DIV num_expression .)
    LESS_EQUAL      reduce using rule 68 (num_expression -> num_expression DIV num_expression .)
    RPAREN          reduce using rule 68 (num_expression -> num_expression DIV num_expression .)
    RANGE           reduce using rule 68 (num_expression -> num_expression DIV num_expression .)
    LPARENCURLY     reduce using rule 68 (num_expression -> num_expression DIV num_expression .)
    BREAK           reduce using rule 68 (num_expression -> num_expression DIV num_expression .)
    CONTINUE        reduce using rule 68 (num_expression -> num_expression DIV num_expression .)
    PRINT           reduce using rule 68 (num_expression -> num_expression DIV num_expression .)
    ID              reduce using rule 68 (num_expression -> num_expression DIV num_expression .)
    WHILE           reduce using rule 68 (num_expression -> num_expression DIV num_expression .)
    FOR             reduce using rule 68 (num_expression -> num_expression DIV num_expression .)
    RETURN          reduce using rule 68 (num_expression -> num_expression DIV num_expression .)

  ! ADD             [ shift and go to state 69 ]
  ! SUB             [ shift and go to state 70 ]
  ! MUL             [ shift and go to state 71 ]
  ! DIV             [ shift and go to state 72 ]


state 110

    (69) matrix_expression -> matrix_expression ADD matrix_expression .
    (69) matrix_expression -> matrix_expression . ADD matrix_expression
    (70) matrix_expression -> matrix_expression . SUB matrix_expression
    (71) matrix_expression -> matrix_expression . MUL matrix_expression
    (72) matrix_expression -> matrix_expression . DIV matrix_expression
    (73) matrix_expression -> matrix_expression . DOTADD matrix_expression
    (74) matrix_expression -> matrix_expression . DOTSUB matrix_expression
    (75) matrix_expression -> matrix_expression . DOTMUL matrix_expression
    (76) matrix_expression -> matrix_expression . DOTDIV matrix_expression
    (84) matrix_expression -> matrix_expression . TRANSPOSE

    ADD             reduce using rule 69 (matrix_expression -> matrix_expression ADD matrix_expression .)
    SUB             reduce using rule 69 (matrix_expression -> matrix_expression ADD matrix_expression .)
    DOTADD          reduce using rule 69 (matrix_expression -> matrix_expression ADD matrix_expression .)
    DOTSUB          reduce using rule 69 (matrix_expression -> matrix_expression ADD matrix_expression .)
    DOTMUL          reduce using rule 69 (matrix_expression -> matrix_expression ADD matrix_expression .)
    DOTDIV          reduce using rule 69 (matrix_expression -> matrix_expression ADD matrix_expression .)
    TRANSPOSE       reduce using rule 69 (matrix_expression -> matrix_expression ADD matrix_expression .)
    COMMA           reduce using rule 69 (matrix_expression -> matrix_expression ADD matrix_expression .)
    SEMICOLON       reduce using rule 69 (matrix_expression -> matrix_expression ADD matrix_expression .)
    RPAREN          reduce using rule 69 (matrix_expression -> matrix_expression ADD matrix_expression .)
    MUL             shift and go to state 75
    DIV             shift and go to state 76

  ! MUL             [ reduce using rule 69 (matrix_expression -> matrix_expression ADD matrix_expression .) ]
  ! DIV             [ reduce using rule 69 (matrix_expression -> matrix_expression ADD matrix_expression .) ]
  ! ADD             [ shift and go to state 73 ]
  ! SUB             [ shift and go to state 74 ]
  ! DOTADD          [ shift and go to state 77 ]
  ! DOTSUB          [ shift and go to state 78 ]
  ! DOTMUL          [ shift and go to state 79 ]
  ! DOTDIV          [ shift and go to state 80 ]
  ! TRANSPOSE       [ shift and go to state 81 ]


state 111

    (62) matrix_expression -> ID .

    ADD             reduce using rule 62 (matrix_expression -> ID .)
    SUB             reduce using rule 62 (matrix_expression -> ID .)
    MUL             reduce using rule 62 (matrix_expression -> ID .)
    DIV             reduce using rule 62 (matrix_expression -> ID .)
    DOTADD          reduce using rule 62 (matrix_expression -> ID .)
    DOTSUB          reduce using rule 62 (matrix_expression -> ID .)
    DOTMUL          reduce using rule 62 (matrix_expression -> ID .)
    DOTDIV          reduce using rule 62 (matrix_expression -> ID .)
    TRANSPOSE       reduce using rule 62 (matrix_expression -> ID .)
    COMMA           reduce using rule 62 (matrix_expression -> ID .)
    SEMICOLON       reduce using rule 62 (matrix_expression -> ID .)
    RPAREN          reduce using rule 62 (matrix_expression -> ID .)


state 112

    (64) matrix_expression -> LPAREN . matrix_expression RPAREN
    (62) matrix_expression -> . ID
    (64) matrix_expression -> . LPAREN matrix_expression RPAREN
    (69) matrix_expression -> . matrix_expression ADD matrix_expression
    (70) matrix_expression -> . matrix_expression SUB matrix_expression
    (71) matrix_expression -> . matrix_expression MUL matrix_expression
    (72) matrix_expression -> . matrix_expression DIV matrix_expression
    (73) matrix_expression -> . matrix_expression DOTADD matrix_expression
    (74) matrix_expression -> . matrix_expression DOTSUB matrix_expression
    (75) matrix_expression -> . matrix_expression DOTMUL matrix_expression
    (76) matrix_expression -> . matrix_expression DOTDIV matrix_expression
    (83) matrix_expression -> . SUB matrix_expression
    (84) matrix_expression -> . matrix_expression TRANSPOSE
    (87) matrix_expression -> . ZEROS LPAREN INTNUM RPAREN
    (88) matrix_expression -> . ONES LPAREN INTNUM RPAREN
    (89) matrix_expression -> . EYE LPAREN INTNUM RPAREN
    (90) matrix_expression -> . MATRIX

    ID              shift and go to state 111
    LPAREN          shift and go to state 112
    SUB             shift and go to state 113
    ZEROS           shift and go to state 37
    ONES            shift and go to state 38
    EYE             shift and go to state 39
    MATRIX          shift and go to state 40

    matrix_expression              shift and go to state 83

state 113

    (83) matrix_expression -> SUB . matrix_expression
    (62) matrix_expression -> . ID
    (64) matrix_expression -> . LPAREN matrix_expression RPAREN
    (69) matrix_expression -> . matrix_expression ADD matrix_expression
    (70) matrix_expression -> . matrix_expression SUB matrix_expression
    (71) matrix_expression -> . matrix_expression MUL matrix_expression
    (72) matrix_expression -> . matrix_expression DIV matrix_expression
    (73) matrix_expression -> . matrix_expression DOTADD matrix_expression
    (74) matrix_expression -> . matrix_expression DOTSUB matrix_expression
    (75) matrix_expression -> . matrix_expression DOTMUL matrix_expression
    (76) matrix_expression -> . matrix_expression DOTDIV matrix_expression
    (83) matrix_expression -> . SUB matrix_expression
    (84) matrix_expression -> . matrix_expression TRANSPOSE
    (87) matrix_expression -> . ZEROS LPAREN INTNUM RPAREN
    (88) matrix_expression -> . ONES LPAREN INTNUM RPAREN
    (89) matrix_expression -> . EYE LPAREN INTNUM RPAREN
    (90) matrix_expression -> . MATRIX

    ID              shift and go to state 111
    LPAREN          shift and go to state 112
    SUB             shift and go to state 113
    ZEROS           shift and go to state 37
    ONES            shift and go to state 38
    EYE             shift and go to state 39
    MATRIX          shift and go to state 40

    matrix_expression              shift and go to state 85

state 114

    (70) matrix_expression -> matrix_expression SUB matrix_expression .
    (69) matrix_expression -> matrix_expression . ADD matrix_expression
    (70) matrix_expression -> matrix_expression . SUB matrix_expression
    (71) matrix_expression -> matrix_expression . MUL matrix_expression
    (72) matrix_expression -> matrix_expression . DIV matrix_expression
    (73) matrix_expression -> matrix_expression . DOTADD matrix_expression
    (74) matrix_expression -> matrix_expression . DOTSUB matrix_expression
    (75) matrix_expression -> matrix_expression . DOTMUL matrix_expression
    (76) matrix_expression -> matrix_expression . DOTDIV matrix_expression
    (84) matrix_expression -> matrix_expression . TRANSPOSE

    ADD             reduce using rule 70 (matrix_expression -> matrix_expression SUB matrix_expression .)
    SUB             reduce using rule 70 (matrix_expression -> matrix_expression SUB matrix_expression .)
    DOTADD          reduce using rule 70 (matrix_expression -> matrix_expression SUB matrix_expression .)
    DOTSUB          reduce using rule 70 (matrix_expression -> matrix_expression SUB matrix_expression .)
    DOTMUL          reduce using rule 70 (matrix_expression -> matrix_expression SUB matrix_expression .)
    DOTDIV          reduce using rule 70 (matrix_expression -> matrix_expression SUB matrix_expression .)
    TRANSPOSE       reduce using rule 70 (matrix_expression -> matrix_expression SUB matrix_expression .)
    COMMA           reduce using rule 70 (matrix_expression -> matrix_expression SUB matrix_expression .)
    SEMICOLON       reduce using rule 70 (matrix_expression -> matrix_expression SUB matrix_expression .)
    RPAREN          reduce using rule 70 (matrix_expression -> matrix_expression SUB matrix_expression .)
    MUL             shift and go to state 75
    DIV             shift and go to state 76

  ! MUL             [ reduce using rule 70 (matrix_expression -> matrix_expression SUB matrix_expression .) ]
  ! DIV             [ reduce using rule 70 (matrix_expression -> matrix_expression SUB matrix_expression .) ]
  ! ADD             [ shift and go to state 73 ]
  ! SUB             [ shift and go to state 74 ]
  ! DOTADD          [ shift and go to state 77 ]
  ! DOTSUB          [ shift and go to state 78 ]
  ! DOTMUL          [ shift and go to state 79 ]
  ! DOTDIV          [ shift and go to state 80 ]
  ! TRANSPOSE       [ shift and go to state 81 ]


state 115

    (71) matrix_expression -> matrix_expression MUL matrix_expression .
    (69) matrix_expression -> matrix_expression . ADD matrix_expression
    (70) matrix_expression -> matrix_expression . SUB matrix_expression
    (71) matrix_expression -> matrix_expression . MUL matrix_expression
    (72) matrix_expression -> matrix_expression . DIV matrix_expression
    (73) matrix_expression -> matrix_expression . DOTADD matrix_expression
    (74) matrix_expression -> matrix_expression . DOTSUB matrix_expression
    (75) matrix_expression -> matrix_expression . DOTMUL matrix_expression
    (76) matrix_expression -> matrix_expression . DOTDIV matrix_expression
    (84) matrix_expression -> matrix_expression . TRANSPOSE

    ADD             reduce using rule 71 (matrix_expression -> matrix_expression MUL matrix_expression .)
    SUB             reduce using rule 71 (matrix_expression -> matrix_expression MUL matrix_expression .)
    MUL             reduce using rule 71 (matrix_expression -> matrix_expression MUL matrix_expression .)
    DIV             reduce using rule 71 (matrix_expression -> matrix_expression MUL matrix_expression .)
    DOTADD          reduce using rule 71 (matrix_expression -> matrix_expression MUL matrix_expression .)
    DOTSUB          reduce using rule 71 (matrix_expression -> matrix_expression MUL matrix_expression .)
    DOTMUL          reduce using rule 71 (matrix_expression -> matrix_expression MUL matrix_expression .)
    DOTDIV          reduce using rule 71 (matrix_expression -> matrix_expression MUL matrix_expression .)
    TRANSPOSE       reduce using rule 71 (matrix_expression -> matrix_expression MUL matrix_expression .)
    COMMA           reduce using rule 71 (matrix_expression -> matrix_expression MUL matrix_expression .)
    SEMICOLON       reduce using rule 71 (matrix_expression -> matrix_expression MUL matrix_expression .)
    RPAREN          reduce using rule 71 (matrix_expression -> matrix_expression MUL matrix_expression .)

  ! ADD             [ shift and go to state 73 ]
  ! SUB             [ shift and go to state 74 ]
  ! MUL             [ shift and go to state 75 ]
  ! DIV             [ shift and go to state 76 ]
  ! DOTADD          [ shift and go to state 77 ]
  ! DOTSUB          [ shift and go to state 78 ]
  ! DOTMUL          [ shift and go to state 79 ]
  ! DOTDIV          [ shift and go to state 80 ]
  ! TRANSPOSE       [ shift and go to state 81 ]


state 116

    (72) matrix_expression -> matrix_expression DIV matrix_expression .
    (69) matrix_expression -> matrix_expression . ADD matrix_expression
    (70) matrix_expression -> matrix_expression . SUB matrix_expression
    (71) matrix_expression -> matrix_expression . MUL matrix_expression
    (72) matrix_expression -> matrix_expression . DIV matrix_expression
    (73) matrix_expression -> matrix_expression . DOTADD matrix_expression
    (74) matrix_expression -> matrix_expression . DOTSUB matrix_expression
    (75) matrix_expression -> matrix_expression . DOTMUL matrix_expression
    (76) matrix_expression -> matrix_expression . DOTDIV matrix_expression
    (84) matrix_expression -> matrix_expression . TRANSPOSE

    ADD             reduce using rule 72 (matrix_expression -> matrix_expression DIV matrix_expression .)
    SUB             reduce using rule 72 (matrix_expression -> matrix_expression DIV matrix_expression .)
    MUL             reduce using rule 72 (matrix_expression -> matrix_expression DIV matrix_expression .)
    DIV             reduce using rule 72 (matrix_expression -> matrix_expression DIV matrix_expression .)
    DOTADD          reduce using rule 72 (matrix_expression -> matrix_expression DIV matrix_expression .)
    DOTSUB          reduce using rule 72 (matrix_expression -> matrix_expression DIV matrix_expression .)
    DOTMUL          reduce using rule 72 (matrix_expression -> matrix_expression DIV matrix_expression .)
    DOTDIV          reduce using rule 72 (matrix_expression -> matrix_expression DIV matrix_expression .)
    TRANSPOSE       reduce using rule 72 (matrix_expression -> matrix_expression DIV matrix_expression .)
    COMMA           reduce using rule 72 (matrix_expression -> matrix_expression DIV matrix_expression .)
    SEMICOLON       reduce using rule 72 (matrix_expression -> matrix_expression DIV matrix_expression .)
    RPAREN          reduce using rule 72 (matrix_expression -> matrix_expression DIV matrix_expression .)

  ! ADD             [ shift and go to state 73 ]
  ! SUB             [ shift and go to state 74 ]
  ! MUL             [ shift and go to state 75 ]
  ! DIV             [ shift and go to state 76 ]
  ! DOTADD          [ shift and go to state 77 ]
  ! DOTSUB          [ shift and go to state 78 ]
  ! DOTMUL          [ shift and go to state 79 ]
  ! DOTDIV          [ shift and go to state 80 ]
  ! TRANSPOSE       [ shift and go to state 81 ]


state 117

    (73) matrix_expression -> matrix_expression DOTADD matrix_expression .
    (69) matrix_expression -> matrix_expression . ADD matrix_expression
    (70) matrix_expression -> matrix_expression . SUB matrix_expression
    (71) matrix_expression -> matrix_expression . MUL matrix_expression
    (72) matrix_expression -> matrix_expression . DIV matrix_expression
    (73) matrix_expression -> matrix_expression . DOTADD matrix_expression
    (74) matrix_expression -> matrix_expression . DOTSUB matrix_expression
    (75) matrix_expression -> matrix_expression . DOTMUL matrix_expression
    (76) matrix_expression -> matrix_expression . DOTDIV matrix_expression
    (84) matrix_expression -> matrix_expression . TRANSPOSE

  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for DOTADD resolved as shift
  ! shift/reduce conflict for DOTSUB resolved as shift
  ! shift/reduce conflict for DOTMUL resolved as shift
  ! shift/reduce conflict for DOTDIV resolved as shift
  ! shift/reduce conflict for TRANSPOSE resolved as shift
    COMMA           reduce using rule 73 (matrix_expression -> matrix_expression DOTADD matrix_expression .)
    SEMICOLON       reduce using rule 73 (matrix_expression -> matrix_expression DOTADD matrix_expression .)
    RPAREN          reduce using rule 73 (matrix_expression -> matrix_expression DOTADD matrix_expression .)
    ADD             shift and go to state 73
    SUB             shift and go to state 74
    MUL             shift and go to state 75
    DIV             shift and go to state 76
    DOTADD          shift and go to state 77
    DOTSUB          shift and go to state 78
    DOTMUL          shift and go to state 79
    DOTDIV          shift and go to state 80
    TRANSPOSE       shift and go to state 81

  ! ADD             [ reduce using rule 73 (matrix_expression -> matrix_expression DOTADD matrix_expression .) ]
  ! SUB             [ reduce using rule 73 (matrix_expression -> matrix_expression DOTADD matrix_expression .) ]
  ! MUL             [ reduce using rule 73 (matrix_expression -> matrix_expression DOTADD matrix_expression .) ]
  ! DIV             [ reduce using rule 73 (matrix_expression -> matrix_expression DOTADD matrix_expression .) ]
  ! DOTADD          [ reduce using rule 73 (matrix_expression -> matrix_expression DOTADD matrix_expression .) ]
  ! DOTSUB          [ reduce using rule 73 (matrix_expression -> matrix_expression DOTADD matrix_expression .) ]
  ! DOTMUL          [ reduce using rule 73 (matrix_expression -> matrix_expression DOTADD matrix_expression .) ]
  ! DOTDIV          [ reduce using rule 73 (matrix_expression -> matrix_expression DOTADD matrix_expression .) ]
  ! TRANSPOSE       [ reduce using rule 73 (matrix_expression -> matrix_expression DOTADD matrix_expression .) ]


state 118

    (74) matrix_expression -> matrix_expression DOTSUB matrix_expression .
    (69) matrix_expression -> matrix_expression . ADD matrix_expression
    (70) matrix_expression -> matrix_expression . SUB matrix_expression
    (71) matrix_expression -> matrix_expression . MUL matrix_expression
    (72) matrix_expression -> matrix_expression . DIV matrix_expression
    (73) matrix_expression -> matrix_expression . DOTADD matrix_expression
    (74) matrix_expression -> matrix_expression . DOTSUB matrix_expression
    (75) matrix_expression -> matrix_expression . DOTMUL matrix_expression
    (76) matrix_expression -> matrix_expression . DOTDIV matrix_expression
    (84) matrix_expression -> matrix_expression . TRANSPOSE

  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for DOTADD resolved as shift
  ! shift/reduce conflict for DOTSUB resolved as shift
  ! shift/reduce conflict for DOTMUL resolved as shift
  ! shift/reduce conflict for DOTDIV resolved as shift
  ! shift/reduce conflict for TRANSPOSE resolved as shift
    COMMA           reduce using rule 74 (matrix_expression -> matrix_expression DOTSUB matrix_expression .)
    SEMICOLON       reduce using rule 74 (matrix_expression -> matrix_expression DOTSUB matrix_expression .)
    RPAREN          reduce using rule 74 (matrix_expression -> matrix_expression DOTSUB matrix_expression .)
    ADD             shift and go to state 73
    SUB             shift and go to state 74
    MUL             shift and go to state 75
    DIV             shift and go to state 76
    DOTADD          shift and go to state 77
    DOTSUB          shift and go to state 78
    DOTMUL          shift and go to state 79
    DOTDIV          shift and go to state 80
    TRANSPOSE       shift and go to state 81

  ! ADD             [ reduce using rule 74 (matrix_expression -> matrix_expression DOTSUB matrix_expression .) ]
  ! SUB             [ reduce using rule 74 (matrix_expression -> matrix_expression DOTSUB matrix_expression .) ]
  ! MUL             [ reduce using rule 74 (matrix_expression -> matrix_expression DOTSUB matrix_expression .) ]
  ! DIV             [ reduce using rule 74 (matrix_expression -> matrix_expression DOTSUB matrix_expression .) ]
  ! DOTADD          [ reduce using rule 74 (matrix_expression -> matrix_expression DOTSUB matrix_expression .) ]
  ! DOTSUB          [ reduce using rule 74 (matrix_expression -> matrix_expression DOTSUB matrix_expression .) ]
  ! DOTMUL          [ reduce using rule 74 (matrix_expression -> matrix_expression DOTSUB matrix_expression .) ]
  ! DOTDIV          [ reduce using rule 74 (matrix_expression -> matrix_expression DOTSUB matrix_expression .) ]
  ! TRANSPOSE       [ reduce using rule 74 (matrix_expression -> matrix_expression DOTSUB matrix_expression .) ]


state 119

    (75) matrix_expression -> matrix_expression DOTMUL matrix_expression .
    (69) matrix_expression -> matrix_expression . ADD matrix_expression
    (70) matrix_expression -> matrix_expression . SUB matrix_expression
    (71) matrix_expression -> matrix_expression . MUL matrix_expression
    (72) matrix_expression -> matrix_expression . DIV matrix_expression
    (73) matrix_expression -> matrix_expression . DOTADD matrix_expression
    (74) matrix_expression -> matrix_expression . DOTSUB matrix_expression
    (75) matrix_expression -> matrix_expression . DOTMUL matrix_expression
    (76) matrix_expression -> matrix_expression . DOTDIV matrix_expression
    (84) matrix_expression -> matrix_expression . TRANSPOSE

  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for DOTADD resolved as shift
  ! shift/reduce conflict for DOTSUB resolved as shift
  ! shift/reduce conflict for DOTMUL resolved as shift
  ! shift/reduce conflict for DOTDIV resolved as shift
  ! shift/reduce conflict for TRANSPOSE resolved as shift
    COMMA           reduce using rule 75 (matrix_expression -> matrix_expression DOTMUL matrix_expression .)
    SEMICOLON       reduce using rule 75 (matrix_expression -> matrix_expression DOTMUL matrix_expression .)
    RPAREN          reduce using rule 75 (matrix_expression -> matrix_expression DOTMUL matrix_expression .)
    ADD             shift and go to state 73
    SUB             shift and go to state 74
    MUL             shift and go to state 75
    DIV             shift and go to state 76
    DOTADD          shift and go to state 77
    DOTSUB          shift and go to state 78
    DOTMUL          shift and go to state 79
    DOTDIV          shift and go to state 80
    TRANSPOSE       shift and go to state 81

  ! ADD             [ reduce using rule 75 (matrix_expression -> matrix_expression DOTMUL matrix_expression .) ]
  ! SUB             [ reduce using rule 75 (matrix_expression -> matrix_expression DOTMUL matrix_expression .) ]
  ! MUL             [ reduce using rule 75 (matrix_expression -> matrix_expression DOTMUL matrix_expression .) ]
  ! DIV             [ reduce using rule 75 (matrix_expression -> matrix_expression DOTMUL matrix_expression .) ]
  ! DOTADD          [ reduce using rule 75 (matrix_expression -> matrix_expression DOTMUL matrix_expression .) ]
  ! DOTSUB          [ reduce using rule 75 (matrix_expression -> matrix_expression DOTMUL matrix_expression .) ]
  ! DOTMUL          [ reduce using rule 75 (matrix_expression -> matrix_expression DOTMUL matrix_expression .) ]
  ! DOTDIV          [ reduce using rule 75 (matrix_expression -> matrix_expression DOTMUL matrix_expression .) ]
  ! TRANSPOSE       [ reduce using rule 75 (matrix_expression -> matrix_expression DOTMUL matrix_expression .) ]


state 120

    (76) matrix_expression -> matrix_expression DOTDIV matrix_expression .
    (69) matrix_expression -> matrix_expression . ADD matrix_expression
    (70) matrix_expression -> matrix_expression . SUB matrix_expression
    (71) matrix_expression -> matrix_expression . MUL matrix_expression
    (72) matrix_expression -> matrix_expression . DIV matrix_expression
    (73) matrix_expression -> matrix_expression . DOTADD matrix_expression
    (74) matrix_expression -> matrix_expression . DOTSUB matrix_expression
    (75) matrix_expression -> matrix_expression . DOTMUL matrix_expression
    (76) matrix_expression -> matrix_expression . DOTDIV matrix_expression
    (84) matrix_expression -> matrix_expression . TRANSPOSE

  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for DOTADD resolved as shift
  ! shift/reduce conflict for DOTSUB resolved as shift
  ! shift/reduce conflict for DOTMUL resolved as shift
  ! shift/reduce conflict for DOTDIV resolved as shift
  ! shift/reduce conflict for TRANSPOSE resolved as shift
    COMMA           reduce using rule 76 (matrix_expression -> matrix_expression DOTDIV matrix_expression .)
    SEMICOLON       reduce using rule 76 (matrix_expression -> matrix_expression DOTDIV matrix_expression .)
    RPAREN          reduce using rule 76 (matrix_expression -> matrix_expression DOTDIV matrix_expression .)
    ADD             shift and go to state 73
    SUB             shift and go to state 74
    MUL             shift and go to state 75
    DIV             shift and go to state 76
    DOTADD          shift and go to state 77
    DOTSUB          shift and go to state 78
    DOTMUL          shift and go to state 79
    DOTDIV          shift and go to state 80
    TRANSPOSE       shift and go to state 81

  ! ADD             [ reduce using rule 76 (matrix_expression -> matrix_expression DOTDIV matrix_expression .) ]
  ! SUB             [ reduce using rule 76 (matrix_expression -> matrix_expression DOTDIV matrix_expression .) ]
  ! MUL             [ reduce using rule 76 (matrix_expression -> matrix_expression DOTDIV matrix_expression .) ]
  ! DIV             [ reduce using rule 76 (matrix_expression -> matrix_expression DOTDIV matrix_expression .) ]
  ! DOTADD          [ reduce using rule 76 (matrix_expression -> matrix_expression DOTDIV matrix_expression .) ]
  ! DOTSUB          [ reduce using rule 76 (matrix_expression -> matrix_expression DOTDIV matrix_expression .) ]
  ! DOTMUL          [ reduce using rule 76 (matrix_expression -> matrix_expression DOTDIV matrix_expression .) ]
  ! DOTDIV          [ reduce using rule 76 (matrix_expression -> matrix_expression DOTDIV matrix_expression .) ]
  ! TRANSPOSE       [ reduce using rule 76 (matrix_expression -> matrix_expression DOTDIV matrix_expression .) ]


state 121

    (63) num_expression -> LPAREN num_expression RPAREN .

    ADD             reduce using rule 63 (num_expression -> LPAREN num_expression RPAREN .)
    SUB             reduce using rule 63 (num_expression -> LPAREN num_expression RPAREN .)
    MUL             reduce using rule 63 (num_expression -> LPAREN num_expression RPAREN .)
    DIV             reduce using rule 63 (num_expression -> LPAREN num_expression RPAREN .)
    COMMA           reduce using rule 63 (num_expression -> LPAREN num_expression RPAREN .)
    SEMICOLON       reduce using rule 63 (num_expression -> LPAREN num_expression RPAREN .)
    EQUALITY        reduce using rule 63 (num_expression -> LPAREN num_expression RPAREN .)
    INEQUALITY      reduce using rule 63 (num_expression -> LPAREN num_expression RPAREN .)
    GREATER         reduce using rule 63 (num_expression -> LPAREN num_expression RPAREN .)
    GREATER_EQUAL   reduce using rule 63 (num_expression -> LPAREN num_expression RPAREN .)
    LESS            reduce using rule 63 (num_expression -> LPAREN num_expression RPAREN .)
    LESS_EQUAL      reduce using rule 63 (num_expression -> LPAREN num_expression RPAREN .)
    RPAREN          reduce using rule 63 (num_expression -> LPAREN num_expression RPAREN .)
    RANGE           reduce using rule 63 (num_expression -> LPAREN num_expression RPAREN .)
    LPARENCURLY     reduce using rule 63 (num_expression -> LPAREN num_expression RPAREN .)
    BREAK           reduce using rule 63 (num_expression -> LPAREN num_expression RPAREN .)
    CONTINUE        reduce using rule 63 (num_expression -> LPAREN num_expression RPAREN .)
    PRINT           reduce using rule 63 (num_expression -> LPAREN num_expression RPAREN .)
    ID              reduce using rule 63 (num_expression -> LPAREN num_expression RPAREN .)
    WHILE           reduce using rule 63 (num_expression -> LPAREN num_expression RPAREN .)
    FOR             reduce using rule 63 (num_expression -> LPAREN num_expression RPAREN .)
    RETURN          reduce using rule 63 (num_expression -> LPAREN num_expression RPAREN .)


state 122

    (64) matrix_expression -> LPAREN matrix_expression RPAREN .

    ADD             reduce using rule 64 (matrix_expression -> LPAREN matrix_expression RPAREN .)
    SUB             reduce using rule 64 (matrix_expression -> LPAREN matrix_expression RPAREN .)
    MUL             reduce using rule 64 (matrix_expression -> LPAREN matrix_expression RPAREN .)
    DIV             reduce using rule 64 (matrix_expression -> LPAREN matrix_expression RPAREN .)
    DOTADD          reduce using rule 64 (matrix_expression -> LPAREN matrix_expression RPAREN .)
    DOTSUB          reduce using rule 64 (matrix_expression -> LPAREN matrix_expression RPAREN .)
    DOTMUL          reduce using rule 64 (matrix_expression -> LPAREN matrix_expression RPAREN .)
    DOTDIV          reduce using rule 64 (matrix_expression -> LPAREN matrix_expression RPAREN .)
    TRANSPOSE       reduce using rule 64 (matrix_expression -> LPAREN matrix_expression RPAREN .)
    COMMA           reduce using rule 64 (matrix_expression -> LPAREN matrix_expression RPAREN .)
    SEMICOLON       reduce using rule 64 (matrix_expression -> LPAREN matrix_expression RPAREN .)
    RPAREN          reduce using rule 64 (matrix_expression -> LPAREN matrix_expression RPAREN .)


state 123

    (87) matrix_expression -> ZEROS LPAREN INTNUM . RPAREN

    RPAREN          shift and go to state 142


state 124

    (88) matrix_expression -> ONES LPAREN INTNUM . RPAREN

    RPAREN          shift and go to state 143


state 125

    (89) matrix_expression -> EYE LPAREN INTNUM . RPAREN

    RPAREN          shift and go to state 144


state 126

    (6) loop_statement -> WHILE LPAREN condition RPAREN loop_instruction_statement .

    LPARENCURLY     reduce using rule 6 (loop_statement -> WHILE LPAREN condition RPAREN loop_instruction_statement .)
    WHILE           reduce using rule 6 (loop_statement -> WHILE LPAREN condition RPAREN loop_instruction_statement .)
    FOR             reduce using rule 6 (loop_statement -> WHILE LPAREN condition RPAREN loop_instruction_statement .)
    IF              reduce using rule 6 (loop_statement -> WHILE LPAREN condition RPAREN loop_instruction_statement .)
    PRINT           reduce using rule 6 (loop_statement -> WHILE LPAREN condition RPAREN loop_instruction_statement .)
    ID              reduce using rule 6 (loop_statement -> WHILE LPAREN condition RPAREN loop_instruction_statement .)
    RETURN          reduce using rule 6 (loop_statement -> WHILE LPAREN condition RPAREN loop_instruction_statement .)
    $end            reduce using rule 6 (loop_statement -> WHILE LPAREN condition RPAREN loop_instruction_statement .)
    RPARENCURLY     reduce using rule 6 (loop_statement -> WHILE LPAREN condition RPAREN loop_instruction_statement .)
    CONTINUE        reduce using rule 6 (loop_statement -> WHILE LPAREN condition RPAREN loop_instruction_statement .)
    BREAK           reduce using rule 6 (loop_statement -> WHILE LPAREN condition RPAREN loop_instruction_statement .)


state 127

    (13) loop_instruction_statement -> LPARENCURLY . main_statements_break_continue RPARENCURLY
    (18) main_statements_break_continue -> . main_statements
    (19) main_statements_break_continue -> . if_break_continue
    (20) main_statements_break_continue -> . main_statements_break_continue main_statements_break_continue
    (21) main_statements_break_continue -> . main_statements_break_continue CONTINUE SEMICOLON main_statements_break_continue
    (22) main_statements_break_continue -> . main_statements_break_continue BREAK SEMICOLON main_statements_break_continue
    (23) main_statements_break_continue -> . empty
    (1) main_statements -> . LPARENCURLY statements RPARENCURLY main_statements
    (2) main_statements -> . main_statements LPARENCURLY statements RPARENCURLY
    (3) main_statements -> . main_statements main_statements
    (4) main_statements -> . statements
    (5) main_statements -> . loop_statement
    (8) main_statements -> . if_statement
    (26) if_break_continue -> . IF LPAREN condition RPAREN instruction_statement_break_continue
    (27) if_break_continue -> . IF LPAREN condition RPAREN instruction_statement_break_continue else_break_continue
    (93) empty -> .
    (42) statements -> . statement SEMICOLON statements
    (43) statements -> . statement SEMICOLON
    (6) loop_statement -> . WHILE LPAREN condition RPAREN loop_instruction_statement
    (7) loop_statement -> . FOR ID ASSIGN num_expression RANGE num_expression loop_instruction_statement
    (11) if_statement -> . IF LPAREN condition RPAREN instruction_statement
    (12) if_statement -> . IF LPAREN condition RPAREN instruction_statement else_statement
    (44) statement -> . PRINT print_expression
    (50) statement -> . ID ASSIGN STRING
    (51) statement -> . ID MATRIX ASSIGN num_expression
    (52) statement -> . ID MATRIX ADDASSIGN num_expression
    (53) statement -> . ID MATRIX SUBASSIGN num_expression
    (54) statement -> . ID MATRIX MULASSIGN num_expression
    (55) statement -> . ID MATRIX DIVASSIGN num_expression
    (56) statement -> . ID ASSIGN num_expression
    (57) statement -> . ID ADDASSIGN num_expression
    (58) statement -> . ID SUBASSIGN num_expression
    (59) statement -> . ID MULASSIGN num_expression
    (60) statement -> . ID DIVASSIGN num_expression
    (77) statement -> . ID ASSIGN matrix_expression
    (78) statement -> . ID ADDASSIGN matrix_expression
    (79) statement -> . ID SUBASSIGN matrix_expression
    (80) statement -> . ID MULASSIGN matrix_expression
    (81) statement -> . ID DIVASSIGN matrix_expression
    (91) statement -> . return_statement
    (92) return_statement -> . RETURN expression

  ! shift/reduce conflict for LPARENCURLY resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
    LPARENCURLY     shift and go to state 2
    IF              shift and go to state 149
    RPARENCURLY     reduce using rule 93 (empty -> .)
    CONTINUE        reduce using rule 93 (empty -> .)
    BREAK           reduce using rule 93 (empty -> .)
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    PRINT           shift and go to state 11
    ID              shift and go to state 9
    RETURN          shift and go to state 13

  ! LPARENCURLY     [ reduce using rule 93 (empty -> .) ]
  ! IF              [ reduce using rule 93 (empty -> .) ]
  ! WHILE           [ reduce using rule 93 (empty -> .) ]
  ! FOR             [ reduce using rule 93 (empty -> .) ]
  ! PRINT           [ reduce using rule 93 (empty -> .) ]
  ! ID              [ reduce using rule 93 (empty -> .) ]
  ! RETURN          [ reduce using rule 93 (empty -> .) ]

    main_statements_break_continue shift and go to state 145
    main_statements                shift and go to state 146
    if_break_continue              shift and go to state 147
    empty                          shift and go to state 148
    statements                     shift and go to state 3
    loop_statement                 shift and go to state 4
    if_statement                   shift and go to state 5
    statement                      shift and go to state 6
    return_statement               shift and go to state 12

state 128

    (14) loop_instruction_statement -> statement . SEMICOLON

    SEMICOLON       shift and go to state 150


state 129

    (15) loop_instruction_statement -> BREAK . SEMICOLON

    SEMICOLON       shift and go to state 151


state 130

    (16) loop_instruction_statement -> CONTINUE . SEMICOLON

    SEMICOLON       shift and go to state 152


state 131

    (17) loop_instruction_statement -> loop_statement .

    LPARENCURLY     reduce using rule 17 (loop_instruction_statement -> loop_statement .)
    WHILE           reduce using rule 17 (loop_instruction_statement -> loop_statement .)
    FOR             reduce using rule 17 (loop_instruction_statement -> loop_statement .)
    IF              reduce using rule 17 (loop_instruction_statement -> loop_statement .)
    PRINT           reduce using rule 17 (loop_instruction_statement -> loop_statement .)
    ID              reduce using rule 17 (loop_instruction_statement -> loop_statement .)
    RETURN          reduce using rule 17 (loop_instruction_statement -> loop_statement .)
    $end            reduce using rule 17 (loop_instruction_statement -> loop_statement .)
    RPARENCURLY     reduce using rule 17 (loop_instruction_statement -> loop_statement .)
    CONTINUE        reduce using rule 17 (loop_instruction_statement -> loop_statement .)
    BREAK           reduce using rule 17 (loop_instruction_statement -> loop_statement .)


state 132

    (36) condition -> num_expression EQUALITY num_expression .
    (65) num_expression -> num_expression . ADD num_expression
    (66) num_expression -> num_expression . SUB num_expression
    (67) num_expression -> num_expression . MUL num_expression
    (68) num_expression -> num_expression . DIV num_expression

    RPAREN          reduce using rule 36 (condition -> num_expression EQUALITY num_expression .)
    ADD             shift and go to state 69
    SUB             shift and go to state 70
    MUL             shift and go to state 71
    DIV             shift and go to state 72


state 133

    (37) condition -> num_expression INEQUALITY num_expression .
    (65) num_expression -> num_expression . ADD num_expression
    (66) num_expression -> num_expression . SUB num_expression
    (67) num_expression -> num_expression . MUL num_expression
    (68) num_expression -> num_expression . DIV num_expression

    RPAREN          reduce using rule 37 (condition -> num_expression INEQUALITY num_expression .)
    ADD             shift and go to state 69
    SUB             shift and go to state 70
    MUL             shift and go to state 71
    DIV             shift and go to state 72


state 134

    (38) condition -> num_expression GREATER num_expression .
    (65) num_expression -> num_expression . ADD num_expression
    (66) num_expression -> num_expression . SUB num_expression
    (67) num_expression -> num_expression . MUL num_expression
    (68) num_expression -> num_expression . DIV num_expression

    RPAREN          reduce using rule 38 (condition -> num_expression GREATER num_expression .)
    ADD             shift and go to state 69
    SUB             shift and go to state 70
    MUL             shift and go to state 71
    DIV             shift and go to state 72


state 135

    (39) condition -> num_expression GREATER_EQUAL num_expression .
    (65) num_expression -> num_expression . ADD num_expression
    (66) num_expression -> num_expression . SUB num_expression
    (67) num_expression -> num_expression . MUL num_expression
    (68) num_expression -> num_expression . DIV num_expression

    RPAREN          reduce using rule 39 (condition -> num_expression GREATER_EQUAL num_expression .)
    ADD             shift and go to state 69
    SUB             shift and go to state 70
    MUL             shift and go to state 71
    DIV             shift and go to state 72


state 136

    (40) condition -> num_expression LESS num_expression .
    (65) num_expression -> num_expression . ADD num_expression
    (66) num_expression -> num_expression . SUB num_expression
    (67) num_expression -> num_expression . MUL num_expression
    (68) num_expression -> num_expression . DIV num_expression

    RPAREN          reduce using rule 40 (condition -> num_expression LESS num_expression .)
    ADD             shift and go to state 69
    SUB             shift and go to state 70
    MUL             shift and go to state 71
    DIV             shift and go to state 72


state 137

    (41) condition -> num_expression LESS_EQUAL num_expression .
    (65) num_expression -> num_expression . ADD num_expression
    (66) num_expression -> num_expression . SUB num_expression
    (67) num_expression -> num_expression . MUL num_expression
    (68) num_expression -> num_expression . DIV num_expression

    RPAREN          reduce using rule 41 (condition -> num_expression LESS_EQUAL num_expression .)
    ADD             shift and go to state 69
    SUB             shift and go to state 70
    MUL             shift and go to state 71
    DIV             shift and go to state 72


state 138

    (7) loop_statement -> FOR ID ASSIGN num_expression RANGE . num_expression loop_instruction_statement
    (61) num_expression -> . ID
    (63) num_expression -> . LPAREN num_expression RPAREN
    (65) num_expression -> . num_expression ADD num_expression
    (66) num_expression -> . num_expression SUB num_expression
    (67) num_expression -> . num_expression MUL num_expression
    (68) num_expression -> . num_expression DIV num_expression
    (82) num_expression -> . SUB num_expression
    (85) num_expression -> . INTNUM
    (86) num_expression -> . FLOATNUM

    ID              shift and go to state 48
    LPAREN          shift and go to state 45
    SUB             shift and go to state 49
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 36

    num_expression                 shift and go to state 153

state 139

    (11) if_statement -> IF LPAREN condition RPAREN instruction_statement .
    (12) if_statement -> IF LPAREN condition RPAREN instruction_statement . else_statement
    (9) else_statement -> . ELSE instruction_statement
    (10) else_statement -> . ELSE if_statement

    LPARENCURLY     reduce using rule 11 (if_statement -> IF LPAREN condition RPAREN instruction_statement .)
    WHILE           reduce using rule 11 (if_statement -> IF LPAREN condition RPAREN instruction_statement .)
    FOR             reduce using rule 11 (if_statement -> IF LPAREN condition RPAREN instruction_statement .)
    IF              reduce using rule 11 (if_statement -> IF LPAREN condition RPAREN instruction_statement .)
    PRINT           reduce using rule 11 (if_statement -> IF LPAREN condition RPAREN instruction_statement .)
    ID              reduce using rule 11 (if_statement -> IF LPAREN condition RPAREN instruction_statement .)
    RETURN          reduce using rule 11 (if_statement -> IF LPAREN condition RPAREN instruction_statement .)
    $end            reduce using rule 11 (if_statement -> IF LPAREN condition RPAREN instruction_statement .)
    RPARENCURLY     reduce using rule 11 (if_statement -> IF LPAREN condition RPAREN instruction_statement .)
    CONTINUE        reduce using rule 11 (if_statement -> IF LPAREN condition RPAREN instruction_statement .)
    BREAK           reduce using rule 11 (if_statement -> IF LPAREN condition RPAREN instruction_statement .)
    ELSE            shift and go to state 155

    else_statement                 shift and go to state 154

state 140

    (33) instruction_statement -> LPARENCURLY . main_statements RPARENCURLY
    (34) instruction_statement -> LPARENCURLY . empty RPARENCURLY
    (1) main_statements -> . LPARENCURLY statements RPARENCURLY main_statements
    (2) main_statements -> . main_statements LPARENCURLY statements RPARENCURLY
    (3) main_statements -> . main_statements main_statements
    (4) main_statements -> . statements
    (5) main_statements -> . loop_statement
    (8) main_statements -> . if_statement
    (93) empty -> .
    (42) statements -> . statement SEMICOLON statements
    (43) statements -> . statement SEMICOLON
    (6) loop_statement -> . WHILE LPAREN condition RPAREN loop_instruction_statement
    (7) loop_statement -> . FOR ID ASSIGN num_expression RANGE num_expression loop_instruction_statement
    (11) if_statement -> . IF LPAREN condition RPAREN instruction_statement
    (12) if_statement -> . IF LPAREN condition RPAREN instruction_statement else_statement
    (44) statement -> . PRINT print_expression
    (50) statement -> . ID ASSIGN STRING
    (51) statement -> . ID MATRIX ASSIGN num_expression
    (52) statement -> . ID MATRIX ADDASSIGN num_expression
    (53) statement -> . ID MATRIX SUBASSIGN num_expression
    (54) statement -> . ID MATRIX MULASSIGN num_expression
    (55) statement -> . ID MATRIX DIVASSIGN num_expression
    (56) statement -> . ID ASSIGN num_expression
    (57) statement -> . ID ADDASSIGN num_expression
    (58) statement -> . ID SUBASSIGN num_expression
    (59) statement -> . ID MULASSIGN num_expression
    (60) statement -> . ID DIVASSIGN num_expression
    (77) statement -> . ID ASSIGN matrix_expression
    (78) statement -> . ID ADDASSIGN matrix_expression
    (79) statement -> . ID SUBASSIGN matrix_expression
    (80) statement -> . ID MULASSIGN matrix_expression
    (81) statement -> . ID DIVASSIGN matrix_expression
    (91) statement -> . return_statement
    (92) return_statement -> . RETURN expression

    LPARENCURLY     shift and go to state 2
    RPARENCURLY     reduce using rule 93 (empty -> .)
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    IF              shift and go to state 10
    PRINT           shift and go to state 11
    ID              shift and go to state 9
    RETURN          shift and go to state 13

    main_statements                shift and go to state 156
    empty                          shift and go to state 157
    statements                     shift and go to state 3
    loop_statement                 shift and go to state 4
    if_statement                   shift and go to state 5
    statement                      shift and go to state 6
    return_statement               shift and go to state 12

state 141

    (35) instruction_statement -> statement . SEMICOLON

    SEMICOLON       shift and go to state 158


state 142

    (87) matrix_expression -> ZEROS LPAREN INTNUM RPAREN .

    ADD             reduce using rule 87 (matrix_expression -> ZEROS LPAREN INTNUM RPAREN .)
    SUB             reduce using rule 87 (matrix_expression -> ZEROS LPAREN INTNUM RPAREN .)
    MUL             reduce using rule 87 (matrix_expression -> ZEROS LPAREN INTNUM RPAREN .)
    DIV             reduce using rule 87 (matrix_expression -> ZEROS LPAREN INTNUM RPAREN .)
    DOTADD          reduce using rule 87 (matrix_expression -> ZEROS LPAREN INTNUM RPAREN .)
    DOTSUB          reduce using rule 87 (matrix_expression -> ZEROS LPAREN INTNUM RPAREN .)
    DOTMUL          reduce using rule 87 (matrix_expression -> ZEROS LPAREN INTNUM RPAREN .)
    DOTDIV          reduce using rule 87 (matrix_expression -> ZEROS LPAREN INTNUM RPAREN .)
    TRANSPOSE       reduce using rule 87 (matrix_expression -> ZEROS LPAREN INTNUM RPAREN .)
    COMMA           reduce using rule 87 (matrix_expression -> ZEROS LPAREN INTNUM RPAREN .)
    SEMICOLON       reduce using rule 87 (matrix_expression -> ZEROS LPAREN INTNUM RPAREN .)
    RPAREN          reduce using rule 87 (matrix_expression -> ZEROS LPAREN INTNUM RPAREN .)


state 143

    (88) matrix_expression -> ONES LPAREN INTNUM RPAREN .

    ADD             reduce using rule 88 (matrix_expression -> ONES LPAREN INTNUM RPAREN .)
    SUB             reduce using rule 88 (matrix_expression -> ONES LPAREN INTNUM RPAREN .)
    MUL             reduce using rule 88 (matrix_expression -> ONES LPAREN INTNUM RPAREN .)
    DIV             reduce using rule 88 (matrix_expression -> ONES LPAREN INTNUM RPAREN .)
    DOTADD          reduce using rule 88 (matrix_expression -> ONES LPAREN INTNUM RPAREN .)
    DOTSUB          reduce using rule 88 (matrix_expression -> ONES LPAREN INTNUM RPAREN .)
    DOTMUL          reduce using rule 88 (matrix_expression -> ONES LPAREN INTNUM RPAREN .)
    DOTDIV          reduce using rule 88 (matrix_expression -> ONES LPAREN INTNUM RPAREN .)
    TRANSPOSE       reduce using rule 88 (matrix_expression -> ONES LPAREN INTNUM RPAREN .)
    COMMA           reduce using rule 88 (matrix_expression -> ONES LPAREN INTNUM RPAREN .)
    SEMICOLON       reduce using rule 88 (matrix_expression -> ONES LPAREN INTNUM RPAREN .)
    RPAREN          reduce using rule 88 (matrix_expression -> ONES LPAREN INTNUM RPAREN .)


state 144

    (89) matrix_expression -> EYE LPAREN INTNUM RPAREN .

    ADD             reduce using rule 89 (matrix_expression -> EYE LPAREN INTNUM RPAREN .)
    SUB             reduce using rule 89 (matrix_expression -> EYE LPAREN INTNUM RPAREN .)
    MUL             reduce using rule 89 (matrix_expression -> EYE LPAREN INTNUM RPAREN .)
    DIV             reduce using rule 89 (matrix_expression -> EYE LPAREN INTNUM RPAREN .)
    DOTADD          reduce using rule 89 (matrix_expression -> EYE LPAREN INTNUM RPAREN .)
    DOTSUB          reduce using rule 89 (matrix_expression -> EYE LPAREN INTNUM RPAREN .)
    DOTMUL          reduce using rule 89 (matrix_expression -> EYE LPAREN INTNUM RPAREN .)
    DOTDIV          reduce using rule 89 (matrix_expression -> EYE LPAREN INTNUM RPAREN .)
    TRANSPOSE       reduce using rule 89 (matrix_expression -> EYE LPAREN INTNUM RPAREN .)
    COMMA           reduce using rule 89 (matrix_expression -> EYE LPAREN INTNUM RPAREN .)
    SEMICOLON       reduce using rule 89 (matrix_expression -> EYE LPAREN INTNUM RPAREN .)
    RPAREN          reduce using rule 89 (matrix_expression -> EYE LPAREN INTNUM RPAREN .)


state 145

    (13) loop_instruction_statement -> LPARENCURLY main_statements_break_continue . RPARENCURLY
    (20) main_statements_break_continue -> main_statements_break_continue . main_statements_break_continue
    (21) main_statements_break_continue -> main_statements_break_continue . CONTINUE SEMICOLON main_statements_break_continue
    (22) main_statements_break_continue -> main_statements_break_continue . BREAK SEMICOLON main_statements_break_continue
    (18) main_statements_break_continue -> . main_statements
    (19) main_statements_break_continue -> . if_break_continue
    (20) main_statements_break_continue -> . main_statements_break_continue main_statements_break_continue
    (21) main_statements_break_continue -> . main_statements_break_continue CONTINUE SEMICOLON main_statements_break_continue
    (22) main_statements_break_continue -> . main_statements_break_continue BREAK SEMICOLON main_statements_break_continue
    (23) main_statements_break_continue -> . empty
    (1) main_statements -> . LPARENCURLY statements RPARENCURLY main_statements
    (2) main_statements -> . main_statements LPARENCURLY statements RPARENCURLY
    (3) main_statements -> . main_statements main_statements
    (4) main_statements -> . statements
    (5) main_statements -> . loop_statement
    (8) main_statements -> . if_statement
    (26) if_break_continue -> . IF LPAREN condition RPAREN instruction_statement_break_continue
    (27) if_break_continue -> . IF LPAREN condition RPAREN instruction_statement_break_continue else_break_continue
    (93) empty -> .
    (42) statements -> . statement SEMICOLON statements
    (43) statements -> . statement SEMICOLON
    (6) loop_statement -> . WHILE LPAREN condition RPAREN loop_instruction_statement
    (7) loop_statement -> . FOR ID ASSIGN num_expression RANGE num_expression loop_instruction_statement
    (11) if_statement -> . IF LPAREN condition RPAREN instruction_statement
    (12) if_statement -> . IF LPAREN condition RPAREN instruction_statement else_statement
    (44) statement -> . PRINT print_expression
    (50) statement -> . ID ASSIGN STRING
    (51) statement -> . ID MATRIX ASSIGN num_expression
    (52) statement -> . ID MATRIX ADDASSIGN num_expression
    (53) statement -> . ID MATRIX SUBASSIGN num_expression
    (54) statement -> . ID MATRIX MULASSIGN num_expression
    (55) statement -> . ID MATRIX DIVASSIGN num_expression
    (56) statement -> . ID ASSIGN num_expression
    (57) statement -> . ID ADDASSIGN num_expression
    (58) statement -> . ID SUBASSIGN num_expression
    (59) statement -> . ID MULASSIGN num_expression
    (60) statement -> . ID DIVASSIGN num_expression
    (77) statement -> . ID ASSIGN matrix_expression
    (78) statement -> . ID ADDASSIGN matrix_expression
    (79) statement -> . ID SUBASSIGN matrix_expression
    (80) statement -> . ID MULASSIGN matrix_expression
    (81) statement -> . ID DIVASSIGN matrix_expression
    (91) statement -> . return_statement
    (92) return_statement -> . RETURN expression

  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for LPARENCURLY resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for RPARENCURLY resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
    RPARENCURLY     shift and go to state 160
    CONTINUE        shift and go to state 161
    BREAK           shift and go to state 162
    LPARENCURLY     shift and go to state 2
    IF              shift and go to state 149
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    PRINT           shift and go to state 11
    ID              shift and go to state 9
    RETURN          shift and go to state 13

  ! CONTINUE        [ reduce using rule 93 (empty -> .) ]
  ! BREAK           [ reduce using rule 93 (empty -> .) ]
  ! LPARENCURLY     [ reduce using rule 93 (empty -> .) ]
  ! IF              [ reduce using rule 93 (empty -> .) ]
  ! WHILE           [ reduce using rule 93 (empty -> .) ]
  ! FOR             [ reduce using rule 93 (empty -> .) ]
  ! PRINT           [ reduce using rule 93 (empty -> .) ]
  ! ID              [ reduce using rule 93 (empty -> .) ]
  ! RETURN          [ reduce using rule 93 (empty -> .) ]
  ! RPARENCURLY     [ reduce using rule 93 (empty -> .) ]

    main_statements_break_continue shift and go to state 159
    main_statements                shift and go to state 146
    if_break_continue              shift and go to state 147
    empty                          shift and go to state 148
    statements                     shift and go to state 3
    loop_statement                 shift and go to state 4
    if_statement                   shift and go to state 5
    statement                      shift and go to state 6
    return_statement               shift and go to state 12

state 146

    (18) main_statements_break_continue -> main_statements .
    (2) main_statements -> main_statements . LPARENCURLY statements RPARENCURLY
    (3) main_statements -> main_statements . main_statements
    (1) main_statements -> . LPARENCURLY statements RPARENCURLY main_statements
    (2) main_statements -> . main_statements LPARENCURLY statements RPARENCURLY
    (3) main_statements -> . main_statements main_statements
    (4) main_statements -> . statements
    (5) main_statements -> . loop_statement
    (8) main_statements -> . if_statement
    (42) statements -> . statement SEMICOLON statements
    (43) statements -> . statement SEMICOLON
    (6) loop_statement -> . WHILE LPAREN condition RPAREN loop_instruction_statement
    (7) loop_statement -> . FOR ID ASSIGN num_expression RANGE num_expression loop_instruction_statement
    (11) if_statement -> . IF LPAREN condition RPAREN instruction_statement
    (12) if_statement -> . IF LPAREN condition RPAREN instruction_statement else_statement
    (44) statement -> . PRINT print_expression
    (50) statement -> . ID ASSIGN STRING
    (51) statement -> . ID MATRIX ASSIGN num_expression
    (52) statement -> . ID MATRIX ADDASSIGN num_expression
    (53) statement -> . ID MATRIX SUBASSIGN num_expression
    (54) statement -> . ID MATRIX MULASSIGN num_expression
    (55) statement -> . ID MATRIX DIVASSIGN num_expression
    (56) statement -> . ID ASSIGN num_expression
    (57) statement -> . ID ADDASSIGN num_expression
    (58) statement -> . ID SUBASSIGN num_expression
    (59) statement -> . ID MULASSIGN num_expression
    (60) statement -> . ID DIVASSIGN num_expression
    (77) statement -> . ID ASSIGN matrix_expression
    (78) statement -> . ID ADDASSIGN matrix_expression
    (79) statement -> . ID SUBASSIGN matrix_expression
    (80) statement -> . ID MULASSIGN matrix_expression
    (81) statement -> . ID DIVASSIGN matrix_expression
    (91) statement -> . return_statement
    (92) return_statement -> . RETURN expression

  ! shift/reduce conflict for LPARENCURLY resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
    RPARENCURLY     reduce using rule 18 (main_statements_break_continue -> main_statements .)
    CONTINUE        reduce using rule 18 (main_statements_break_continue -> main_statements .)
    BREAK           reduce using rule 18 (main_statements_break_continue -> main_statements .)
    LPARENCURLY     shift and go to state 15
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    IF              shift and go to state 10
    PRINT           shift and go to state 11
    ID              shift and go to state 9
    RETURN          shift and go to state 13

  ! LPARENCURLY     [ reduce using rule 18 (main_statements_break_continue -> main_statements .) ]
  ! IF              [ reduce using rule 18 (main_statements_break_continue -> main_statements .) ]
  ! WHILE           [ reduce using rule 18 (main_statements_break_continue -> main_statements .) ]
  ! FOR             [ reduce using rule 18 (main_statements_break_continue -> main_statements .) ]
  ! PRINT           [ reduce using rule 18 (main_statements_break_continue -> main_statements .) ]
  ! ID              [ reduce using rule 18 (main_statements_break_continue -> main_statements .) ]
  ! RETURN          [ reduce using rule 18 (main_statements_break_continue -> main_statements .) ]

    main_statements                shift and go to state 14
    statements                     shift and go to state 3
    loop_statement                 shift and go to state 4
    if_statement                   shift and go to state 5
    statement                      shift and go to state 6
    return_statement               shift and go to state 12

state 147

    (19) main_statements_break_continue -> if_break_continue .

    RPARENCURLY     reduce using rule 19 (main_statements_break_continue -> if_break_continue .)
    CONTINUE        reduce using rule 19 (main_statements_break_continue -> if_break_continue .)
    BREAK           reduce using rule 19 (main_statements_break_continue -> if_break_continue .)
    LPARENCURLY     reduce using rule 19 (main_statements_break_continue -> if_break_continue .)
    IF              reduce using rule 19 (main_statements_break_continue -> if_break_continue .)
    WHILE           reduce using rule 19 (main_statements_break_continue -> if_break_continue .)
    FOR             reduce using rule 19 (main_statements_break_continue -> if_break_continue .)
    PRINT           reduce using rule 19 (main_statements_break_continue -> if_break_continue .)
    ID              reduce using rule 19 (main_statements_break_continue -> if_break_continue .)
    RETURN          reduce using rule 19 (main_statements_break_continue -> if_break_continue .)


state 148

    (23) main_statements_break_continue -> empty .

    RPARENCURLY     reduce using rule 23 (main_statements_break_continue -> empty .)
    CONTINUE        reduce using rule 23 (main_statements_break_continue -> empty .)
    BREAK           reduce using rule 23 (main_statements_break_continue -> empty .)
    LPARENCURLY     reduce using rule 23 (main_statements_break_continue -> empty .)
    IF              reduce using rule 23 (main_statements_break_continue -> empty .)
    WHILE           reduce using rule 23 (main_statements_break_continue -> empty .)
    FOR             reduce using rule 23 (main_statements_break_continue -> empty .)
    PRINT           reduce using rule 23 (main_statements_break_continue -> empty .)
    ID              reduce using rule 23 (main_statements_break_continue -> empty .)
    RETURN          reduce using rule 23 (main_statements_break_continue -> empty .)


state 149

    (26) if_break_continue -> IF . LPAREN condition RPAREN instruction_statement_break_continue
    (27) if_break_continue -> IF . LPAREN condition RPAREN instruction_statement_break_continue else_break_continue
    (11) if_statement -> IF . LPAREN condition RPAREN instruction_statement
    (12) if_statement -> IF . LPAREN condition RPAREN instruction_statement else_statement

    LPAREN          shift and go to state 163


state 150

    (14) loop_instruction_statement -> statement SEMICOLON .

    LPARENCURLY     reduce using rule 14 (loop_instruction_statement -> statement SEMICOLON .)
    WHILE           reduce using rule 14 (loop_instruction_statement -> statement SEMICOLON .)
    FOR             reduce using rule 14 (loop_instruction_statement -> statement SEMICOLON .)
    IF              reduce using rule 14 (loop_instruction_statement -> statement SEMICOLON .)
    PRINT           reduce using rule 14 (loop_instruction_statement -> statement SEMICOLON .)
    ID              reduce using rule 14 (loop_instruction_statement -> statement SEMICOLON .)
    RETURN          reduce using rule 14 (loop_instruction_statement -> statement SEMICOLON .)
    $end            reduce using rule 14 (loop_instruction_statement -> statement SEMICOLON .)
    RPARENCURLY     reduce using rule 14 (loop_instruction_statement -> statement SEMICOLON .)
    CONTINUE        reduce using rule 14 (loop_instruction_statement -> statement SEMICOLON .)
    BREAK           reduce using rule 14 (loop_instruction_statement -> statement SEMICOLON .)


state 151

    (15) loop_instruction_statement -> BREAK SEMICOLON .

    LPARENCURLY     reduce using rule 15 (loop_instruction_statement -> BREAK SEMICOLON .)
    WHILE           reduce using rule 15 (loop_instruction_statement -> BREAK SEMICOLON .)
    FOR             reduce using rule 15 (loop_instruction_statement -> BREAK SEMICOLON .)
    IF              reduce using rule 15 (loop_instruction_statement -> BREAK SEMICOLON .)
    PRINT           reduce using rule 15 (loop_instruction_statement -> BREAK SEMICOLON .)
    ID              reduce using rule 15 (loop_instruction_statement -> BREAK SEMICOLON .)
    RETURN          reduce using rule 15 (loop_instruction_statement -> BREAK SEMICOLON .)
    $end            reduce using rule 15 (loop_instruction_statement -> BREAK SEMICOLON .)
    RPARENCURLY     reduce using rule 15 (loop_instruction_statement -> BREAK SEMICOLON .)
    CONTINUE        reduce using rule 15 (loop_instruction_statement -> BREAK SEMICOLON .)
    BREAK           reduce using rule 15 (loop_instruction_statement -> BREAK SEMICOLON .)


state 152

    (16) loop_instruction_statement -> CONTINUE SEMICOLON .

    LPARENCURLY     reduce using rule 16 (loop_instruction_statement -> CONTINUE SEMICOLON .)
    WHILE           reduce using rule 16 (loop_instruction_statement -> CONTINUE SEMICOLON .)
    FOR             reduce using rule 16 (loop_instruction_statement -> CONTINUE SEMICOLON .)
    IF              reduce using rule 16 (loop_instruction_statement -> CONTINUE SEMICOLON .)
    PRINT           reduce using rule 16 (loop_instruction_statement -> CONTINUE SEMICOLON .)
    ID              reduce using rule 16 (loop_instruction_statement -> CONTINUE SEMICOLON .)
    RETURN          reduce using rule 16 (loop_instruction_statement -> CONTINUE SEMICOLON .)
    $end            reduce using rule 16 (loop_instruction_statement -> CONTINUE SEMICOLON .)
    RPARENCURLY     reduce using rule 16 (loop_instruction_statement -> CONTINUE SEMICOLON .)
    CONTINUE        reduce using rule 16 (loop_instruction_statement -> CONTINUE SEMICOLON .)
    BREAK           reduce using rule 16 (loop_instruction_statement -> CONTINUE SEMICOLON .)


state 153

    (7) loop_statement -> FOR ID ASSIGN num_expression RANGE num_expression . loop_instruction_statement
    (65) num_expression -> num_expression . ADD num_expression
    (66) num_expression -> num_expression . SUB num_expression
    (67) num_expression -> num_expression . MUL num_expression
    (68) num_expression -> num_expression . DIV num_expression
    (13) loop_instruction_statement -> . LPARENCURLY main_statements_break_continue RPARENCURLY
    (14) loop_instruction_statement -> . statement SEMICOLON
    (15) loop_instruction_statement -> . BREAK SEMICOLON
    (16) loop_instruction_statement -> . CONTINUE SEMICOLON
    (17) loop_instruction_statement -> . loop_statement
    (44) statement -> . PRINT print_expression
    (50) statement -> . ID ASSIGN STRING
    (51) statement -> . ID MATRIX ASSIGN num_expression
    (52) statement -> . ID MATRIX ADDASSIGN num_expression
    (53) statement -> . ID MATRIX SUBASSIGN num_expression
    (54) statement -> . ID MATRIX MULASSIGN num_expression
    (55) statement -> . ID MATRIX DIVASSIGN num_expression
    (56) statement -> . ID ASSIGN num_expression
    (57) statement -> . ID ADDASSIGN num_expression
    (58) statement -> . ID SUBASSIGN num_expression
    (59) statement -> . ID MULASSIGN num_expression
    (60) statement -> . ID DIVASSIGN num_expression
    (77) statement -> . ID ASSIGN matrix_expression
    (78) statement -> . ID ADDASSIGN matrix_expression
    (79) statement -> . ID SUBASSIGN matrix_expression
    (80) statement -> . ID MULASSIGN matrix_expression
    (81) statement -> . ID DIVASSIGN matrix_expression
    (91) statement -> . return_statement
    (6) loop_statement -> . WHILE LPAREN condition RPAREN loop_instruction_statement
    (7) loop_statement -> . FOR ID ASSIGN num_expression RANGE num_expression loop_instruction_statement
    (92) return_statement -> . RETURN expression

    ADD             shift and go to state 69
    SUB             shift and go to state 70
    MUL             shift and go to state 71
    DIV             shift and go to state 72
    LPARENCURLY     shift and go to state 127
    BREAK           shift and go to state 129
    CONTINUE        shift and go to state 130
    PRINT           shift and go to state 11
    ID              shift and go to state 9
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    RETURN          shift and go to state 13

    loop_instruction_statement     shift and go to state 164
    statement                      shift and go to state 128
    loop_statement                 shift and go to state 131
    return_statement               shift and go to state 12

state 154

    (12) if_statement -> IF LPAREN condition RPAREN instruction_statement else_statement .

    LPARENCURLY     reduce using rule 12 (if_statement -> IF LPAREN condition RPAREN instruction_statement else_statement .)
    WHILE           reduce using rule 12 (if_statement -> IF LPAREN condition RPAREN instruction_statement else_statement .)
    FOR             reduce using rule 12 (if_statement -> IF LPAREN condition RPAREN instruction_statement else_statement .)
    IF              reduce using rule 12 (if_statement -> IF LPAREN condition RPAREN instruction_statement else_statement .)
    PRINT           reduce using rule 12 (if_statement -> IF LPAREN condition RPAREN instruction_statement else_statement .)
    ID              reduce using rule 12 (if_statement -> IF LPAREN condition RPAREN instruction_statement else_statement .)
    RETURN          reduce using rule 12 (if_statement -> IF LPAREN condition RPAREN instruction_statement else_statement .)
    $end            reduce using rule 12 (if_statement -> IF LPAREN condition RPAREN instruction_statement else_statement .)
    RPARENCURLY     reduce using rule 12 (if_statement -> IF LPAREN condition RPAREN instruction_statement else_statement .)
    CONTINUE        reduce using rule 12 (if_statement -> IF LPAREN condition RPAREN instruction_statement else_statement .)
    BREAK           reduce using rule 12 (if_statement -> IF LPAREN condition RPAREN instruction_statement else_statement .)


state 155

    (9) else_statement -> ELSE . instruction_statement
    (10) else_statement -> ELSE . if_statement
    (33) instruction_statement -> . LPARENCURLY main_statements RPARENCURLY
    (34) instruction_statement -> . LPARENCURLY empty RPARENCURLY
    (35) instruction_statement -> . statement SEMICOLON
    (11) if_statement -> . IF LPAREN condition RPAREN instruction_statement
    (12) if_statement -> . IF LPAREN condition RPAREN instruction_statement else_statement
    (44) statement -> . PRINT print_expression
    (50) statement -> . ID ASSIGN STRING
    (51) statement -> . ID MATRIX ASSIGN num_expression
    (52) statement -> . ID MATRIX ADDASSIGN num_expression
    (53) statement -> . ID MATRIX SUBASSIGN num_expression
    (54) statement -> . ID MATRIX MULASSIGN num_expression
    (55) statement -> . ID MATRIX DIVASSIGN num_expression
    (56) statement -> . ID ASSIGN num_expression
    (57) statement -> . ID ADDASSIGN num_expression
    (58) statement -> . ID SUBASSIGN num_expression
    (59) statement -> . ID MULASSIGN num_expression
    (60) statement -> . ID DIVASSIGN num_expression
    (77) statement -> . ID ASSIGN matrix_expression
    (78) statement -> . ID ADDASSIGN matrix_expression
    (79) statement -> . ID SUBASSIGN matrix_expression
    (80) statement -> . ID MULASSIGN matrix_expression
    (81) statement -> . ID DIVASSIGN matrix_expression
    (91) statement -> . return_statement
    (92) return_statement -> . RETURN expression

    LPARENCURLY     shift and go to state 140
    IF              shift and go to state 10
    PRINT           shift and go to state 11
    ID              shift and go to state 9
    RETURN          shift and go to state 13

    instruction_statement          shift and go to state 165
    if_statement                   shift and go to state 166
    statement                      shift and go to state 141
    return_statement               shift and go to state 12

state 156

    (33) instruction_statement -> LPARENCURLY main_statements . RPARENCURLY
    (2) main_statements -> main_statements . LPARENCURLY statements RPARENCURLY
    (3) main_statements -> main_statements . main_statements
    (1) main_statements -> . LPARENCURLY statements RPARENCURLY main_statements
    (2) main_statements -> . main_statements LPARENCURLY statements RPARENCURLY
    (3) main_statements -> . main_statements main_statements
    (4) main_statements -> . statements
    (5) main_statements -> . loop_statement
    (8) main_statements -> . if_statement
    (42) statements -> . statement SEMICOLON statements
    (43) statements -> . statement SEMICOLON
    (6) loop_statement -> . WHILE LPAREN condition RPAREN loop_instruction_statement
    (7) loop_statement -> . FOR ID ASSIGN num_expression RANGE num_expression loop_instruction_statement
    (11) if_statement -> . IF LPAREN condition RPAREN instruction_statement
    (12) if_statement -> . IF LPAREN condition RPAREN instruction_statement else_statement
    (44) statement -> . PRINT print_expression
    (50) statement -> . ID ASSIGN STRING
    (51) statement -> . ID MATRIX ASSIGN num_expression
    (52) statement -> . ID MATRIX ADDASSIGN num_expression
    (53) statement -> . ID MATRIX SUBASSIGN num_expression
    (54) statement -> . ID MATRIX MULASSIGN num_expression
    (55) statement -> . ID MATRIX DIVASSIGN num_expression
    (56) statement -> . ID ASSIGN num_expression
    (57) statement -> . ID ADDASSIGN num_expression
    (58) statement -> . ID SUBASSIGN num_expression
    (59) statement -> . ID MULASSIGN num_expression
    (60) statement -> . ID DIVASSIGN num_expression
    (77) statement -> . ID ASSIGN matrix_expression
    (78) statement -> . ID ADDASSIGN matrix_expression
    (79) statement -> . ID SUBASSIGN matrix_expression
    (80) statement -> . ID MULASSIGN matrix_expression
    (81) statement -> . ID DIVASSIGN matrix_expression
    (91) statement -> . return_statement
    (92) return_statement -> . RETURN expression

    RPARENCURLY     shift and go to state 167
    LPARENCURLY     shift and go to state 15
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    IF              shift and go to state 10
    PRINT           shift and go to state 11
    ID              shift and go to state 9
    RETURN          shift and go to state 13

    main_statements                shift and go to state 14
    statements                     shift and go to state 3
    loop_statement                 shift and go to state 4
    if_statement                   shift and go to state 5
    statement                      shift and go to state 6
    return_statement               shift and go to state 12

state 157

    (34) instruction_statement -> LPARENCURLY empty . RPARENCURLY

    RPARENCURLY     shift and go to state 168


state 158

    (35) instruction_statement -> statement SEMICOLON .

    ELSE            reduce using rule 35 (instruction_statement -> statement SEMICOLON .)
    LPARENCURLY     reduce using rule 35 (instruction_statement -> statement SEMICOLON .)
    WHILE           reduce using rule 35 (instruction_statement -> statement SEMICOLON .)
    FOR             reduce using rule 35 (instruction_statement -> statement SEMICOLON .)
    IF              reduce using rule 35 (instruction_statement -> statement SEMICOLON .)
    PRINT           reduce using rule 35 (instruction_statement -> statement SEMICOLON .)
    ID              reduce using rule 35 (instruction_statement -> statement SEMICOLON .)
    RETURN          reduce using rule 35 (instruction_statement -> statement SEMICOLON .)
    $end            reduce using rule 35 (instruction_statement -> statement SEMICOLON .)
    RPARENCURLY     reduce using rule 35 (instruction_statement -> statement SEMICOLON .)
    CONTINUE        reduce using rule 35 (instruction_statement -> statement SEMICOLON .)
    BREAK           reduce using rule 35 (instruction_statement -> statement SEMICOLON .)


state 159

    (20) main_statements_break_continue -> main_statements_break_continue main_statements_break_continue .
    (20) main_statements_break_continue -> main_statements_break_continue . main_statements_break_continue
    (21) main_statements_break_continue -> main_statements_break_continue . CONTINUE SEMICOLON main_statements_break_continue
    (22) main_statements_break_continue -> main_statements_break_continue . BREAK SEMICOLON main_statements_break_continue
    (18) main_statements_break_continue -> . main_statements
    (19) main_statements_break_continue -> . if_break_continue
    (20) main_statements_break_continue -> . main_statements_break_continue main_statements_break_continue
    (21) main_statements_break_continue -> . main_statements_break_continue CONTINUE SEMICOLON main_statements_break_continue
    (22) main_statements_break_continue -> . main_statements_break_continue BREAK SEMICOLON main_statements_break_continue
    (23) main_statements_break_continue -> . empty
    (1) main_statements -> . LPARENCURLY statements RPARENCURLY main_statements
    (2) main_statements -> . main_statements LPARENCURLY statements RPARENCURLY
    (3) main_statements -> . main_statements main_statements
    (4) main_statements -> . statements
    (5) main_statements -> . loop_statement
    (8) main_statements -> . if_statement
    (26) if_break_continue -> . IF LPAREN condition RPAREN instruction_statement_break_continue
    (27) if_break_continue -> . IF LPAREN condition RPAREN instruction_statement_break_continue else_break_continue
    (93) empty -> .
    (42) statements -> . statement SEMICOLON statements
    (43) statements -> . statement SEMICOLON
    (6) loop_statement -> . WHILE LPAREN condition RPAREN loop_instruction_statement
    (7) loop_statement -> . FOR ID ASSIGN num_expression RANGE num_expression loop_instruction_statement
    (11) if_statement -> . IF LPAREN condition RPAREN instruction_statement
    (12) if_statement -> . IF LPAREN condition RPAREN instruction_statement else_statement
    (44) statement -> . PRINT print_expression
    (50) statement -> . ID ASSIGN STRING
    (51) statement -> . ID MATRIX ASSIGN num_expression
    (52) statement -> . ID MATRIX ADDASSIGN num_expression
    (53) statement -> . ID MATRIX SUBASSIGN num_expression
    (54) statement -> . ID MATRIX MULASSIGN num_expression
    (55) statement -> . ID MATRIX DIVASSIGN num_expression
    (56) statement -> . ID ASSIGN num_expression
    (57) statement -> . ID ADDASSIGN num_expression
    (58) statement -> . ID SUBASSIGN num_expression
    (59) statement -> . ID MULASSIGN num_expression
    (60) statement -> . ID DIVASSIGN num_expression
    (77) statement -> . ID ASSIGN matrix_expression
    (78) statement -> . ID ADDASSIGN matrix_expression
    (79) statement -> . ID SUBASSIGN matrix_expression
    (80) statement -> . ID MULASSIGN matrix_expression
    (81) statement -> . ID DIVASSIGN matrix_expression
    (91) statement -> . return_statement
    (92) return_statement -> . RETURN expression

  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for LPARENCURLY resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for LPARENCURLY resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! reduce/reduce conflict for WHILE resolved using rule 20 (main_statements_break_continue -> main_statements_break_continue main_statements_break_continue .)
  ! reduce/reduce conflict for FOR resolved using rule 20 (main_statements_break_continue -> main_statements_break_continue main_statements_break_continue .)
  ! reduce/reduce conflict for PRINT resolved using rule 20 (main_statements_break_continue -> main_statements_break_continue main_statements_break_continue .)
  ! reduce/reduce conflict for ID resolved using rule 20 (main_statements_break_continue -> main_statements_break_continue main_statements_break_continue .)
  ! reduce/reduce conflict for RETURN resolved using rule 20 (main_statements_break_continue -> main_statements_break_continue main_statements_break_continue .)
  ! reduce/reduce conflict for RPARENCURLY resolved using rule 20 (main_statements_break_continue -> main_statements_break_continue main_statements_break_continue .)
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
    RPARENCURLY     reduce using rule 20 (main_statements_break_continue -> main_statements_break_continue main_statements_break_continue .)
    CONTINUE        shift and go to state 161
    BREAK           shift and go to state 162
    LPARENCURLY     shift and go to state 2
    IF              shift and go to state 149
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    PRINT           shift and go to state 11
    ID              shift and go to state 9
    RETURN          shift and go to state 13

  ! CONTINUE        [ reduce using rule 20 (main_statements_break_continue -> main_statements_break_continue main_statements_break_continue .) ]
  ! BREAK           [ reduce using rule 20 (main_statements_break_continue -> main_statements_break_continue main_statements_break_continue .) ]
  ! LPARENCURLY     [ reduce using rule 20 (main_statements_break_continue -> main_statements_break_continue main_statements_break_continue .) ]
  ! IF              [ reduce using rule 20 (main_statements_break_continue -> main_statements_break_continue main_statements_break_continue .) ]
  ! WHILE           [ reduce using rule 20 (main_statements_break_continue -> main_statements_break_continue main_statements_break_continue .) ]
  ! FOR             [ reduce using rule 20 (main_statements_break_continue -> main_statements_break_continue main_statements_break_continue .) ]
  ! PRINT           [ reduce using rule 20 (main_statements_break_continue -> main_statements_break_continue main_statements_break_continue .) ]
  ! ID              [ reduce using rule 20 (main_statements_break_continue -> main_statements_break_continue main_statements_break_continue .) ]
  ! RETURN          [ reduce using rule 20 (main_statements_break_continue -> main_statements_break_continue main_statements_break_continue .) ]
  ! CONTINUE        [ reduce using rule 93 (empty -> .) ]
  ! BREAK           [ reduce using rule 93 (empty -> .) ]
  ! LPARENCURLY     [ reduce using rule 93 (empty -> .) ]
  ! IF              [ reduce using rule 93 (empty -> .) ]
  ! WHILE           [ reduce using rule 93 (empty -> .) ]
  ! FOR             [ reduce using rule 93 (empty -> .) ]
  ! PRINT           [ reduce using rule 93 (empty -> .) ]
  ! ID              [ reduce using rule 93 (empty -> .) ]
  ! RETURN          [ reduce using rule 93 (empty -> .) ]
  ! RPARENCURLY     [ reduce using rule 93 (empty -> .) ]

    main_statements_break_continue shift and go to state 159
    main_statements                shift and go to state 146
    if_break_continue              shift and go to state 147
    empty                          shift and go to state 148
    statements                     shift and go to state 3
    loop_statement                 shift and go to state 4
    if_statement                   shift and go to state 5
    statement                      shift and go to state 6
    return_statement               shift and go to state 12

state 160

    (13) loop_instruction_statement -> LPARENCURLY main_statements_break_continue RPARENCURLY .

    LPARENCURLY     reduce using rule 13 (loop_instruction_statement -> LPARENCURLY main_statements_break_continue RPARENCURLY .)
    WHILE           reduce using rule 13 (loop_instruction_statement -> LPARENCURLY main_statements_break_continue RPARENCURLY .)
    FOR             reduce using rule 13 (loop_instruction_statement -> LPARENCURLY main_statements_break_continue RPARENCURLY .)
    IF              reduce using rule 13 (loop_instruction_statement -> LPARENCURLY main_statements_break_continue RPARENCURLY .)
    PRINT           reduce using rule 13 (loop_instruction_statement -> LPARENCURLY main_statements_break_continue RPARENCURLY .)
    ID              reduce using rule 13 (loop_instruction_statement -> LPARENCURLY main_statements_break_continue RPARENCURLY .)
    RETURN          reduce using rule 13 (loop_instruction_statement -> LPARENCURLY main_statements_break_continue RPARENCURLY .)
    $end            reduce using rule 13 (loop_instruction_statement -> LPARENCURLY main_statements_break_continue RPARENCURLY .)
    RPARENCURLY     reduce using rule 13 (loop_instruction_statement -> LPARENCURLY main_statements_break_continue RPARENCURLY .)
    CONTINUE        reduce using rule 13 (loop_instruction_statement -> LPARENCURLY main_statements_break_continue RPARENCURLY .)
    BREAK           reduce using rule 13 (loop_instruction_statement -> LPARENCURLY main_statements_break_continue RPARENCURLY .)


state 161

    (21) main_statements_break_continue -> main_statements_break_continue CONTINUE . SEMICOLON main_statements_break_continue

    SEMICOLON       shift and go to state 169


state 162

    (22) main_statements_break_continue -> main_statements_break_continue BREAK . SEMICOLON main_statements_break_continue

    SEMICOLON       shift and go to state 170


state 163

    (26) if_break_continue -> IF LPAREN . condition RPAREN instruction_statement_break_continue
    (27) if_break_continue -> IF LPAREN . condition RPAREN instruction_statement_break_continue else_break_continue
    (11) if_statement -> IF LPAREN . condition RPAREN instruction_statement
    (12) if_statement -> IF LPAREN . condition RPAREN instruction_statement else_statement
    (36) condition -> . num_expression EQUALITY num_expression
    (37) condition -> . num_expression INEQUALITY num_expression
    (38) condition -> . num_expression GREATER num_expression
    (39) condition -> . num_expression GREATER_EQUAL num_expression
    (40) condition -> . num_expression LESS num_expression
    (41) condition -> . num_expression LESS_EQUAL num_expression
    (61) num_expression -> . ID
    (63) num_expression -> . LPAREN num_expression RPAREN
    (65) num_expression -> . num_expression ADD num_expression
    (66) num_expression -> . num_expression SUB num_expression
    (67) num_expression -> . num_expression MUL num_expression
    (68) num_expression -> . num_expression DIV num_expression
    (82) num_expression -> . SUB num_expression
    (85) num_expression -> . INTNUM
    (86) num_expression -> . FLOATNUM

    ID              shift and go to state 48
    LPAREN          shift and go to state 45
    SUB             shift and go to state 49
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 36

    condition                      shift and go to state 171
    num_expression                 shift and go to state 47

state 164

    (7) loop_statement -> FOR ID ASSIGN num_expression RANGE num_expression loop_instruction_statement .

    LPARENCURLY     reduce using rule 7 (loop_statement -> FOR ID ASSIGN num_expression RANGE num_expression loop_instruction_statement .)
    WHILE           reduce using rule 7 (loop_statement -> FOR ID ASSIGN num_expression RANGE num_expression loop_instruction_statement .)
    FOR             reduce using rule 7 (loop_statement -> FOR ID ASSIGN num_expression RANGE num_expression loop_instruction_statement .)
    IF              reduce using rule 7 (loop_statement -> FOR ID ASSIGN num_expression RANGE num_expression loop_instruction_statement .)
    PRINT           reduce using rule 7 (loop_statement -> FOR ID ASSIGN num_expression RANGE num_expression loop_instruction_statement .)
    ID              reduce using rule 7 (loop_statement -> FOR ID ASSIGN num_expression RANGE num_expression loop_instruction_statement .)
    RETURN          reduce using rule 7 (loop_statement -> FOR ID ASSIGN num_expression RANGE num_expression loop_instruction_statement .)
    $end            reduce using rule 7 (loop_statement -> FOR ID ASSIGN num_expression RANGE num_expression loop_instruction_statement .)
    RPARENCURLY     reduce using rule 7 (loop_statement -> FOR ID ASSIGN num_expression RANGE num_expression loop_instruction_statement .)
    CONTINUE        reduce using rule 7 (loop_statement -> FOR ID ASSIGN num_expression RANGE num_expression loop_instruction_statement .)
    BREAK           reduce using rule 7 (loop_statement -> FOR ID ASSIGN num_expression RANGE num_expression loop_instruction_statement .)


state 165

    (9) else_statement -> ELSE instruction_statement .

    LPARENCURLY     reduce using rule 9 (else_statement -> ELSE instruction_statement .)
    WHILE           reduce using rule 9 (else_statement -> ELSE instruction_statement .)
    FOR             reduce using rule 9 (else_statement -> ELSE instruction_statement .)
    IF              reduce using rule 9 (else_statement -> ELSE instruction_statement .)
    PRINT           reduce using rule 9 (else_statement -> ELSE instruction_statement .)
    ID              reduce using rule 9 (else_statement -> ELSE instruction_statement .)
    RETURN          reduce using rule 9 (else_statement -> ELSE instruction_statement .)
    $end            reduce using rule 9 (else_statement -> ELSE instruction_statement .)
    RPARENCURLY     reduce using rule 9 (else_statement -> ELSE instruction_statement .)
    CONTINUE        reduce using rule 9 (else_statement -> ELSE instruction_statement .)
    BREAK           reduce using rule 9 (else_statement -> ELSE instruction_statement .)


state 166

    (10) else_statement -> ELSE if_statement .

    LPARENCURLY     reduce using rule 10 (else_statement -> ELSE if_statement .)
    WHILE           reduce using rule 10 (else_statement -> ELSE if_statement .)
    FOR             reduce using rule 10 (else_statement -> ELSE if_statement .)
    IF              reduce using rule 10 (else_statement -> ELSE if_statement .)
    PRINT           reduce using rule 10 (else_statement -> ELSE if_statement .)
    ID              reduce using rule 10 (else_statement -> ELSE if_statement .)
    RETURN          reduce using rule 10 (else_statement -> ELSE if_statement .)
    $end            reduce using rule 10 (else_statement -> ELSE if_statement .)
    RPARENCURLY     reduce using rule 10 (else_statement -> ELSE if_statement .)
    CONTINUE        reduce using rule 10 (else_statement -> ELSE if_statement .)
    BREAK           reduce using rule 10 (else_statement -> ELSE if_statement .)


state 167

    (33) instruction_statement -> LPARENCURLY main_statements RPARENCURLY .

    ELSE            reduce using rule 33 (instruction_statement -> LPARENCURLY main_statements RPARENCURLY .)
    LPARENCURLY     reduce using rule 33 (instruction_statement -> LPARENCURLY main_statements RPARENCURLY .)
    WHILE           reduce using rule 33 (instruction_statement -> LPARENCURLY main_statements RPARENCURLY .)
    FOR             reduce using rule 33 (instruction_statement -> LPARENCURLY main_statements RPARENCURLY .)
    IF              reduce using rule 33 (instruction_statement -> LPARENCURLY main_statements RPARENCURLY .)
    PRINT           reduce using rule 33 (instruction_statement -> LPARENCURLY main_statements RPARENCURLY .)
    ID              reduce using rule 33 (instruction_statement -> LPARENCURLY main_statements RPARENCURLY .)
    RETURN          reduce using rule 33 (instruction_statement -> LPARENCURLY main_statements RPARENCURLY .)
    $end            reduce using rule 33 (instruction_statement -> LPARENCURLY main_statements RPARENCURLY .)
    RPARENCURLY     reduce using rule 33 (instruction_statement -> LPARENCURLY main_statements RPARENCURLY .)
    CONTINUE        reduce using rule 33 (instruction_statement -> LPARENCURLY main_statements RPARENCURLY .)
    BREAK           reduce using rule 33 (instruction_statement -> LPARENCURLY main_statements RPARENCURLY .)


state 168

    (34) instruction_statement -> LPARENCURLY empty RPARENCURLY .

    ELSE            reduce using rule 34 (instruction_statement -> LPARENCURLY empty RPARENCURLY .)
    LPARENCURLY     reduce using rule 34 (instruction_statement -> LPARENCURLY empty RPARENCURLY .)
    WHILE           reduce using rule 34 (instruction_statement -> LPARENCURLY empty RPARENCURLY .)
    FOR             reduce using rule 34 (instruction_statement -> LPARENCURLY empty RPARENCURLY .)
    IF              reduce using rule 34 (instruction_statement -> LPARENCURLY empty RPARENCURLY .)
    PRINT           reduce using rule 34 (instruction_statement -> LPARENCURLY empty RPARENCURLY .)
    ID              reduce using rule 34 (instruction_statement -> LPARENCURLY empty RPARENCURLY .)
    RETURN          reduce using rule 34 (instruction_statement -> LPARENCURLY empty RPARENCURLY .)
    $end            reduce using rule 34 (instruction_statement -> LPARENCURLY empty RPARENCURLY .)
    RPARENCURLY     reduce using rule 34 (instruction_statement -> LPARENCURLY empty RPARENCURLY .)
    CONTINUE        reduce using rule 34 (instruction_statement -> LPARENCURLY empty RPARENCURLY .)
    BREAK           reduce using rule 34 (instruction_statement -> LPARENCURLY empty RPARENCURLY .)


state 169

    (21) main_statements_break_continue -> main_statements_break_continue CONTINUE SEMICOLON . main_statements_break_continue
    (18) main_statements_break_continue -> . main_statements
    (19) main_statements_break_continue -> . if_break_continue
    (20) main_statements_break_continue -> . main_statements_break_continue main_statements_break_continue
    (21) main_statements_break_continue -> . main_statements_break_continue CONTINUE SEMICOLON main_statements_break_continue
    (22) main_statements_break_continue -> . main_statements_break_continue BREAK SEMICOLON main_statements_break_continue
    (23) main_statements_break_continue -> . empty
    (1) main_statements -> . LPARENCURLY statements RPARENCURLY main_statements
    (2) main_statements -> . main_statements LPARENCURLY statements RPARENCURLY
    (3) main_statements -> . main_statements main_statements
    (4) main_statements -> . statements
    (5) main_statements -> . loop_statement
    (8) main_statements -> . if_statement
    (26) if_break_continue -> . IF LPAREN condition RPAREN instruction_statement_break_continue
    (27) if_break_continue -> . IF LPAREN condition RPAREN instruction_statement_break_continue else_break_continue
    (93) empty -> .
    (42) statements -> . statement SEMICOLON statements
    (43) statements -> . statement SEMICOLON
    (6) loop_statement -> . WHILE LPAREN condition RPAREN loop_instruction_statement
    (7) loop_statement -> . FOR ID ASSIGN num_expression RANGE num_expression loop_instruction_statement
    (11) if_statement -> . IF LPAREN condition RPAREN instruction_statement
    (12) if_statement -> . IF LPAREN condition RPAREN instruction_statement else_statement
    (44) statement -> . PRINT print_expression
    (50) statement -> . ID ASSIGN STRING
    (51) statement -> . ID MATRIX ASSIGN num_expression
    (52) statement -> . ID MATRIX ADDASSIGN num_expression
    (53) statement -> . ID MATRIX SUBASSIGN num_expression
    (54) statement -> . ID MATRIX MULASSIGN num_expression
    (55) statement -> . ID MATRIX DIVASSIGN num_expression
    (56) statement -> . ID ASSIGN num_expression
    (57) statement -> . ID ADDASSIGN num_expression
    (58) statement -> . ID SUBASSIGN num_expression
    (59) statement -> . ID MULASSIGN num_expression
    (60) statement -> . ID DIVASSIGN num_expression
    (77) statement -> . ID ASSIGN matrix_expression
    (78) statement -> . ID ADDASSIGN matrix_expression
    (79) statement -> . ID SUBASSIGN matrix_expression
    (80) statement -> . ID MULASSIGN matrix_expression
    (81) statement -> . ID DIVASSIGN matrix_expression
    (91) statement -> . return_statement
    (92) return_statement -> . RETURN expression

  ! shift/reduce conflict for LPARENCURLY resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
    LPARENCURLY     shift and go to state 2
    IF              shift and go to state 149
    CONTINUE        reduce using rule 93 (empty -> .)
    BREAK           reduce using rule 93 (empty -> .)
    RPARENCURLY     reduce using rule 93 (empty -> .)
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    PRINT           shift and go to state 11
    ID              shift and go to state 9
    RETURN          shift and go to state 13

  ! LPARENCURLY     [ reduce using rule 93 (empty -> .) ]
  ! IF              [ reduce using rule 93 (empty -> .) ]
  ! WHILE           [ reduce using rule 93 (empty -> .) ]
  ! FOR             [ reduce using rule 93 (empty -> .) ]
  ! PRINT           [ reduce using rule 93 (empty -> .) ]
  ! ID              [ reduce using rule 93 (empty -> .) ]
  ! RETURN          [ reduce using rule 93 (empty -> .) ]

    main_statements_break_continue shift and go to state 172
    main_statements                shift and go to state 146
    if_break_continue              shift and go to state 147
    empty                          shift and go to state 148
    statements                     shift and go to state 3
    loop_statement                 shift and go to state 4
    if_statement                   shift and go to state 5
    statement                      shift and go to state 6
    return_statement               shift and go to state 12

state 170

    (22) main_statements_break_continue -> main_statements_break_continue BREAK SEMICOLON . main_statements_break_continue
    (18) main_statements_break_continue -> . main_statements
    (19) main_statements_break_continue -> . if_break_continue
    (20) main_statements_break_continue -> . main_statements_break_continue main_statements_break_continue
    (21) main_statements_break_continue -> . main_statements_break_continue CONTINUE SEMICOLON main_statements_break_continue
    (22) main_statements_break_continue -> . main_statements_break_continue BREAK SEMICOLON main_statements_break_continue
    (23) main_statements_break_continue -> . empty
    (1) main_statements -> . LPARENCURLY statements RPARENCURLY main_statements
    (2) main_statements -> . main_statements LPARENCURLY statements RPARENCURLY
    (3) main_statements -> . main_statements main_statements
    (4) main_statements -> . statements
    (5) main_statements -> . loop_statement
    (8) main_statements -> . if_statement
    (26) if_break_continue -> . IF LPAREN condition RPAREN instruction_statement_break_continue
    (27) if_break_continue -> . IF LPAREN condition RPAREN instruction_statement_break_continue else_break_continue
    (93) empty -> .
    (42) statements -> . statement SEMICOLON statements
    (43) statements -> . statement SEMICOLON
    (6) loop_statement -> . WHILE LPAREN condition RPAREN loop_instruction_statement
    (7) loop_statement -> . FOR ID ASSIGN num_expression RANGE num_expression loop_instruction_statement
    (11) if_statement -> . IF LPAREN condition RPAREN instruction_statement
    (12) if_statement -> . IF LPAREN condition RPAREN instruction_statement else_statement
    (44) statement -> . PRINT print_expression
    (50) statement -> . ID ASSIGN STRING
    (51) statement -> . ID MATRIX ASSIGN num_expression
    (52) statement -> . ID MATRIX ADDASSIGN num_expression
    (53) statement -> . ID MATRIX SUBASSIGN num_expression
    (54) statement -> . ID MATRIX MULASSIGN num_expression
    (55) statement -> . ID MATRIX DIVASSIGN num_expression
    (56) statement -> . ID ASSIGN num_expression
    (57) statement -> . ID ADDASSIGN num_expression
    (58) statement -> . ID SUBASSIGN num_expression
    (59) statement -> . ID MULASSIGN num_expression
    (60) statement -> . ID DIVASSIGN num_expression
    (77) statement -> . ID ASSIGN matrix_expression
    (78) statement -> . ID ADDASSIGN matrix_expression
    (79) statement -> . ID SUBASSIGN matrix_expression
    (80) statement -> . ID MULASSIGN matrix_expression
    (81) statement -> . ID DIVASSIGN matrix_expression
    (91) statement -> . return_statement
    (92) return_statement -> . RETURN expression

  ! shift/reduce conflict for LPARENCURLY resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
    LPARENCURLY     shift and go to state 2
    IF              shift and go to state 149
    CONTINUE        reduce using rule 93 (empty -> .)
    BREAK           reduce using rule 93 (empty -> .)
    RPARENCURLY     reduce using rule 93 (empty -> .)
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    PRINT           shift and go to state 11
    ID              shift and go to state 9
    RETURN          shift and go to state 13

  ! LPARENCURLY     [ reduce using rule 93 (empty -> .) ]
  ! IF              [ reduce using rule 93 (empty -> .) ]
  ! WHILE           [ reduce using rule 93 (empty -> .) ]
  ! FOR             [ reduce using rule 93 (empty -> .) ]
  ! PRINT           [ reduce using rule 93 (empty -> .) ]
  ! ID              [ reduce using rule 93 (empty -> .) ]
  ! RETURN          [ reduce using rule 93 (empty -> .) ]

    main_statements_break_continue shift and go to state 173
    main_statements                shift and go to state 146
    if_break_continue              shift and go to state 147
    empty                          shift and go to state 148
    statements                     shift and go to state 3
    loop_statement                 shift and go to state 4
    if_statement                   shift and go to state 5
    statement                      shift and go to state 6
    return_statement               shift and go to state 12

state 171

    (26) if_break_continue -> IF LPAREN condition . RPAREN instruction_statement_break_continue
    (27) if_break_continue -> IF LPAREN condition . RPAREN instruction_statement_break_continue else_break_continue
    (11) if_statement -> IF LPAREN condition . RPAREN instruction_statement
    (12) if_statement -> IF LPAREN condition . RPAREN instruction_statement else_statement

    RPAREN          shift and go to state 174


state 172

    (21) main_statements_break_continue -> main_statements_break_continue CONTINUE SEMICOLON main_statements_break_continue .
    (20) main_statements_break_continue -> main_statements_break_continue . main_statements_break_continue
    (21) main_statements_break_continue -> main_statements_break_continue . CONTINUE SEMICOLON main_statements_break_continue
    (22) main_statements_break_continue -> main_statements_break_continue . BREAK SEMICOLON main_statements_break_continue
    (18) main_statements_break_continue -> . main_statements
    (19) main_statements_break_continue -> . if_break_continue
    (20) main_statements_break_continue -> . main_statements_break_continue main_statements_break_continue
    (21) main_statements_break_continue -> . main_statements_break_continue CONTINUE SEMICOLON main_statements_break_continue
    (22) main_statements_break_continue -> . main_statements_break_continue BREAK SEMICOLON main_statements_break_continue
    (23) main_statements_break_continue -> . empty
    (1) main_statements -> . LPARENCURLY statements RPARENCURLY main_statements
    (2) main_statements -> . main_statements LPARENCURLY statements RPARENCURLY
    (3) main_statements -> . main_statements main_statements
    (4) main_statements -> . statements
    (5) main_statements -> . loop_statement
    (8) main_statements -> . if_statement
    (26) if_break_continue -> . IF LPAREN condition RPAREN instruction_statement_break_continue
    (27) if_break_continue -> . IF LPAREN condition RPAREN instruction_statement_break_continue else_break_continue
    (93) empty -> .
    (42) statements -> . statement SEMICOLON statements
    (43) statements -> . statement SEMICOLON
    (6) loop_statement -> . WHILE LPAREN condition RPAREN loop_instruction_statement
    (7) loop_statement -> . FOR ID ASSIGN num_expression RANGE num_expression loop_instruction_statement
    (11) if_statement -> . IF LPAREN condition RPAREN instruction_statement
    (12) if_statement -> . IF LPAREN condition RPAREN instruction_statement else_statement
    (44) statement -> . PRINT print_expression
    (50) statement -> . ID ASSIGN STRING
    (51) statement -> . ID MATRIX ASSIGN num_expression
    (52) statement -> . ID MATRIX ADDASSIGN num_expression
    (53) statement -> . ID MATRIX SUBASSIGN num_expression
    (54) statement -> . ID MATRIX MULASSIGN num_expression
    (55) statement -> . ID MATRIX DIVASSIGN num_expression
    (56) statement -> . ID ASSIGN num_expression
    (57) statement -> . ID ADDASSIGN num_expression
    (58) statement -> . ID SUBASSIGN num_expression
    (59) statement -> . ID MULASSIGN num_expression
    (60) statement -> . ID DIVASSIGN num_expression
    (77) statement -> . ID ASSIGN matrix_expression
    (78) statement -> . ID ADDASSIGN matrix_expression
    (79) statement -> . ID SUBASSIGN matrix_expression
    (80) statement -> . ID MULASSIGN matrix_expression
    (81) statement -> . ID DIVASSIGN matrix_expression
    (91) statement -> . return_statement
    (92) return_statement -> . RETURN expression

  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for LPARENCURLY resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for LPARENCURLY resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! reduce/reduce conflict for WHILE resolved using rule 21 (main_statements_break_continue -> main_statements_break_continue CONTINUE SEMICOLON main_statements_break_continue .)
  ! reduce/reduce conflict for FOR resolved using rule 21 (main_statements_break_continue -> main_statements_break_continue CONTINUE SEMICOLON main_statements_break_continue .)
  ! reduce/reduce conflict for PRINT resolved using rule 21 (main_statements_break_continue -> main_statements_break_continue CONTINUE SEMICOLON main_statements_break_continue .)
  ! reduce/reduce conflict for ID resolved using rule 21 (main_statements_break_continue -> main_statements_break_continue CONTINUE SEMICOLON main_statements_break_continue .)
  ! reduce/reduce conflict for RETURN resolved using rule 21 (main_statements_break_continue -> main_statements_break_continue CONTINUE SEMICOLON main_statements_break_continue .)
  ! reduce/reduce conflict for RPARENCURLY resolved using rule 21 (main_statements_break_continue -> main_statements_break_continue CONTINUE SEMICOLON main_statements_break_continue .)
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
    RPARENCURLY     reduce using rule 21 (main_statements_break_continue -> main_statements_break_continue CONTINUE SEMICOLON main_statements_break_continue .)
    CONTINUE        shift and go to state 161
    BREAK           shift and go to state 162
    LPARENCURLY     shift and go to state 2
    IF              shift and go to state 149
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    PRINT           shift and go to state 11
    ID              shift and go to state 9
    RETURN          shift and go to state 13

  ! CONTINUE        [ reduce using rule 21 (main_statements_break_continue -> main_statements_break_continue CONTINUE SEMICOLON main_statements_break_continue .) ]
  ! BREAK           [ reduce using rule 21 (main_statements_break_continue -> main_statements_break_continue CONTINUE SEMICOLON main_statements_break_continue .) ]
  ! LPARENCURLY     [ reduce using rule 21 (main_statements_break_continue -> main_statements_break_continue CONTINUE SEMICOLON main_statements_break_continue .) ]
  ! IF              [ reduce using rule 21 (main_statements_break_continue -> main_statements_break_continue CONTINUE SEMICOLON main_statements_break_continue .) ]
  ! WHILE           [ reduce using rule 21 (main_statements_break_continue -> main_statements_break_continue CONTINUE SEMICOLON main_statements_break_continue .) ]
  ! FOR             [ reduce using rule 21 (main_statements_break_continue -> main_statements_break_continue CONTINUE SEMICOLON main_statements_break_continue .) ]
  ! PRINT           [ reduce using rule 21 (main_statements_break_continue -> main_statements_break_continue CONTINUE SEMICOLON main_statements_break_continue .) ]
  ! ID              [ reduce using rule 21 (main_statements_break_continue -> main_statements_break_continue CONTINUE SEMICOLON main_statements_break_continue .) ]
  ! RETURN          [ reduce using rule 21 (main_statements_break_continue -> main_statements_break_continue CONTINUE SEMICOLON main_statements_break_continue .) ]
  ! CONTINUE        [ reduce using rule 93 (empty -> .) ]
  ! BREAK           [ reduce using rule 93 (empty -> .) ]
  ! LPARENCURLY     [ reduce using rule 93 (empty -> .) ]
  ! IF              [ reduce using rule 93 (empty -> .) ]
  ! WHILE           [ reduce using rule 93 (empty -> .) ]
  ! FOR             [ reduce using rule 93 (empty -> .) ]
  ! PRINT           [ reduce using rule 93 (empty -> .) ]
  ! ID              [ reduce using rule 93 (empty -> .) ]
  ! RETURN          [ reduce using rule 93 (empty -> .) ]
  ! RPARENCURLY     [ reduce using rule 93 (empty -> .) ]

    main_statements_break_continue shift and go to state 159
    main_statements                shift and go to state 146
    if_break_continue              shift and go to state 147
    empty                          shift and go to state 148
    statements                     shift and go to state 3
    loop_statement                 shift and go to state 4
    if_statement                   shift and go to state 5
    statement                      shift and go to state 6
    return_statement               shift and go to state 12

state 173

    (22) main_statements_break_continue -> main_statements_break_continue BREAK SEMICOLON main_statements_break_continue .
    (20) main_statements_break_continue -> main_statements_break_continue . main_statements_break_continue
    (21) main_statements_break_continue -> main_statements_break_continue . CONTINUE SEMICOLON main_statements_break_continue
    (22) main_statements_break_continue -> main_statements_break_continue . BREAK SEMICOLON main_statements_break_continue
    (18) main_statements_break_continue -> . main_statements
    (19) main_statements_break_continue -> . if_break_continue
    (20) main_statements_break_continue -> . main_statements_break_continue main_statements_break_continue
    (21) main_statements_break_continue -> . main_statements_break_continue CONTINUE SEMICOLON main_statements_break_continue
    (22) main_statements_break_continue -> . main_statements_break_continue BREAK SEMICOLON main_statements_break_continue
    (23) main_statements_break_continue -> . empty
    (1) main_statements -> . LPARENCURLY statements RPARENCURLY main_statements
    (2) main_statements -> . main_statements LPARENCURLY statements RPARENCURLY
    (3) main_statements -> . main_statements main_statements
    (4) main_statements -> . statements
    (5) main_statements -> . loop_statement
    (8) main_statements -> . if_statement
    (26) if_break_continue -> . IF LPAREN condition RPAREN instruction_statement_break_continue
    (27) if_break_continue -> . IF LPAREN condition RPAREN instruction_statement_break_continue else_break_continue
    (93) empty -> .
    (42) statements -> . statement SEMICOLON statements
    (43) statements -> . statement SEMICOLON
    (6) loop_statement -> . WHILE LPAREN condition RPAREN loop_instruction_statement
    (7) loop_statement -> . FOR ID ASSIGN num_expression RANGE num_expression loop_instruction_statement
    (11) if_statement -> . IF LPAREN condition RPAREN instruction_statement
    (12) if_statement -> . IF LPAREN condition RPAREN instruction_statement else_statement
    (44) statement -> . PRINT print_expression
    (50) statement -> . ID ASSIGN STRING
    (51) statement -> . ID MATRIX ASSIGN num_expression
    (52) statement -> . ID MATRIX ADDASSIGN num_expression
    (53) statement -> . ID MATRIX SUBASSIGN num_expression
    (54) statement -> . ID MATRIX MULASSIGN num_expression
    (55) statement -> . ID MATRIX DIVASSIGN num_expression
    (56) statement -> . ID ASSIGN num_expression
    (57) statement -> . ID ADDASSIGN num_expression
    (58) statement -> . ID SUBASSIGN num_expression
    (59) statement -> . ID MULASSIGN num_expression
    (60) statement -> . ID DIVASSIGN num_expression
    (77) statement -> . ID ASSIGN matrix_expression
    (78) statement -> . ID ADDASSIGN matrix_expression
    (79) statement -> . ID SUBASSIGN matrix_expression
    (80) statement -> . ID MULASSIGN matrix_expression
    (81) statement -> . ID DIVASSIGN matrix_expression
    (91) statement -> . return_statement
    (92) return_statement -> . RETURN expression

  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for LPARENCURLY resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for LPARENCURLY resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! reduce/reduce conflict for WHILE resolved using rule 22 (main_statements_break_continue -> main_statements_break_continue BREAK SEMICOLON main_statements_break_continue .)
  ! reduce/reduce conflict for FOR resolved using rule 22 (main_statements_break_continue -> main_statements_break_continue BREAK SEMICOLON main_statements_break_continue .)
  ! reduce/reduce conflict for PRINT resolved using rule 22 (main_statements_break_continue -> main_statements_break_continue BREAK SEMICOLON main_statements_break_continue .)
  ! reduce/reduce conflict for ID resolved using rule 22 (main_statements_break_continue -> main_statements_break_continue BREAK SEMICOLON main_statements_break_continue .)
  ! reduce/reduce conflict for RETURN resolved using rule 22 (main_statements_break_continue -> main_statements_break_continue BREAK SEMICOLON main_statements_break_continue .)
  ! reduce/reduce conflict for RPARENCURLY resolved using rule 22 (main_statements_break_continue -> main_statements_break_continue BREAK SEMICOLON main_statements_break_continue .)
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
    RPARENCURLY     reduce using rule 22 (main_statements_break_continue -> main_statements_break_continue BREAK SEMICOLON main_statements_break_continue .)
    CONTINUE        shift and go to state 161
    BREAK           shift and go to state 162
    LPARENCURLY     shift and go to state 2
    IF              shift and go to state 149
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    PRINT           shift and go to state 11
    ID              shift and go to state 9
    RETURN          shift and go to state 13

  ! CONTINUE        [ reduce using rule 22 (main_statements_break_continue -> main_statements_break_continue BREAK SEMICOLON main_statements_break_continue .) ]
  ! BREAK           [ reduce using rule 22 (main_statements_break_continue -> main_statements_break_continue BREAK SEMICOLON main_statements_break_continue .) ]
  ! LPARENCURLY     [ reduce using rule 22 (main_statements_break_continue -> main_statements_break_continue BREAK SEMICOLON main_statements_break_continue .) ]
  ! IF              [ reduce using rule 22 (main_statements_break_continue -> main_statements_break_continue BREAK SEMICOLON main_statements_break_continue .) ]
  ! WHILE           [ reduce using rule 22 (main_statements_break_continue -> main_statements_break_continue BREAK SEMICOLON main_statements_break_continue .) ]
  ! FOR             [ reduce using rule 22 (main_statements_break_continue -> main_statements_break_continue BREAK SEMICOLON main_statements_break_continue .) ]
  ! PRINT           [ reduce using rule 22 (main_statements_break_continue -> main_statements_break_continue BREAK SEMICOLON main_statements_break_continue .) ]
  ! ID              [ reduce using rule 22 (main_statements_break_continue -> main_statements_break_continue BREAK SEMICOLON main_statements_break_continue .) ]
  ! RETURN          [ reduce using rule 22 (main_statements_break_continue -> main_statements_break_continue BREAK SEMICOLON main_statements_break_continue .) ]
  ! CONTINUE        [ reduce using rule 93 (empty -> .) ]
  ! BREAK           [ reduce using rule 93 (empty -> .) ]
  ! LPARENCURLY     [ reduce using rule 93 (empty -> .) ]
  ! IF              [ reduce using rule 93 (empty -> .) ]
  ! WHILE           [ reduce using rule 93 (empty -> .) ]
  ! FOR             [ reduce using rule 93 (empty -> .) ]
  ! PRINT           [ reduce using rule 93 (empty -> .) ]
  ! ID              [ reduce using rule 93 (empty -> .) ]
  ! RETURN          [ reduce using rule 93 (empty -> .) ]
  ! RPARENCURLY     [ reduce using rule 93 (empty -> .) ]

    main_statements_break_continue shift and go to state 159
    main_statements                shift and go to state 146
    if_break_continue              shift and go to state 147
    empty                          shift and go to state 148
    statements                     shift and go to state 3
    loop_statement                 shift and go to state 4
    if_statement                   shift and go to state 5
    statement                      shift and go to state 6
    return_statement               shift and go to state 12

state 174

    (26) if_break_continue -> IF LPAREN condition RPAREN . instruction_statement_break_continue
    (27) if_break_continue -> IF LPAREN condition RPAREN . instruction_statement_break_continue else_break_continue
    (11) if_statement -> IF LPAREN condition RPAREN . instruction_statement
    (12) if_statement -> IF LPAREN condition RPAREN . instruction_statement else_statement
    (28) instruction_statement_break_continue -> . LPARENCURLY main_statements_break_continue RPARENCURLY
    (29) instruction_statement_break_continue -> . LPARENCURLY empty RPARENCURLY
    (30) instruction_statement_break_continue -> . statement SEMICOLON
    (31) instruction_statement_break_continue -> . BREAK SEMICOLON
    (32) instruction_statement_break_continue -> . CONTINUE SEMICOLON
    (33) instruction_statement -> . LPARENCURLY main_statements RPARENCURLY
    (34) instruction_statement -> . LPARENCURLY empty RPARENCURLY
    (35) instruction_statement -> . statement SEMICOLON
    (44) statement -> . PRINT print_expression
    (50) statement -> . ID ASSIGN STRING
    (51) statement -> . ID MATRIX ASSIGN num_expression
    (52) statement -> . ID MATRIX ADDASSIGN num_expression
    (53) statement -> . ID MATRIX SUBASSIGN num_expression
    (54) statement -> . ID MATRIX MULASSIGN num_expression
    (55) statement -> . ID MATRIX DIVASSIGN num_expression
    (56) statement -> . ID ASSIGN num_expression
    (57) statement -> . ID ADDASSIGN num_expression
    (58) statement -> . ID SUBASSIGN num_expression
    (59) statement -> . ID MULASSIGN num_expression
    (60) statement -> . ID DIVASSIGN num_expression
    (77) statement -> . ID ASSIGN matrix_expression
    (78) statement -> . ID ADDASSIGN matrix_expression
    (79) statement -> . ID SUBASSIGN matrix_expression
    (80) statement -> . ID MULASSIGN matrix_expression
    (81) statement -> . ID DIVASSIGN matrix_expression
    (91) statement -> . return_statement
    (92) return_statement -> . RETURN expression

    LPARENCURLY     shift and go to state 176
    BREAK           shift and go to state 178
    CONTINUE        shift and go to state 179
    PRINT           shift and go to state 11
    ID              shift and go to state 9
    RETURN          shift and go to state 13

    instruction_statement_break_continue shift and go to state 175
    instruction_statement          shift and go to state 139
    statement                      shift and go to state 177
    return_statement               shift and go to state 12

state 175

    (26) if_break_continue -> IF LPAREN condition RPAREN instruction_statement_break_continue .
    (27) if_break_continue -> IF LPAREN condition RPAREN instruction_statement_break_continue . else_break_continue
    (24) else_break_continue -> . ELSE instruction_statement_break_continue
    (25) else_break_continue -> . ELSE if_break_continue

    RPARENCURLY     reduce using rule 26 (if_break_continue -> IF LPAREN condition RPAREN instruction_statement_break_continue .)
    CONTINUE        reduce using rule 26 (if_break_continue -> IF LPAREN condition RPAREN instruction_statement_break_continue .)
    BREAK           reduce using rule 26 (if_break_continue -> IF LPAREN condition RPAREN instruction_statement_break_continue .)
    LPARENCURLY     reduce using rule 26 (if_break_continue -> IF LPAREN condition RPAREN instruction_statement_break_continue .)
    IF              reduce using rule 26 (if_break_continue -> IF LPAREN condition RPAREN instruction_statement_break_continue .)
    WHILE           reduce using rule 26 (if_break_continue -> IF LPAREN condition RPAREN instruction_statement_break_continue .)
    FOR             reduce using rule 26 (if_break_continue -> IF LPAREN condition RPAREN instruction_statement_break_continue .)
    PRINT           reduce using rule 26 (if_break_continue -> IF LPAREN condition RPAREN instruction_statement_break_continue .)
    ID              reduce using rule 26 (if_break_continue -> IF LPAREN condition RPAREN instruction_statement_break_continue .)
    RETURN          reduce using rule 26 (if_break_continue -> IF LPAREN condition RPAREN instruction_statement_break_continue .)
    ELSE            shift and go to state 181

    else_break_continue            shift and go to state 180

state 176

    (28) instruction_statement_break_continue -> LPARENCURLY . main_statements_break_continue RPARENCURLY
    (29) instruction_statement_break_continue -> LPARENCURLY . empty RPARENCURLY
    (33) instruction_statement -> LPARENCURLY . main_statements RPARENCURLY
    (34) instruction_statement -> LPARENCURLY . empty RPARENCURLY
    (18) main_statements_break_continue -> . main_statements
    (19) main_statements_break_continue -> . if_break_continue
    (20) main_statements_break_continue -> . main_statements_break_continue main_statements_break_continue
    (21) main_statements_break_continue -> . main_statements_break_continue CONTINUE SEMICOLON main_statements_break_continue
    (22) main_statements_break_continue -> . main_statements_break_continue BREAK SEMICOLON main_statements_break_continue
    (23) main_statements_break_continue -> . empty
    (93) empty -> .
    (1) main_statements -> . LPARENCURLY statements RPARENCURLY main_statements
    (2) main_statements -> . main_statements LPARENCURLY statements RPARENCURLY
    (3) main_statements -> . main_statements main_statements
    (4) main_statements -> . statements
    (5) main_statements -> . loop_statement
    (8) main_statements -> . if_statement
    (26) if_break_continue -> . IF LPAREN condition RPAREN instruction_statement_break_continue
    (27) if_break_continue -> . IF LPAREN condition RPAREN instruction_statement_break_continue else_break_continue
    (42) statements -> . statement SEMICOLON statements
    (43) statements -> . statement SEMICOLON
    (6) loop_statement -> . WHILE LPAREN condition RPAREN loop_instruction_statement
    (7) loop_statement -> . FOR ID ASSIGN num_expression RANGE num_expression loop_instruction_statement
    (11) if_statement -> . IF LPAREN condition RPAREN instruction_statement
    (12) if_statement -> . IF LPAREN condition RPAREN instruction_statement else_statement
    (44) statement -> . PRINT print_expression
    (50) statement -> . ID ASSIGN STRING
    (51) statement -> . ID MATRIX ASSIGN num_expression
    (52) statement -> . ID MATRIX ADDASSIGN num_expression
    (53) statement -> . ID MATRIX SUBASSIGN num_expression
    (54) statement -> . ID MATRIX MULASSIGN num_expression
    (55) statement -> . ID MATRIX DIVASSIGN num_expression
    (56) statement -> . ID ASSIGN num_expression
    (57) statement -> . ID ADDASSIGN num_expression
    (58) statement -> . ID SUBASSIGN num_expression
    (59) statement -> . ID MULASSIGN num_expression
    (60) statement -> . ID DIVASSIGN num_expression
    (77) statement -> . ID ASSIGN matrix_expression
    (78) statement -> . ID ADDASSIGN matrix_expression
    (79) statement -> . ID SUBASSIGN matrix_expression
    (80) statement -> . ID MULASSIGN matrix_expression
    (81) statement -> . ID DIVASSIGN matrix_expression
    (91) statement -> . return_statement
    (92) return_statement -> . RETURN expression

  ! shift/reduce conflict for LPARENCURLY resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
    RPARENCURLY     reduce using rule 93 (empty -> .)
    CONTINUE        reduce using rule 93 (empty -> .)
    BREAK           reduce using rule 93 (empty -> .)
    LPARENCURLY     shift and go to state 2
    IF              shift and go to state 149
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    PRINT           shift and go to state 11
    ID              shift and go to state 9
    RETURN          shift and go to state 13

  ! LPARENCURLY     [ reduce using rule 93 (empty -> .) ]
  ! IF              [ reduce using rule 93 (empty -> .) ]
  ! WHILE           [ reduce using rule 93 (empty -> .) ]
  ! FOR             [ reduce using rule 93 (empty -> .) ]
  ! PRINT           [ reduce using rule 93 (empty -> .) ]
  ! ID              [ reduce using rule 93 (empty -> .) ]
  ! RETURN          [ reduce using rule 93 (empty -> .) ]

    main_statements_break_continue shift and go to state 182
    empty                          shift and go to state 183
    main_statements                shift and go to state 184
    if_break_continue              shift and go to state 147
    statements                     shift and go to state 3
    loop_statement                 shift and go to state 4
    if_statement                   shift and go to state 5
    statement                      shift and go to state 6
    return_statement               shift and go to state 12

state 177

    (30) instruction_statement_break_continue -> statement . SEMICOLON
    (35) instruction_statement -> statement . SEMICOLON

    SEMICOLON       shift and go to state 185


state 178

    (31) instruction_statement_break_continue -> BREAK . SEMICOLON

    SEMICOLON       shift and go to state 186


state 179

    (32) instruction_statement_break_continue -> CONTINUE . SEMICOLON

    SEMICOLON       shift and go to state 187


state 180

    (27) if_break_continue -> IF LPAREN condition RPAREN instruction_statement_break_continue else_break_continue .

    RPARENCURLY     reduce using rule 27 (if_break_continue -> IF LPAREN condition RPAREN instruction_statement_break_continue else_break_continue .)
    CONTINUE        reduce using rule 27 (if_break_continue -> IF LPAREN condition RPAREN instruction_statement_break_continue else_break_continue .)
    BREAK           reduce using rule 27 (if_break_continue -> IF LPAREN condition RPAREN instruction_statement_break_continue else_break_continue .)
    LPARENCURLY     reduce using rule 27 (if_break_continue -> IF LPAREN condition RPAREN instruction_statement_break_continue else_break_continue .)
    IF              reduce using rule 27 (if_break_continue -> IF LPAREN condition RPAREN instruction_statement_break_continue else_break_continue .)
    WHILE           reduce using rule 27 (if_break_continue -> IF LPAREN condition RPAREN instruction_statement_break_continue else_break_continue .)
    FOR             reduce using rule 27 (if_break_continue -> IF LPAREN condition RPAREN instruction_statement_break_continue else_break_continue .)
    PRINT           reduce using rule 27 (if_break_continue -> IF LPAREN condition RPAREN instruction_statement_break_continue else_break_continue .)
    ID              reduce using rule 27 (if_break_continue -> IF LPAREN condition RPAREN instruction_statement_break_continue else_break_continue .)
    RETURN          reduce using rule 27 (if_break_continue -> IF LPAREN condition RPAREN instruction_statement_break_continue else_break_continue .)


state 181

    (24) else_break_continue -> ELSE . instruction_statement_break_continue
    (25) else_break_continue -> ELSE . if_break_continue
    (28) instruction_statement_break_continue -> . LPARENCURLY main_statements_break_continue RPARENCURLY
    (29) instruction_statement_break_continue -> . LPARENCURLY empty RPARENCURLY
    (30) instruction_statement_break_continue -> . statement SEMICOLON
    (31) instruction_statement_break_continue -> . BREAK SEMICOLON
    (32) instruction_statement_break_continue -> . CONTINUE SEMICOLON
    (26) if_break_continue -> . IF LPAREN condition RPAREN instruction_statement_break_continue
    (27) if_break_continue -> . IF LPAREN condition RPAREN instruction_statement_break_continue else_break_continue
    (44) statement -> . PRINT print_expression
    (50) statement -> . ID ASSIGN STRING
    (51) statement -> . ID MATRIX ASSIGN num_expression
    (52) statement -> . ID MATRIX ADDASSIGN num_expression
    (53) statement -> . ID MATRIX SUBASSIGN num_expression
    (54) statement -> . ID MATRIX MULASSIGN num_expression
    (55) statement -> . ID MATRIX DIVASSIGN num_expression
    (56) statement -> . ID ASSIGN num_expression
    (57) statement -> . ID ADDASSIGN num_expression
    (58) statement -> . ID SUBASSIGN num_expression
    (59) statement -> . ID MULASSIGN num_expression
    (60) statement -> . ID DIVASSIGN num_expression
    (77) statement -> . ID ASSIGN matrix_expression
    (78) statement -> . ID ADDASSIGN matrix_expression
    (79) statement -> . ID SUBASSIGN matrix_expression
    (80) statement -> . ID MULASSIGN matrix_expression
    (81) statement -> . ID DIVASSIGN matrix_expression
    (91) statement -> . return_statement
    (92) return_statement -> . RETURN expression

    LPARENCURLY     shift and go to state 190
    BREAK           shift and go to state 178
    CONTINUE        shift and go to state 179
    IF              shift and go to state 192
    PRINT           shift and go to state 11
    ID              shift and go to state 9
    RETURN          shift and go to state 13

    instruction_statement_break_continue shift and go to state 188
    if_break_continue              shift and go to state 189
    statement                      shift and go to state 191
    return_statement               shift and go to state 12

state 182

    (28) instruction_statement_break_continue -> LPARENCURLY main_statements_break_continue . RPARENCURLY
    (20) main_statements_break_continue -> main_statements_break_continue . main_statements_break_continue
    (21) main_statements_break_continue -> main_statements_break_continue . CONTINUE SEMICOLON main_statements_break_continue
    (22) main_statements_break_continue -> main_statements_break_continue . BREAK SEMICOLON main_statements_break_continue
    (18) main_statements_break_continue -> . main_statements
    (19) main_statements_break_continue -> . if_break_continue
    (20) main_statements_break_continue -> . main_statements_break_continue main_statements_break_continue
    (21) main_statements_break_continue -> . main_statements_break_continue CONTINUE SEMICOLON main_statements_break_continue
    (22) main_statements_break_continue -> . main_statements_break_continue BREAK SEMICOLON main_statements_break_continue
    (23) main_statements_break_continue -> . empty
    (1) main_statements -> . LPARENCURLY statements RPARENCURLY main_statements
    (2) main_statements -> . main_statements LPARENCURLY statements RPARENCURLY
    (3) main_statements -> . main_statements main_statements
    (4) main_statements -> . statements
    (5) main_statements -> . loop_statement
    (8) main_statements -> . if_statement
    (26) if_break_continue -> . IF LPAREN condition RPAREN instruction_statement_break_continue
    (27) if_break_continue -> . IF LPAREN condition RPAREN instruction_statement_break_continue else_break_continue
    (93) empty -> .
    (42) statements -> . statement SEMICOLON statements
    (43) statements -> . statement SEMICOLON
    (6) loop_statement -> . WHILE LPAREN condition RPAREN loop_instruction_statement
    (7) loop_statement -> . FOR ID ASSIGN num_expression RANGE num_expression loop_instruction_statement
    (11) if_statement -> . IF LPAREN condition RPAREN instruction_statement
    (12) if_statement -> . IF LPAREN condition RPAREN instruction_statement else_statement
    (44) statement -> . PRINT print_expression
    (50) statement -> . ID ASSIGN STRING
    (51) statement -> . ID MATRIX ASSIGN num_expression
    (52) statement -> . ID MATRIX ADDASSIGN num_expression
    (53) statement -> . ID MATRIX SUBASSIGN num_expression
    (54) statement -> . ID MATRIX MULASSIGN num_expression
    (55) statement -> . ID MATRIX DIVASSIGN num_expression
    (56) statement -> . ID ASSIGN num_expression
    (57) statement -> . ID ADDASSIGN num_expression
    (58) statement -> . ID SUBASSIGN num_expression
    (59) statement -> . ID MULASSIGN num_expression
    (60) statement -> . ID DIVASSIGN num_expression
    (77) statement -> . ID ASSIGN matrix_expression
    (78) statement -> . ID ADDASSIGN matrix_expression
    (79) statement -> . ID SUBASSIGN matrix_expression
    (80) statement -> . ID MULASSIGN matrix_expression
    (81) statement -> . ID DIVASSIGN matrix_expression
    (91) statement -> . return_statement
    (92) return_statement -> . RETURN expression

  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for LPARENCURLY resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for RPARENCURLY resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
    RPARENCURLY     shift and go to state 193
    CONTINUE        shift and go to state 161
    BREAK           shift and go to state 162
    LPARENCURLY     shift and go to state 2
    IF              shift and go to state 149
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    PRINT           shift and go to state 11
    ID              shift and go to state 9
    RETURN          shift and go to state 13

  ! CONTINUE        [ reduce using rule 93 (empty -> .) ]
  ! BREAK           [ reduce using rule 93 (empty -> .) ]
  ! LPARENCURLY     [ reduce using rule 93 (empty -> .) ]
  ! IF              [ reduce using rule 93 (empty -> .) ]
  ! WHILE           [ reduce using rule 93 (empty -> .) ]
  ! FOR             [ reduce using rule 93 (empty -> .) ]
  ! PRINT           [ reduce using rule 93 (empty -> .) ]
  ! ID              [ reduce using rule 93 (empty -> .) ]
  ! RETURN          [ reduce using rule 93 (empty -> .) ]
  ! RPARENCURLY     [ reduce using rule 93 (empty -> .) ]

    main_statements_break_continue shift and go to state 159
    main_statements                shift and go to state 146
    if_break_continue              shift and go to state 147
    empty                          shift and go to state 148
    statements                     shift and go to state 3
    loop_statement                 shift and go to state 4
    if_statement                   shift and go to state 5
    statement                      shift and go to state 6
    return_statement               shift and go to state 12

state 183

    (29) instruction_statement_break_continue -> LPARENCURLY empty . RPARENCURLY
    (34) instruction_statement -> LPARENCURLY empty . RPARENCURLY
    (23) main_statements_break_continue -> empty .

  ! shift/reduce conflict for RPARENCURLY resolved as shift
    RPARENCURLY     shift and go to state 194
    CONTINUE        reduce using rule 23 (main_statements_break_continue -> empty .)
    BREAK           reduce using rule 23 (main_statements_break_continue -> empty .)
    LPARENCURLY     reduce using rule 23 (main_statements_break_continue -> empty .)
    IF              reduce using rule 23 (main_statements_break_continue -> empty .)
    WHILE           reduce using rule 23 (main_statements_break_continue -> empty .)
    FOR             reduce using rule 23 (main_statements_break_continue -> empty .)
    PRINT           reduce using rule 23 (main_statements_break_continue -> empty .)
    ID              reduce using rule 23 (main_statements_break_continue -> empty .)
    RETURN          reduce using rule 23 (main_statements_break_continue -> empty .)

  ! RPARENCURLY     [ reduce using rule 23 (main_statements_break_continue -> empty .) ]


state 184

    (33) instruction_statement -> LPARENCURLY main_statements . RPARENCURLY
    (18) main_statements_break_continue -> main_statements .
    (2) main_statements -> main_statements . LPARENCURLY statements RPARENCURLY
    (3) main_statements -> main_statements . main_statements
    (1) main_statements -> . LPARENCURLY statements RPARENCURLY main_statements
    (2) main_statements -> . main_statements LPARENCURLY statements RPARENCURLY
    (3) main_statements -> . main_statements main_statements
    (4) main_statements -> . statements
    (5) main_statements -> . loop_statement
    (8) main_statements -> . if_statement
    (42) statements -> . statement SEMICOLON statements
    (43) statements -> . statement SEMICOLON
    (6) loop_statement -> . WHILE LPAREN condition RPAREN loop_instruction_statement
    (7) loop_statement -> . FOR ID ASSIGN num_expression RANGE num_expression loop_instruction_statement
    (11) if_statement -> . IF LPAREN condition RPAREN instruction_statement
    (12) if_statement -> . IF LPAREN condition RPAREN instruction_statement else_statement
    (44) statement -> . PRINT print_expression
    (50) statement -> . ID ASSIGN STRING
    (51) statement -> . ID MATRIX ASSIGN num_expression
    (52) statement -> . ID MATRIX ADDASSIGN num_expression
    (53) statement -> . ID MATRIX SUBASSIGN num_expression
    (54) statement -> . ID MATRIX MULASSIGN num_expression
    (55) statement -> . ID MATRIX DIVASSIGN num_expression
    (56) statement -> . ID ASSIGN num_expression
    (57) statement -> . ID ADDASSIGN num_expression
    (58) statement -> . ID SUBASSIGN num_expression
    (59) statement -> . ID MULASSIGN num_expression
    (60) statement -> . ID DIVASSIGN num_expression
    (77) statement -> . ID ASSIGN matrix_expression
    (78) statement -> . ID ADDASSIGN matrix_expression
    (79) statement -> . ID SUBASSIGN matrix_expression
    (80) statement -> . ID MULASSIGN matrix_expression
    (81) statement -> . ID DIVASSIGN matrix_expression
    (91) statement -> . return_statement
    (92) return_statement -> . RETURN expression

  ! shift/reduce conflict for RPARENCURLY resolved as shift
  ! shift/reduce conflict for LPARENCURLY resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
    RPARENCURLY     shift and go to state 167
    CONTINUE        reduce using rule 18 (main_statements_break_continue -> main_statements .)
    BREAK           reduce using rule 18 (main_statements_break_continue -> main_statements .)
    LPARENCURLY     shift and go to state 15
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    IF              shift and go to state 10
    PRINT           shift and go to state 11
    ID              shift and go to state 9
    RETURN          shift and go to state 13

  ! RPARENCURLY     [ reduce using rule 18 (main_statements_break_continue -> main_statements .) ]
  ! LPARENCURLY     [ reduce using rule 18 (main_statements_break_continue -> main_statements .) ]
  ! IF              [ reduce using rule 18 (main_statements_break_continue -> main_statements .) ]
  ! WHILE           [ reduce using rule 18 (main_statements_break_continue -> main_statements .) ]
  ! FOR             [ reduce using rule 18 (main_statements_break_continue -> main_statements .) ]
  ! PRINT           [ reduce using rule 18 (main_statements_break_continue -> main_statements .) ]
  ! ID              [ reduce using rule 18 (main_statements_break_continue -> main_statements .) ]
  ! RETURN          [ reduce using rule 18 (main_statements_break_continue -> main_statements .) ]

    main_statements                shift and go to state 14
    statements                     shift and go to state 3
    loop_statement                 shift and go to state 4
    if_statement                   shift and go to state 5
    statement                      shift and go to state 6
    return_statement               shift and go to state 12

state 185

    (30) instruction_statement_break_continue -> statement SEMICOLON .
    (35) instruction_statement -> statement SEMICOLON .

  ! reduce/reduce conflict for ELSE resolved using rule 30 (instruction_statement_break_continue -> statement SEMICOLON .)
  ! reduce/reduce conflict for LPARENCURLY resolved using rule 30 (instruction_statement_break_continue -> statement SEMICOLON .)
  ! reduce/reduce conflict for WHILE resolved using rule 30 (instruction_statement_break_continue -> statement SEMICOLON .)
  ! reduce/reduce conflict for FOR resolved using rule 30 (instruction_statement_break_continue -> statement SEMICOLON .)
  ! reduce/reduce conflict for IF resolved using rule 30 (instruction_statement_break_continue -> statement SEMICOLON .)
  ! reduce/reduce conflict for PRINT resolved using rule 30 (instruction_statement_break_continue -> statement SEMICOLON .)
  ! reduce/reduce conflict for ID resolved using rule 30 (instruction_statement_break_continue -> statement SEMICOLON .)
  ! reduce/reduce conflict for RETURN resolved using rule 30 (instruction_statement_break_continue -> statement SEMICOLON .)
  ! reduce/reduce conflict for RPARENCURLY resolved using rule 30 (instruction_statement_break_continue -> statement SEMICOLON .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 30 (instruction_statement_break_continue -> statement SEMICOLON .)
  ! reduce/reduce conflict for BREAK resolved using rule 30 (instruction_statement_break_continue -> statement SEMICOLON .)
    ELSE            reduce using rule 30 (instruction_statement_break_continue -> statement SEMICOLON .)
    RPARENCURLY     reduce using rule 30 (instruction_statement_break_continue -> statement SEMICOLON .)
    CONTINUE        reduce using rule 30 (instruction_statement_break_continue -> statement SEMICOLON .)
    BREAK           reduce using rule 30 (instruction_statement_break_continue -> statement SEMICOLON .)
    LPARENCURLY     reduce using rule 30 (instruction_statement_break_continue -> statement SEMICOLON .)
    IF              reduce using rule 30 (instruction_statement_break_continue -> statement SEMICOLON .)
    WHILE           reduce using rule 30 (instruction_statement_break_continue -> statement SEMICOLON .)
    FOR             reduce using rule 30 (instruction_statement_break_continue -> statement SEMICOLON .)
    PRINT           reduce using rule 30 (instruction_statement_break_continue -> statement SEMICOLON .)
    ID              reduce using rule 30 (instruction_statement_break_continue -> statement SEMICOLON .)
    RETURN          reduce using rule 30 (instruction_statement_break_continue -> statement SEMICOLON .)

  ! ELSE            [ reduce using rule 35 (instruction_statement -> statement SEMICOLON .) ]
  ! LPARENCURLY     [ reduce using rule 35 (instruction_statement -> statement SEMICOLON .) ]
  ! WHILE           [ reduce using rule 35 (instruction_statement -> statement SEMICOLON .) ]
  ! FOR             [ reduce using rule 35 (instruction_statement -> statement SEMICOLON .) ]
  ! IF              [ reduce using rule 35 (instruction_statement -> statement SEMICOLON .) ]
  ! PRINT           [ reduce using rule 35 (instruction_statement -> statement SEMICOLON .) ]
  ! ID              [ reduce using rule 35 (instruction_statement -> statement SEMICOLON .) ]
  ! RETURN          [ reduce using rule 35 (instruction_statement -> statement SEMICOLON .) ]
  ! RPARENCURLY     [ reduce using rule 35 (instruction_statement -> statement SEMICOLON .) ]
  ! CONTINUE        [ reduce using rule 35 (instruction_statement -> statement SEMICOLON .) ]
  ! BREAK           [ reduce using rule 35 (instruction_statement -> statement SEMICOLON .) ]


state 186

    (31) instruction_statement_break_continue -> BREAK SEMICOLON .

    ELSE            reduce using rule 31 (instruction_statement_break_continue -> BREAK SEMICOLON .)
    RPARENCURLY     reduce using rule 31 (instruction_statement_break_continue -> BREAK SEMICOLON .)
    CONTINUE        reduce using rule 31 (instruction_statement_break_continue -> BREAK SEMICOLON .)
    BREAK           reduce using rule 31 (instruction_statement_break_continue -> BREAK SEMICOLON .)
    LPARENCURLY     reduce using rule 31 (instruction_statement_break_continue -> BREAK SEMICOLON .)
    IF              reduce using rule 31 (instruction_statement_break_continue -> BREAK SEMICOLON .)
    WHILE           reduce using rule 31 (instruction_statement_break_continue -> BREAK SEMICOLON .)
    FOR             reduce using rule 31 (instruction_statement_break_continue -> BREAK SEMICOLON .)
    PRINT           reduce using rule 31 (instruction_statement_break_continue -> BREAK SEMICOLON .)
    ID              reduce using rule 31 (instruction_statement_break_continue -> BREAK SEMICOLON .)
    RETURN          reduce using rule 31 (instruction_statement_break_continue -> BREAK SEMICOLON .)


state 187

    (32) instruction_statement_break_continue -> CONTINUE SEMICOLON .

    ELSE            reduce using rule 32 (instruction_statement_break_continue -> CONTINUE SEMICOLON .)
    RPARENCURLY     reduce using rule 32 (instruction_statement_break_continue -> CONTINUE SEMICOLON .)
    CONTINUE        reduce using rule 32 (instruction_statement_break_continue -> CONTINUE SEMICOLON .)
    BREAK           reduce using rule 32 (instruction_statement_break_continue -> CONTINUE SEMICOLON .)
    LPARENCURLY     reduce using rule 32 (instruction_statement_break_continue -> CONTINUE SEMICOLON .)
    IF              reduce using rule 32 (instruction_statement_break_continue -> CONTINUE SEMICOLON .)
    WHILE           reduce using rule 32 (instruction_statement_break_continue -> CONTINUE SEMICOLON .)
    FOR             reduce using rule 32 (instruction_statement_break_continue -> CONTINUE SEMICOLON .)
    PRINT           reduce using rule 32 (instruction_statement_break_continue -> CONTINUE SEMICOLON .)
    ID              reduce using rule 32 (instruction_statement_break_continue -> CONTINUE SEMICOLON .)
    RETURN          reduce using rule 32 (instruction_statement_break_continue -> CONTINUE SEMICOLON .)


state 188

    (24) else_break_continue -> ELSE instruction_statement_break_continue .

    RPARENCURLY     reduce using rule 24 (else_break_continue -> ELSE instruction_statement_break_continue .)
    CONTINUE        reduce using rule 24 (else_break_continue -> ELSE instruction_statement_break_continue .)
    BREAK           reduce using rule 24 (else_break_continue -> ELSE instruction_statement_break_continue .)
    LPARENCURLY     reduce using rule 24 (else_break_continue -> ELSE instruction_statement_break_continue .)
    IF              reduce using rule 24 (else_break_continue -> ELSE instruction_statement_break_continue .)
    WHILE           reduce using rule 24 (else_break_continue -> ELSE instruction_statement_break_continue .)
    FOR             reduce using rule 24 (else_break_continue -> ELSE instruction_statement_break_continue .)
    PRINT           reduce using rule 24 (else_break_continue -> ELSE instruction_statement_break_continue .)
    ID              reduce using rule 24 (else_break_continue -> ELSE instruction_statement_break_continue .)
    RETURN          reduce using rule 24 (else_break_continue -> ELSE instruction_statement_break_continue .)


state 189

    (25) else_break_continue -> ELSE if_break_continue .

    RPARENCURLY     reduce using rule 25 (else_break_continue -> ELSE if_break_continue .)
    CONTINUE        reduce using rule 25 (else_break_continue -> ELSE if_break_continue .)
    BREAK           reduce using rule 25 (else_break_continue -> ELSE if_break_continue .)
    LPARENCURLY     reduce using rule 25 (else_break_continue -> ELSE if_break_continue .)
    IF              reduce using rule 25 (else_break_continue -> ELSE if_break_continue .)
    WHILE           reduce using rule 25 (else_break_continue -> ELSE if_break_continue .)
    FOR             reduce using rule 25 (else_break_continue -> ELSE if_break_continue .)
    PRINT           reduce using rule 25 (else_break_continue -> ELSE if_break_continue .)
    ID              reduce using rule 25 (else_break_continue -> ELSE if_break_continue .)
    RETURN          reduce using rule 25 (else_break_continue -> ELSE if_break_continue .)


state 190

    (28) instruction_statement_break_continue -> LPARENCURLY . main_statements_break_continue RPARENCURLY
    (29) instruction_statement_break_continue -> LPARENCURLY . empty RPARENCURLY
    (18) main_statements_break_continue -> . main_statements
    (19) main_statements_break_continue -> . if_break_continue
    (20) main_statements_break_continue -> . main_statements_break_continue main_statements_break_continue
    (21) main_statements_break_continue -> . main_statements_break_continue CONTINUE SEMICOLON main_statements_break_continue
    (22) main_statements_break_continue -> . main_statements_break_continue BREAK SEMICOLON main_statements_break_continue
    (23) main_statements_break_continue -> . empty
    (93) empty -> .
    (1) main_statements -> . LPARENCURLY statements RPARENCURLY main_statements
    (2) main_statements -> . main_statements LPARENCURLY statements RPARENCURLY
    (3) main_statements -> . main_statements main_statements
    (4) main_statements -> . statements
    (5) main_statements -> . loop_statement
    (8) main_statements -> . if_statement
    (26) if_break_continue -> . IF LPAREN condition RPAREN instruction_statement_break_continue
    (27) if_break_continue -> . IF LPAREN condition RPAREN instruction_statement_break_continue else_break_continue
    (42) statements -> . statement SEMICOLON statements
    (43) statements -> . statement SEMICOLON
    (6) loop_statement -> . WHILE LPAREN condition RPAREN loop_instruction_statement
    (7) loop_statement -> . FOR ID ASSIGN num_expression RANGE num_expression loop_instruction_statement
    (11) if_statement -> . IF LPAREN condition RPAREN instruction_statement
    (12) if_statement -> . IF LPAREN condition RPAREN instruction_statement else_statement
    (44) statement -> . PRINT print_expression
    (50) statement -> . ID ASSIGN STRING
    (51) statement -> . ID MATRIX ASSIGN num_expression
    (52) statement -> . ID MATRIX ADDASSIGN num_expression
    (53) statement -> . ID MATRIX SUBASSIGN num_expression
    (54) statement -> . ID MATRIX MULASSIGN num_expression
    (55) statement -> . ID MATRIX DIVASSIGN num_expression
    (56) statement -> . ID ASSIGN num_expression
    (57) statement -> . ID ADDASSIGN num_expression
    (58) statement -> . ID SUBASSIGN num_expression
    (59) statement -> . ID MULASSIGN num_expression
    (60) statement -> . ID DIVASSIGN num_expression
    (77) statement -> . ID ASSIGN matrix_expression
    (78) statement -> . ID ADDASSIGN matrix_expression
    (79) statement -> . ID SUBASSIGN matrix_expression
    (80) statement -> . ID MULASSIGN matrix_expression
    (81) statement -> . ID DIVASSIGN matrix_expression
    (91) statement -> . return_statement
    (92) return_statement -> . RETURN expression

  ! shift/reduce conflict for LPARENCURLY resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
    RPARENCURLY     reduce using rule 93 (empty -> .)
    CONTINUE        reduce using rule 93 (empty -> .)
    BREAK           reduce using rule 93 (empty -> .)
    LPARENCURLY     shift and go to state 2
    IF              shift and go to state 149
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    PRINT           shift and go to state 11
    ID              shift and go to state 9
    RETURN          shift and go to state 13

  ! LPARENCURLY     [ reduce using rule 93 (empty -> .) ]
  ! IF              [ reduce using rule 93 (empty -> .) ]
  ! WHILE           [ reduce using rule 93 (empty -> .) ]
  ! FOR             [ reduce using rule 93 (empty -> .) ]
  ! PRINT           [ reduce using rule 93 (empty -> .) ]
  ! ID              [ reduce using rule 93 (empty -> .) ]
  ! RETURN          [ reduce using rule 93 (empty -> .) ]

    main_statements_break_continue shift and go to state 182
    empty                          shift and go to state 195
    main_statements                shift and go to state 146
    if_break_continue              shift and go to state 147
    statements                     shift and go to state 3
    loop_statement                 shift and go to state 4
    if_statement                   shift and go to state 5
    statement                      shift and go to state 6
    return_statement               shift and go to state 12

state 191

    (30) instruction_statement_break_continue -> statement . SEMICOLON

    SEMICOLON       shift and go to state 196


state 192

    (26) if_break_continue -> IF . LPAREN condition RPAREN instruction_statement_break_continue
    (27) if_break_continue -> IF . LPAREN condition RPAREN instruction_statement_break_continue else_break_continue

    LPAREN          shift and go to state 197


state 193

    (28) instruction_statement_break_continue -> LPARENCURLY main_statements_break_continue RPARENCURLY .

    ELSE            reduce using rule 28 (instruction_statement_break_continue -> LPARENCURLY main_statements_break_continue RPARENCURLY .)
    RPARENCURLY     reduce using rule 28 (instruction_statement_break_continue -> LPARENCURLY main_statements_break_continue RPARENCURLY .)
    CONTINUE        reduce using rule 28 (instruction_statement_break_continue -> LPARENCURLY main_statements_break_continue RPARENCURLY .)
    BREAK           reduce using rule 28 (instruction_statement_break_continue -> LPARENCURLY main_statements_break_continue RPARENCURLY .)
    LPARENCURLY     reduce using rule 28 (instruction_statement_break_continue -> LPARENCURLY main_statements_break_continue RPARENCURLY .)
    IF              reduce using rule 28 (instruction_statement_break_continue -> LPARENCURLY main_statements_break_continue RPARENCURLY .)
    WHILE           reduce using rule 28 (instruction_statement_break_continue -> LPARENCURLY main_statements_break_continue RPARENCURLY .)
    FOR             reduce using rule 28 (instruction_statement_break_continue -> LPARENCURLY main_statements_break_continue RPARENCURLY .)
    PRINT           reduce using rule 28 (instruction_statement_break_continue -> LPARENCURLY main_statements_break_continue RPARENCURLY .)
    ID              reduce using rule 28 (instruction_statement_break_continue -> LPARENCURLY main_statements_break_continue RPARENCURLY .)
    RETURN          reduce using rule 28 (instruction_statement_break_continue -> LPARENCURLY main_statements_break_continue RPARENCURLY .)


state 194

    (29) instruction_statement_break_continue -> LPARENCURLY empty RPARENCURLY .
    (34) instruction_statement -> LPARENCURLY empty RPARENCURLY .

  ! reduce/reduce conflict for ELSE resolved using rule 29 (instruction_statement_break_continue -> LPARENCURLY empty RPARENCURLY .)
  ! reduce/reduce conflict for LPARENCURLY resolved using rule 29 (instruction_statement_break_continue -> LPARENCURLY empty RPARENCURLY .)
  ! reduce/reduce conflict for WHILE resolved using rule 29 (instruction_statement_break_continue -> LPARENCURLY empty RPARENCURLY .)
  ! reduce/reduce conflict for FOR resolved using rule 29 (instruction_statement_break_continue -> LPARENCURLY empty RPARENCURLY .)
  ! reduce/reduce conflict for IF resolved using rule 29 (instruction_statement_break_continue -> LPARENCURLY empty RPARENCURLY .)
  ! reduce/reduce conflict for PRINT resolved using rule 29 (instruction_statement_break_continue -> LPARENCURLY empty RPARENCURLY .)
  ! reduce/reduce conflict for ID resolved using rule 29 (instruction_statement_break_continue -> LPARENCURLY empty RPARENCURLY .)
  ! reduce/reduce conflict for RETURN resolved using rule 29 (instruction_statement_break_continue -> LPARENCURLY empty RPARENCURLY .)
  ! reduce/reduce conflict for RPARENCURLY resolved using rule 29 (instruction_statement_break_continue -> LPARENCURLY empty RPARENCURLY .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 29 (instruction_statement_break_continue -> LPARENCURLY empty RPARENCURLY .)
  ! reduce/reduce conflict for BREAK resolved using rule 29 (instruction_statement_break_continue -> LPARENCURLY empty RPARENCURLY .)
    ELSE            reduce using rule 29 (instruction_statement_break_continue -> LPARENCURLY empty RPARENCURLY .)
    RPARENCURLY     reduce using rule 29 (instruction_statement_break_continue -> LPARENCURLY empty RPARENCURLY .)
    CONTINUE        reduce using rule 29 (instruction_statement_break_continue -> LPARENCURLY empty RPARENCURLY .)
    BREAK           reduce using rule 29 (instruction_statement_break_continue -> LPARENCURLY empty RPARENCURLY .)
    LPARENCURLY     reduce using rule 29 (instruction_statement_break_continue -> LPARENCURLY empty RPARENCURLY .)
    IF              reduce using rule 29 (instruction_statement_break_continue -> LPARENCURLY empty RPARENCURLY .)
    WHILE           reduce using rule 29 (instruction_statement_break_continue -> LPARENCURLY empty RPARENCURLY .)
    FOR             reduce using rule 29 (instruction_statement_break_continue -> LPARENCURLY empty RPARENCURLY .)
    PRINT           reduce using rule 29 (instruction_statement_break_continue -> LPARENCURLY empty RPARENCURLY .)
    ID              reduce using rule 29 (instruction_statement_break_continue -> LPARENCURLY empty RPARENCURLY .)
    RETURN          reduce using rule 29 (instruction_statement_break_continue -> LPARENCURLY empty RPARENCURLY .)

  ! ELSE            [ reduce using rule 34 (instruction_statement -> LPARENCURLY empty RPARENCURLY .) ]
  ! LPARENCURLY     [ reduce using rule 34 (instruction_statement -> LPARENCURLY empty RPARENCURLY .) ]
  ! WHILE           [ reduce using rule 34 (instruction_statement -> LPARENCURLY empty RPARENCURLY .) ]
  ! FOR             [ reduce using rule 34 (instruction_statement -> LPARENCURLY empty RPARENCURLY .) ]
  ! IF              [ reduce using rule 34 (instruction_statement -> LPARENCURLY empty RPARENCURLY .) ]
  ! PRINT           [ reduce using rule 34 (instruction_statement -> LPARENCURLY empty RPARENCURLY .) ]
  ! ID              [ reduce using rule 34 (instruction_statement -> LPARENCURLY empty RPARENCURLY .) ]
  ! RETURN          [ reduce using rule 34 (instruction_statement -> LPARENCURLY empty RPARENCURLY .) ]
  ! RPARENCURLY     [ reduce using rule 34 (instruction_statement -> LPARENCURLY empty RPARENCURLY .) ]
  ! CONTINUE        [ reduce using rule 34 (instruction_statement -> LPARENCURLY empty RPARENCURLY .) ]
  ! BREAK           [ reduce using rule 34 (instruction_statement -> LPARENCURLY empty RPARENCURLY .) ]


state 195

    (29) instruction_statement_break_continue -> LPARENCURLY empty . RPARENCURLY
    (23) main_statements_break_continue -> empty .

  ! shift/reduce conflict for RPARENCURLY resolved as shift
    RPARENCURLY     shift and go to state 198
    CONTINUE        reduce using rule 23 (main_statements_break_continue -> empty .)
    BREAK           reduce using rule 23 (main_statements_break_continue -> empty .)
    LPARENCURLY     reduce using rule 23 (main_statements_break_continue -> empty .)
    IF              reduce using rule 23 (main_statements_break_continue -> empty .)
    WHILE           reduce using rule 23 (main_statements_break_continue -> empty .)
    FOR             reduce using rule 23 (main_statements_break_continue -> empty .)
    PRINT           reduce using rule 23 (main_statements_break_continue -> empty .)
    ID              reduce using rule 23 (main_statements_break_continue -> empty .)
    RETURN          reduce using rule 23 (main_statements_break_continue -> empty .)

  ! RPARENCURLY     [ reduce using rule 23 (main_statements_break_continue -> empty .) ]


state 196

    (30) instruction_statement_break_continue -> statement SEMICOLON .

    RPARENCURLY     reduce using rule 30 (instruction_statement_break_continue -> statement SEMICOLON .)
    CONTINUE        reduce using rule 30 (instruction_statement_break_continue -> statement SEMICOLON .)
    BREAK           reduce using rule 30 (instruction_statement_break_continue -> statement SEMICOLON .)
    LPARENCURLY     reduce using rule 30 (instruction_statement_break_continue -> statement SEMICOLON .)
    IF              reduce using rule 30 (instruction_statement_break_continue -> statement SEMICOLON .)
    WHILE           reduce using rule 30 (instruction_statement_break_continue -> statement SEMICOLON .)
    FOR             reduce using rule 30 (instruction_statement_break_continue -> statement SEMICOLON .)
    PRINT           reduce using rule 30 (instruction_statement_break_continue -> statement SEMICOLON .)
    ID              reduce using rule 30 (instruction_statement_break_continue -> statement SEMICOLON .)
    RETURN          reduce using rule 30 (instruction_statement_break_continue -> statement SEMICOLON .)
    ELSE            reduce using rule 30 (instruction_statement_break_continue -> statement SEMICOLON .)


state 197

    (26) if_break_continue -> IF LPAREN . condition RPAREN instruction_statement_break_continue
    (27) if_break_continue -> IF LPAREN . condition RPAREN instruction_statement_break_continue else_break_continue
    (36) condition -> . num_expression EQUALITY num_expression
    (37) condition -> . num_expression INEQUALITY num_expression
    (38) condition -> . num_expression GREATER num_expression
    (39) condition -> . num_expression GREATER_EQUAL num_expression
    (40) condition -> . num_expression LESS num_expression
    (41) condition -> . num_expression LESS_EQUAL num_expression
    (61) num_expression -> . ID
    (63) num_expression -> . LPAREN num_expression RPAREN
    (65) num_expression -> . num_expression ADD num_expression
    (66) num_expression -> . num_expression SUB num_expression
    (67) num_expression -> . num_expression MUL num_expression
    (68) num_expression -> . num_expression DIV num_expression
    (82) num_expression -> . SUB num_expression
    (85) num_expression -> . INTNUM
    (86) num_expression -> . FLOATNUM

    ID              shift and go to state 48
    LPAREN          shift and go to state 45
    SUB             shift and go to state 49
    INTNUM          shift and go to state 35
    FLOATNUM        shift and go to state 36

    condition                      shift and go to state 199
    num_expression                 shift and go to state 47

state 198

    (29) instruction_statement_break_continue -> LPARENCURLY empty RPARENCURLY .

    RPARENCURLY     reduce using rule 29 (instruction_statement_break_continue -> LPARENCURLY empty RPARENCURLY .)
    CONTINUE        reduce using rule 29 (instruction_statement_break_continue -> LPARENCURLY empty RPARENCURLY .)
    BREAK           reduce using rule 29 (instruction_statement_break_continue -> LPARENCURLY empty RPARENCURLY .)
    LPARENCURLY     reduce using rule 29 (instruction_statement_break_continue -> LPARENCURLY empty RPARENCURLY .)
    IF              reduce using rule 29 (instruction_statement_break_continue -> LPARENCURLY empty RPARENCURLY .)
    WHILE           reduce using rule 29 (instruction_statement_break_continue -> LPARENCURLY empty RPARENCURLY .)
    FOR             reduce using rule 29 (instruction_statement_break_continue -> LPARENCURLY empty RPARENCURLY .)
    PRINT           reduce using rule 29 (instruction_statement_break_continue -> LPARENCURLY empty RPARENCURLY .)
    ID              reduce using rule 29 (instruction_statement_break_continue -> LPARENCURLY empty RPARENCURLY .)
    RETURN          reduce using rule 29 (instruction_statement_break_continue -> LPARENCURLY empty RPARENCURLY .)
    ELSE            reduce using rule 29 (instruction_statement_break_continue -> LPARENCURLY empty RPARENCURLY .)


state 199

    (26) if_break_continue -> IF LPAREN condition . RPAREN instruction_statement_break_continue
    (27) if_break_continue -> IF LPAREN condition . RPAREN instruction_statement_break_continue else_break_continue

    RPAREN          shift and go to state 200


state 200

    (26) if_break_continue -> IF LPAREN condition RPAREN . instruction_statement_break_continue
    (27) if_break_continue -> IF LPAREN condition RPAREN . instruction_statement_break_continue else_break_continue
    (28) instruction_statement_break_continue -> . LPARENCURLY main_statements_break_continue RPARENCURLY
    (29) instruction_statement_break_continue -> . LPARENCURLY empty RPARENCURLY
    (30) instruction_statement_break_continue -> . statement SEMICOLON
    (31) instruction_statement_break_continue -> . BREAK SEMICOLON
    (32) instruction_statement_break_continue -> . CONTINUE SEMICOLON
    (44) statement -> . PRINT print_expression
    (50) statement -> . ID ASSIGN STRING
    (51) statement -> . ID MATRIX ASSIGN num_expression
    (52) statement -> . ID MATRIX ADDASSIGN num_expression
    (53) statement -> . ID MATRIX SUBASSIGN num_expression
    (54) statement -> . ID MATRIX MULASSIGN num_expression
    (55) statement -> . ID MATRIX DIVASSIGN num_expression
    (56) statement -> . ID ASSIGN num_expression
    (57) statement -> . ID ADDASSIGN num_expression
    (58) statement -> . ID SUBASSIGN num_expression
    (59) statement -> . ID MULASSIGN num_expression
    (60) statement -> . ID DIVASSIGN num_expression
    (77) statement -> . ID ASSIGN matrix_expression
    (78) statement -> . ID ADDASSIGN matrix_expression
    (79) statement -> . ID SUBASSIGN matrix_expression
    (80) statement -> . ID MULASSIGN matrix_expression
    (81) statement -> . ID DIVASSIGN matrix_expression
    (91) statement -> . return_statement
    (92) return_statement -> . RETURN expression

    LPARENCURLY     shift and go to state 190
    BREAK           shift and go to state 178
    CONTINUE        shift and go to state 179
    PRINT           shift and go to state 11
    ID              shift and go to state 9
    RETURN          shift and go to state 13

    instruction_statement_break_continue shift and go to state 175
    statement                      shift and go to state 191
    return_statement               shift and go to state 12
WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LPARENCURLY in state 14 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 14 resolved as shift
WARNING: shift/reduce conflict for FOR in state 14 resolved as shift
WARNING: shift/reduce conflict for IF in state 14 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 14 resolved as shift
WARNING: shift/reduce conflict for ID in state 14 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 14 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 17 resolved as shift
WARNING: shift/reduce conflict for ID in state 17 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 17 resolved as shift
WARNING: shift/reduce conflict for LPARENCURLY in state 89 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 89 resolved as shift
WARNING: shift/reduce conflict for FOR in state 89 resolved as shift
WARNING: shift/reduce conflict for IF in state 89 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 89 resolved as shift
WARNING: shift/reduce conflict for ID in state 89 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 89 resolved as shift
WARNING: shift/reduce conflict for LPARENCURLY in state 90 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 90 resolved as shift
WARNING: shift/reduce conflict for FOR in state 90 resolved as shift
WARNING: shift/reduce conflict for IF in state 90 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 90 resolved as shift
WARNING: shift/reduce conflict for ID in state 90 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 90 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 105 resolved as shift
WARNING: shift/reduce conflict for ADD in state 117 resolved as shift
WARNING: shift/reduce conflict for SUB in state 117 resolved as shift
WARNING: shift/reduce conflict for MUL in state 117 resolved as shift
WARNING: shift/reduce conflict for DIV in state 117 resolved as shift
WARNING: shift/reduce conflict for DOTADD in state 117 resolved as shift
WARNING: shift/reduce conflict for DOTSUB in state 117 resolved as shift
WARNING: shift/reduce conflict for DOTMUL in state 117 resolved as shift
WARNING: shift/reduce conflict for DOTDIV in state 117 resolved as shift
WARNING: shift/reduce conflict for TRANSPOSE in state 117 resolved as shift
WARNING: shift/reduce conflict for ADD in state 118 resolved as shift
WARNING: shift/reduce conflict for SUB in state 118 resolved as shift
WARNING: shift/reduce conflict for MUL in state 118 resolved as shift
WARNING: shift/reduce conflict for DIV in state 118 resolved as shift
WARNING: shift/reduce conflict for DOTADD in state 118 resolved as shift
WARNING: shift/reduce conflict for DOTSUB in state 118 resolved as shift
WARNING: shift/reduce conflict for DOTMUL in state 118 resolved as shift
WARNING: shift/reduce conflict for DOTDIV in state 118 resolved as shift
WARNING: shift/reduce conflict for TRANSPOSE in state 118 resolved as shift
WARNING: shift/reduce conflict for ADD in state 119 resolved as shift
WARNING: shift/reduce conflict for SUB in state 119 resolved as shift
WARNING: shift/reduce conflict for MUL in state 119 resolved as shift
WARNING: shift/reduce conflict for DIV in state 119 resolved as shift
WARNING: shift/reduce conflict for DOTADD in state 119 resolved as shift
WARNING: shift/reduce conflict for DOTSUB in state 119 resolved as shift
WARNING: shift/reduce conflict for DOTMUL in state 119 resolved as shift
WARNING: shift/reduce conflict for DOTDIV in state 119 resolved as shift
WARNING: shift/reduce conflict for TRANSPOSE in state 119 resolved as shift
WARNING: shift/reduce conflict for ADD in state 120 resolved as shift
WARNING: shift/reduce conflict for SUB in state 120 resolved as shift
WARNING: shift/reduce conflict for MUL in state 120 resolved as shift
WARNING: shift/reduce conflict for DIV in state 120 resolved as shift
WARNING: shift/reduce conflict for DOTADD in state 120 resolved as shift
WARNING: shift/reduce conflict for DOTSUB in state 120 resolved as shift
WARNING: shift/reduce conflict for DOTMUL in state 120 resolved as shift
WARNING: shift/reduce conflict for DOTDIV in state 120 resolved as shift
WARNING: shift/reduce conflict for TRANSPOSE in state 120 resolved as shift
WARNING: shift/reduce conflict for LPARENCURLY in state 127 resolved as shift
WARNING: shift/reduce conflict for IF in state 127 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 127 resolved as shift
WARNING: shift/reduce conflict for FOR in state 127 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 127 resolved as shift
WARNING: shift/reduce conflict for ID in state 127 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 127 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 145 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 145 resolved as shift
WARNING: shift/reduce conflict for LPARENCURLY in state 145 resolved as shift
WARNING: shift/reduce conflict for IF in state 145 resolved as shift
WARNING: shift/reduce conflict for RPARENCURLY in state 145 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 145 resolved as shift
WARNING: shift/reduce conflict for FOR in state 145 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 145 resolved as shift
WARNING: shift/reduce conflict for ID in state 145 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 145 resolved as shift
WARNING: shift/reduce conflict for LPARENCURLY in state 146 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 146 resolved as shift
WARNING: shift/reduce conflict for FOR in state 146 resolved as shift
WARNING: shift/reduce conflict for IF in state 146 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 146 resolved as shift
WARNING: shift/reduce conflict for ID in state 146 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 146 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 159 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 159 resolved as shift
WARNING: shift/reduce conflict for LPARENCURLY in state 159 resolved as shift
WARNING: shift/reduce conflict for IF in state 159 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 159 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 159 resolved as shift
WARNING: shift/reduce conflict for LPARENCURLY in state 159 resolved as shift
WARNING: shift/reduce conflict for IF in state 159 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 159 resolved as shift
WARNING: shift/reduce conflict for FOR in state 159 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 159 resolved as shift
WARNING: shift/reduce conflict for ID in state 159 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 159 resolved as shift
WARNING: shift/reduce conflict for LPARENCURLY in state 169 resolved as shift
WARNING: shift/reduce conflict for IF in state 169 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 169 resolved as shift
WARNING: shift/reduce conflict for FOR in state 169 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 169 resolved as shift
WARNING: shift/reduce conflict for ID in state 169 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 169 resolved as shift
WARNING: shift/reduce conflict for LPARENCURLY in state 170 resolved as shift
WARNING: shift/reduce conflict for IF in state 170 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 170 resolved as shift
WARNING: shift/reduce conflict for FOR in state 170 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 170 resolved as shift
WARNING: shift/reduce conflict for ID in state 170 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 170 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 172 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 172 resolved as shift
WARNING: shift/reduce conflict for LPARENCURLY in state 172 resolved as shift
WARNING: shift/reduce conflict for IF in state 172 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 172 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 172 resolved as shift
WARNING: shift/reduce conflict for LPARENCURLY in state 172 resolved as shift
WARNING: shift/reduce conflict for IF in state 172 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 172 resolved as shift
WARNING: shift/reduce conflict for FOR in state 172 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 172 resolved as shift
WARNING: shift/reduce conflict for ID in state 172 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 172 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 173 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 173 resolved as shift
WARNING: shift/reduce conflict for LPARENCURLY in state 173 resolved as shift
WARNING: shift/reduce conflict for IF in state 173 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 173 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 173 resolved as shift
WARNING: shift/reduce conflict for LPARENCURLY in state 173 resolved as shift
WARNING: shift/reduce conflict for IF in state 173 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 173 resolved as shift
WARNING: shift/reduce conflict for FOR in state 173 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 173 resolved as shift
WARNING: shift/reduce conflict for ID in state 173 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 173 resolved as shift
WARNING: shift/reduce conflict for LPARENCURLY in state 176 resolved as shift
WARNING: shift/reduce conflict for IF in state 176 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 176 resolved as shift
WARNING: shift/reduce conflict for FOR in state 176 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 176 resolved as shift
WARNING: shift/reduce conflict for ID in state 176 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 176 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 182 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 182 resolved as shift
WARNING: shift/reduce conflict for LPARENCURLY in state 182 resolved as shift
WARNING: shift/reduce conflict for IF in state 182 resolved as shift
WARNING: shift/reduce conflict for RPARENCURLY in state 182 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 182 resolved as shift
WARNING: shift/reduce conflict for FOR in state 182 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 182 resolved as shift
WARNING: shift/reduce conflict for ID in state 182 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 182 resolved as shift
WARNING: shift/reduce conflict for RPARENCURLY in state 183 resolved as shift
WARNING: shift/reduce conflict for RPARENCURLY in state 184 resolved as shift
WARNING: shift/reduce conflict for LPARENCURLY in state 184 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 184 resolved as shift
WARNING: shift/reduce conflict for FOR in state 184 resolved as shift
WARNING: shift/reduce conflict for IF in state 184 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 184 resolved as shift
WARNING: shift/reduce conflict for ID in state 184 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 184 resolved as shift
WARNING: shift/reduce conflict for LPARENCURLY in state 190 resolved as shift
WARNING: shift/reduce conflict for IF in state 190 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 190 resolved as shift
WARNING: shift/reduce conflict for FOR in state 190 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 190 resolved as shift
WARNING: shift/reduce conflict for ID in state 190 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 190 resolved as shift
WARNING: shift/reduce conflict for RPARENCURLY in state 195 resolved as shift
WARNING: reduce/reduce conflict in state 32 resolved using rule (num_expression -> ID)
WARNING: rejected rule (matrix_expression -> ID) in state 32
WARNING: reduce/reduce conflict in state 159 resolved using rule (main_statements_break_continue -> main_statements_break_continue main_statements_break_continue)
WARNING: rejected rule (empty -> <empty>) in state 159
WARNING: reduce/reduce conflict in state 172 resolved using rule (main_statements_break_continue -> main_statements_break_continue CONTINUE SEMICOLON main_statements_break_continue)
WARNING: rejected rule (empty -> <empty>) in state 172
WARNING: reduce/reduce conflict in state 173 resolved using rule (main_statements_break_continue -> main_statements_break_continue BREAK SEMICOLON main_statements_break_continue)
WARNING: rejected rule (empty -> <empty>) in state 173
WARNING: reduce/reduce conflict in state 185 resolved using rule (instruction_statement_break_continue -> statement SEMICOLON)
WARNING: rejected rule (instruction_statement -> statement SEMICOLON) in state 185
WARNING: reduce/reduce conflict in state 194 resolved using rule (instruction_statement_break_continue -> LPARENCURLY empty RPARENCURLY)
WARNING: rejected rule (instruction_statement -> LPARENCURLY empty RPARENCURLY) in state 194
